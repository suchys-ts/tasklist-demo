// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test add todo Render main page with add item open 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "not": [Function],
        "only": [Function],
        "unit": "px",
        "up": [Function],
        "values": Object {
          "lg": 1200,
          "md": 900,
          "sm": 600,
          "xl": 1536,
          "xs": 0,
        },
      },
      "components": Object {},
      "direction": "ltr",
      "mixins": Object {
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fff",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#c62828",
          "light": "#ef5350",
          "main": "#d32f2f",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#f5f5f5",
          "A200": "#eeeeee",
          "A400": "#bdbdbd",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#01579b",
          "light": "#03a9f4",
          "main": "#0288d1",
        },
        "mode": "light",
        "primary": Object {
          "contrastText": "#fff",
          "dark": "#1565c0",
          "light": "#42a5f5",
          "main": "#1976d2",
        },
        "secondary": Object {
          "contrastText": "#fff",
          "dark": "#7b1fa2",
          "light": "#ba68c8",
          "main": "#9c27b0",
        },
        "success": Object {
          "contrastText": "#fff",
          "dark": "#1b5e20",
          "light": "#4caf50",
          "main": "#2e7d32",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.6)",
        },
        "tonalOffset": 0.2,
        "warning": Object {
          "contrastText": "#fff",
          "dark": "#e65100",
          "light": "#ff9800",
          "main": "#ed6c02",
        },
      },
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "6rem",
          "fontWeight": 300,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.167,
        },
        "h2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.2,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.167,
        },
        "h4": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.235,
        },
        "h5": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.5rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.334,
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <Provider
    store={
      Object {
        "@@observable": [Function],
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Root>
      <ForwardRef(Container)
        className="makeStyles-mainContainer-10"
        maxWidth="md"
      >
        <MuiContainerRoot
          as="div"
          className="MuiContainer-root MuiContainer-maxWidthMd makeStyles-mainContainer-10"
          ownerState={
            Object {
              "children": <ForwardRef(Grid)
                container={true}
                direction="row"
              >
                <ForwardRef(Grid)
                  alignItems="center"
                  className="makeStyles-mainContainer-10"
                  container={true}
                  direction="row"
                  item={true}
                  xs={12}
                >
                  <ForwardRef(Grid)
                    item={true}
                    xs={1}
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-topText-13"
                      variant="h5"
                    >
                      Tasker
                    </ForwardRef(Typography)>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                    xs={9}
                  />
                  <ForwardRef(Grid)
                    container={true}
                    item={true}
                    justifyContent="flex-end"
                    xs={2}
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-subText-14"
                      variant="h6"
                    >
                      Techformist
                    </ForwardRef(Typography)>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    alignItems="center"
                    container={true}
                    direction="row"
                    item={true}
                    xs={12}
                  >
                    <ForwardRef(Grid)
                      className="makeStyles-boxPadding-18"
                      item={true}
                      xs={11}
                    />
                    <ForwardRef(Grid)
                      container={true}
                      item={true}
                      justifyContent="flex-end"
                      xs={1}
                    >
                      <ForwardRef(Button)
                        id="add-new"
                        onClick={[Function]}
                        variant="outlined"
                      >
                        <Memo />
                      </ForwardRef(Button)>
                    </ForwardRef(Grid)>
                  </ForwardRef(Grid)>
                </ForwardRef(Grid)>
                <ForwardRef(Grid)
                  alignItems="flex-start"
                  className="makeStyles-mainContainer-10"
                  container={true}
                  direction="row"
                  item={true}
                  xs={12}
                >
                  <ForwardRef(Grid)
                    alignItems="flex-center"
                    container={true}
                    direction="column"
                    item={true}
                    xs={12}
                  >
                    <AddToDo
                      onClose={[Function]}
                    />
                    <ForwardRef(Paper)
                      elevation={1}
                      sx={
                        Object {
                          "flexGrow": 1,
                          "padding": "20px",
                        }
                      }
                    >
                      <ForwardRef(Typography)
                        className="makeStyles-subText-14"
                        variant="h6"
                      >
                        Task list is empty
                      </ForwardRef(Typography)>
                    </ForwardRef(Paper)>
                  </ForwardRef(Grid)>
                </ForwardRef(Grid)>
              </ForwardRef(Grid)>,
              "className": "makeStyles-mainContainer-10",
              "component": "div",
              "disableGutters": false,
              "fixed": false,
              "maxWidth": "md",
            }
          }
        >
          <Noop />
          <div
            className="MuiContainer-root MuiContainer-maxWidthMd makeStyles-mainContainer-10 css-xdmu94-MuiContainer-root"
          >
            <ForwardRef(Grid)
              container={true}
              direction="row"
            >
              <MuiGridRoot
                as="div"
                className="MuiGrid-root MuiGrid-container"
                ownerState={
                  Object {
                    "children": Array [
                      <ForwardRef(Grid)
                        alignItems="center"
                        className="makeStyles-mainContainer-10"
                        container={true}
                        direction="row"
                        item={true}
                        xs={12}
                      >
                        <ForwardRef(Grid)
                          item={true}
                          xs={1}
                        >
                          <ForwardRef(Typography)
                            className="makeStyles-topText-13"
                            variant="h5"
                          >
                            Tasker
                          </ForwardRef(Typography)>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                          xs={9}
                        />
                        <ForwardRef(Grid)
                          container={true}
                          item={true}
                          justifyContent="flex-end"
                          xs={2}
                        >
                          <ForwardRef(Typography)
                            className="makeStyles-subText-14"
                            variant="h6"
                          >
                            Techformist
                          </ForwardRef(Typography)>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          alignItems="center"
                          container={true}
                          direction="row"
                          item={true}
                          xs={12}
                        >
                          <ForwardRef(Grid)
                            className="makeStyles-boxPadding-18"
                            item={true}
                            xs={11}
                          />
                          <ForwardRef(Grid)
                            container={true}
                            item={true}
                            justifyContent="flex-end"
                            xs={1}
                          >
                            <ForwardRef(Button)
                              id="add-new"
                              onClick={[Function]}
                              variant="outlined"
                            >
                              <Memo />
                            </ForwardRef(Button)>
                          </ForwardRef(Grid)>
                        </ForwardRef(Grid)>
                      </ForwardRef(Grid)>,
                      <ForwardRef(Grid)
                        alignItems="flex-start"
                        className="makeStyles-mainContainer-10"
                        container={true}
                        direction="row"
                        item={true}
                        xs={12}
                      >
                        <ForwardRef(Grid)
                          alignItems="flex-center"
                          container={true}
                          direction="column"
                          item={true}
                          xs={12}
                        >
                          <AddToDo
                            onClose={[Function]}
                          />
                          <ForwardRef(Paper)
                            elevation={1}
                            sx={
                              Object {
                                "flexGrow": 1,
                                "padding": "20px",
                              }
                            }
                          >
                            <ForwardRef(Typography)
                              className="makeStyles-subText-14"
                              variant="h6"
                            >
                              Task list is empty
                            </ForwardRef(Typography)>
                          </ForwardRef(Paper)>
                        </ForwardRef(Grid)>
                      </ForwardRef(Grid)>,
                    ],
                    "columnSpacing": 0,
                    "columns": 12,
                    "container": true,
                    "direction": "row",
                    "item": false,
                    "lg": false,
                    "md": false,
                    "rowSpacing": 0,
                    "sm": false,
                    "sx": Object {},
                    "wrap": "wrap",
                    "xl": false,
                    "xs": false,
                    "zeroMinWidth": false,
                  }
                }
                sx={Object {}}
              >
                <Noop />
                <div
                  className="MuiGrid-root MuiGrid-container css-11lq3yg-MuiGrid-root"
                >
                  <ForwardRef(Grid)
                    alignItems="center"
                    className="makeStyles-mainContainer-10"
                    container={true}
                    direction="row"
                    item={true}
                    xs={12}
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12 makeStyles-mainContainer-10"
                      ownerState={
                        Object {
                          "children": Array [
                            <ForwardRef(Grid)
                              item={true}
                              xs={1}
                            >
                              <ForwardRef(Typography)
                                className="makeStyles-topText-13"
                                variant="h5"
                              >
                                Tasker
                              </ForwardRef(Typography)>
                            </ForwardRef(Grid)>,
                            <ForwardRef(Grid)
                              item={true}
                              xs={9}
                            />,
                            <ForwardRef(Grid)
                              container={true}
                              item={true}
                              justifyContent="flex-end"
                              xs={2}
                            >
                              <ForwardRef(Typography)
                                className="makeStyles-subText-14"
                                variant="h6"
                              >
                                Techformist
                              </ForwardRef(Typography)>
                            </ForwardRef(Grid)>,
                            <ForwardRef(Grid)
                              alignItems="center"
                              container={true}
                              direction="row"
                              item={true}
                              xs={12}
                            >
                              <ForwardRef(Grid)
                                className="makeStyles-boxPadding-18"
                                item={true}
                                xs={11}
                              />
                              <ForwardRef(Grid)
                                container={true}
                                item={true}
                                justifyContent="flex-end"
                                xs={1}
                              >
                                <ForwardRef(Button)
                                  id="add-new"
                                  onClick={[Function]}
                                  variant="outlined"
                                >
                                  <Memo />
                                </ForwardRef(Button)>
                              </ForwardRef(Grid)>
                            </ForwardRef(Grid)>,
                          ],
                          "className": "makeStyles-mainContainer-10",
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": true,
                          "direction": "row",
                          "item": true,
                          "lg": false,
                          "md": false,
                          "rowSpacing": 0,
                          "sm": false,
                          "sx": Object {
                            "alignItems": "center",
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": 12,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "alignItems": "center",
                        }
                      }
                    >
                      <Noop />
                      <div
                        className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12 makeStyles-mainContainer-10 css-1x4vn2y-MuiGrid-root"
                      >
                        <ForwardRef(Grid)
                          item={true}
                          xs={1}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-1"
                            ownerState={
                              Object {
                                "children": <ForwardRef(Typography)
                                  className="makeStyles-topText-13"
                                  variant="h5"
                                >
                                  Tasker
                                </ForwardRef(Typography)>,
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 1,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <Noop />
                            <div
                              className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-1 css-u78q51-MuiGrid-root"
                            >
                              <ForwardRef(Typography)
                                className="makeStyles-topText-13"
                                variant="h5"
                              >
                                <MuiTypographyRoot
                                  as="h5"
                                  className="MuiTypography-root MuiTypography-h5 makeStyles-topText-13"
                                  ownerState={
                                    Object {
                                      "align": "inherit",
                                      "children": "Tasker",
                                      "className": "makeStyles-topText-13",
                                      "color": undefined,
                                      "component": undefined,
                                      "gutterBottom": false,
                                      "noWrap": false,
                                      "paragraph": false,
                                      "sx": Object {
                                        "color": undefined,
                                      },
                                      "variant": "h5",
                                      "variantMapping": Object {
                                        "body1": "p",
                                        "body2": "p",
                                        "h1": "h1",
                                        "h2": "h2",
                                        "h3": "h3",
                                        "h4": "h4",
                                        "h5": "h5",
                                        "h6": "h6",
                                        "inherit": "p",
                                        "subtitle1": "h6",
                                        "subtitle2": "h6",
                                      },
                                    }
                                  }
                                  sx={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                >
                                  <Noop />
                                  <h5
                                    className="MuiTypography-root MuiTypography-h5 makeStyles-topText-13 css-ag7rrr-MuiTypography-root"
                                  >
                                    Tasker
                                  </h5>
                                </MuiTypographyRoot>
                              </ForwardRef(Typography)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                          xs={9}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-9"
                            ownerState={
                              Object {
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 9,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <Noop />
                            <div
                              className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-9 css-1qpzhgb-MuiGrid-root"
                            />
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          container={true}
                          item={true}
                          justifyContent="flex-end"
                          xs={2}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-2"
                            ownerState={
                              Object {
                                "children": <ForwardRef(Typography)
                                  className="makeStyles-subText-14"
                                  variant="h6"
                                >
                                  Techformist
                                </ForwardRef(Typography)>,
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": true,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {
                                  "justifyContent": "flex-end",
                                },
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 2,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={
                              Object {
                                "justifyContent": "flex-end",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-2 css-7ml0tv-MuiGrid-root"
                            >
                              <ForwardRef(Typography)
                                className="makeStyles-subText-14"
                                variant="h6"
                              >
                                <MuiTypographyRoot
                                  as="h6"
                                  className="MuiTypography-root MuiTypography-h6 makeStyles-subText-14"
                                  ownerState={
                                    Object {
                                      "align": "inherit",
                                      "children": "Techformist",
                                      "className": "makeStyles-subText-14",
                                      "color": undefined,
                                      "component": undefined,
                                      "gutterBottom": false,
                                      "noWrap": false,
                                      "paragraph": false,
                                      "sx": Object {
                                        "color": undefined,
                                      },
                                      "variant": "h6",
                                      "variantMapping": Object {
                                        "body1": "p",
                                        "body2": "p",
                                        "h1": "h1",
                                        "h2": "h2",
                                        "h3": "h3",
                                        "h4": "h4",
                                        "h5": "h5",
                                        "h6": "h6",
                                        "inherit": "p",
                                        "subtitle1": "h6",
                                        "subtitle2": "h6",
                                      },
                                    }
                                  }
                                  sx={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                >
                                  <Noop />
                                  <h6
                                    className="MuiTypography-root MuiTypography-h6 makeStyles-subText-14 css-2ulfj5-MuiTypography-root"
                                  >
                                    Techformist
                                  </h6>
                                </MuiTypographyRoot>
                              </ForwardRef(Typography)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          alignItems="center"
                          container={true}
                          direction="row"
                          item={true}
                          xs={12}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(Grid)
                                    className="makeStyles-boxPadding-18"
                                    item={true}
                                    xs={11}
                                  />,
                                  <ForwardRef(Grid)
                                    container={true}
                                    item={true}
                                    justifyContent="flex-end"
                                    xs={1}
                                  >
                                    <ForwardRef(Button)
                                      id="add-new"
                                      onClick={[Function]}
                                      variant="outlined"
                                    >
                                      <Memo />
                                    </ForwardRef(Button)>
                                  </ForwardRef(Grid)>,
                                ],
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": true,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {
                                  "alignItems": "center",
                                },
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 12,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={
                              Object {
                                "alignItems": "center",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12 css-1x4vn2y-MuiGrid-root"
                            >
                              <ForwardRef(Grid)
                                className="makeStyles-boxPadding-18"
                                item={true}
                                xs={11}
                              >
                                <MuiGridRoot
                                  as="div"
                                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-11 makeStyles-boxPadding-18"
                                  ownerState={
                                    Object {
                                      "className": "makeStyles-boxPadding-18",
                                      "columnSpacing": 0,
                                      "columns": 12,
                                      "container": false,
                                      "direction": "row",
                                      "item": true,
                                      "lg": false,
                                      "md": false,
                                      "rowSpacing": 0,
                                      "sm": false,
                                      "sx": Object {},
                                      "wrap": "wrap",
                                      "xl": false,
                                      "xs": 11,
                                      "zeroMinWidth": false,
                                    }
                                  }
                                  sx={Object {}}
                                >
                                  <Noop />
                                  <div
                                    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-11 makeStyles-boxPadding-18 css-ykovpn-MuiGrid-root"
                                  />
                                </MuiGridRoot>
                              </ForwardRef(Grid)>
                              <ForwardRef(Grid)
                                container={true}
                                item={true}
                                justifyContent="flex-end"
                                xs={1}
                              >
                                <MuiGridRoot
                                  as="div"
                                  className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-1"
                                  ownerState={
                                    Object {
                                      "children": <ForwardRef(Button)
                                        id="add-new"
                                        onClick={[Function]}
                                        variant="outlined"
                                      >
                                        <Memo />
                                      </ForwardRef(Button)>,
                                      "columnSpacing": 0,
                                      "columns": 12,
                                      "container": true,
                                      "direction": "row",
                                      "item": true,
                                      "lg": false,
                                      "md": false,
                                      "rowSpacing": 0,
                                      "sm": false,
                                      "sx": Object {
                                        "justifyContent": "flex-end",
                                      },
                                      "wrap": "wrap",
                                      "xl": false,
                                      "xs": 1,
                                      "zeroMinWidth": false,
                                    }
                                  }
                                  sx={
                                    Object {
                                      "justifyContent": "flex-end",
                                    }
                                  }
                                >
                                  <Noop />
                                  <div
                                    className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-1 css-1nomy00-MuiGrid-root"
                                  >
                                    <ForwardRef(Button)
                                      id="add-new"
                                      onClick={[Function]}
                                      variant="outlined"
                                    >
                                      <MuiButtonRoot
                                        className=""
                                        classes={
                                          Object {
                                            "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                            "label": "MuiButton-label",
                                            "root": "MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium",
                                            "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                          }
                                        }
                                        component="button"
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName=""
                                        id="add-new"
                                        onClick={[Function]}
                                        ownerState={
                                          Object {
                                            "children": <Memo />,
                                            "color": "primary",
                                            "component": "button",
                                            "disableElevation": false,
                                            "disableFocusRipple": false,
                                            "disabled": false,
                                            "fullWidth": false,
                                            "id": "add-new",
                                            "onClick": [Function],
                                            "size": "medium",
                                            "type": undefined,
                                            "variant": "outlined",
                                          }
                                        }
                                      >
                                        <Noop />
                                        <ForwardRef(ButtonBase)
                                          className=" css-10tjo1u-MuiButton-root"
                                          classes={
                                            Object {
                                              "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                              "label": "MuiButton-label",
                                              "root": "MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium",
                                              "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                            }
                                          }
                                          component="button"
                                          disabled={false}
                                          focusRipple={true}
                                          focusVisibleClassName=""
                                          id="add-new"
                                          onClick={[Function]}
                                        >
                                          <MuiButtonBaseRoot
                                            as="button"
                                            className="MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButtonBase-root  css-10tjo1u-MuiButton-root"
                                            classes={
                                              Object {
                                                "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                "label": "MuiButton-label",
                                                "root": "MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium",
                                                "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                              }
                                            }
                                            disabled={false}
                                            id="add-new"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onContextMenu={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            ownerState={
                                              Object {
                                                "centerRipple": false,
                                                "children": Array [
                                                  undefined,
                                                  <Memo />,
                                                  undefined,
                                                ],
                                                "className": " css-10tjo1u-MuiButton-root",
                                                "classes": Object {
                                                  "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                  "label": "MuiButton-label",
                                                  "root": "MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium",
                                                  "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                },
                                                "component": "button",
                                                "disableRipple": false,
                                                "disableTouchRipple": false,
                                                "disabled": false,
                                                "focusRipple": true,
                                                "focusVisible": false,
                                                "focusVisibleClassName": "",
                                                "id": "add-new",
                                                "onClick": [Function],
                                                "tabIndex": 0,
                                                "type": undefined,
                                              }
                                            }
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <Noop />
                                            <button
                                              className="MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButtonBase-root  css-1rwt2y5-MuiButtonBase-root-MuiButton-root"
                                              disabled={false}
                                              id="add-new"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onContextMenu={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={0}
                                              type="button"
                                            >
                                              <ForwardRef(RemoveIcon)>
                                                <ForwardRef(SvgIcon)
                                                  data-testid="RemoveIcon"
                                                >
                                                  <MuiSvgIconRoot
                                                    aria-hidden={true}
                                                    as="svg"
                                                    className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                                    data-testid="RemoveIcon"
                                                    focusable="false"
                                                    ownerState={
                                                      Object {
                                                        "children": <path
                                                          d="M19 13H5v-2h14v2z"
                                                        />,
                                                        "color": "inherit",
                                                        "component": "svg",
                                                        "data-testid": "RemoveIcon",
                                                        "fontSize": "medium",
                                                        "inheritViewBox": false,
                                                        "viewBox": "0 0 24 24",
                                                      }
                                                    }
                                                    viewBox="0 0 24 24"
                                                  >
                                                    <Noop />
                                                    <svg
                                                      aria-hidden={true}
                                                      className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                                      data-testid="RemoveIcon"
                                                      focusable="false"
                                                      viewBox="0 0 24 24"
                                                    >
                                                      <path
                                                        d="M19 13H5v-2h14v2z"
                                                      />
                                                    </svg>
                                                  </MuiSvgIconRoot>
                                                </ForwardRef(SvgIcon)>
                                              </ForwardRef(RemoveIcon)>
                                              <ForwardRef(TouchRipple)
                                                center={false}
                                              >
                                                <MuiTouchRippleRoot
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <Noop />
                                                  <span
                                                    className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </MuiTouchRippleRoot>
                                              </ForwardRef(TouchRipple)>
                                            </button>
                                          </MuiButtonBaseRoot>
                                        </ForwardRef(ButtonBase)>
                                      </MuiButtonRoot>
                                    </ForwardRef(Button)>
                                  </div>
                                </MuiGridRoot>
                              </ForwardRef(Grid)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    alignItems="flex-start"
                    className="makeStyles-mainContainer-10"
                    container={true}
                    direction="row"
                    item={true}
                    xs={12}
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12 makeStyles-mainContainer-10"
                      ownerState={
                        Object {
                          "children": <ForwardRef(Grid)
                            alignItems="flex-center"
                            container={true}
                            direction="column"
                            item={true}
                            xs={12}
                          >
                            <AddToDo
                              onClose={[Function]}
                            />
                            <ForwardRef(Paper)
                              elevation={1}
                              sx={
                                Object {
                                  "flexGrow": 1,
                                  "padding": "20px",
                                }
                              }
                            >
                              <ForwardRef(Typography)
                                className="makeStyles-subText-14"
                                variant="h6"
                              >
                                Task list is empty
                              </ForwardRef(Typography)>
                            </ForwardRef(Paper)>
                          </ForwardRef(Grid)>,
                          "className": "makeStyles-mainContainer-10",
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": true,
                          "direction": "row",
                          "item": true,
                          "lg": false,
                          "md": false,
                          "rowSpacing": 0,
                          "sm": false,
                          "sx": Object {
                            "alignItems": "flex-start",
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": 12,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "alignItems": "flex-start",
                        }
                      }
                    >
                      <Noop />
                      <div
                        className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12 makeStyles-mainContainer-10 css-ksia33-MuiGrid-root"
                      >
                        <ForwardRef(Grid)
                          alignItems="flex-center"
                          container={true}
                          direction="column"
                          item={true}
                          xs={12}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-direction-xs-column MuiGrid-grid-xs-12"
                            ownerState={
                              Object {
                                "children": Array [
                                  <AddToDo
                                    onClose={[Function]}
                                  />,
                                  <ForwardRef(Paper)
                                    elevation={1}
                                    sx={
                                      Object {
                                        "flexGrow": 1,
                                        "padding": "20px",
                                      }
                                    }
                                  >
                                    <ForwardRef(Typography)
                                      className="makeStyles-subText-14"
                                      variant="h6"
                                    >
                                      Task list is empty
                                    </ForwardRef(Typography)>
                                  </ForwardRef(Paper)>,
                                ],
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": true,
                                "direction": "column",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {
                                  "alignItems": "flex-center",
                                },
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 12,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={
                              Object {
                                "alignItems": "flex-center",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-direction-xs-column MuiGrid-grid-xs-12 css-qcclf8-MuiGrid-root"
                            >
                              <AddToDo
                                onClose={[Function]}
                              >
                                <ForwardRef(Paper)
                                  className="makeStyles-addNewPaper-19"
                                  elevation={1}
                                  sx={
                                    Object {
                                      "flexGrow": 1,
                                    }
                                  }
                                >
                                  <MuiPaperRoot
                                    as="div"
                                    className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 makeStyles-addNewPaper-19"
                                    ownerState={
                                      Object {
                                        "children": <ForwardRef(Grid)
                                          alignItems="stretch"
                                          className="makeStyles-newItemContainer-20"
                                          container={true}
                                          direction="column"
                                          item={true}
                                          xs={12}
                                        >
                                          <ForwardRef(Grid)
                                            alignSelf="center"
                                            item={true}
                                          >
                                            <ForwardRef(Typography)
                                              className="makeStyles-subText-21"
                                              variant="h6"
                                            >
                                              Add task
                                            </ForwardRef(Typography)>
                                          </ForwardRef(Grid)>
                                          <ForwardRef(Grid)
                                            alignSelf="start"
                                            item={true}
                                          >
                                            <ForwardRef(Typography)
                                              className="makeStyles-descriptionText-22"
                                              variant="h6"
                                            >
                                              Description
                                            </ForwardRef(Typography)>
                                          </ForwardRef(Grid)>
                                          <ForwardRef(Grid)
                                            item={true}
                                          >
                                            <ForwardRef(TextField)
                                              fullWidth={true}
                                              id="description"
                                              onChange={[Function]}
                                              value=""
                                              variant="outlined"
                                            />
                                          </ForwardRef(Grid)>
                                          <ForwardRef(Grid)
                                            alignSelf="start"
                                            item={true}
                                          >
                                            <ForwardRef(Typography)
                                              className="makeStyles-descriptionText-22"
                                              variant="h6"
                                            >
                                              Date
                                            </ForwardRef(Typography)>
                                          </ForwardRef(Grid)>
                                          <ForwardRef(Grid)
                                            item={true}
                                          >
                                            <LocalizationProvider
                                              dateAdapter={[Function]}
                                            >
                                              <ForwardRef(DatePicker)
                                                disablePast={true}
                                                onChange={[Function]}
                                                onError={[Function]}
                                                openTo="year"
                                                renderInput={[Function]}
                                                value={null}
                                                views={
                                                  Array [
                                                    "year",
                                                    "month",
                                                    "day",
                                                  ]
                                                }
                                              />
                                            </LocalizationProvider>
                                          </ForwardRef(Grid)>
                                          <ForwardRef(Grid)
                                            alignSelf="flex-end"
                                            className="makeStyles-button-23"
                                            item={true}
                                          >
                                            <ForwardRef(Button)
                                              disabled={true}
                                              id="save"
                                              onClick={[Function]}
                                              variant="contained"
                                            >
                                              Save
                                            </ForwardRef(Button)>
                                          </ForwardRef(Grid)>
                                        </ForwardRef(Grid)>,
                                        "className": "makeStyles-addNewPaper-19",
                                        "component": "div",
                                        "elevation": 1,
                                        "square": false,
                                        "sx": Object {
                                          "flexGrow": 1,
                                        },
                                        "variant": "elevation",
                                      }
                                    }
                                    sx={
                                      Object {
                                        "flexGrow": 1,
                                      }
                                    }
                                  >
                                    <Noop />
                                    <div
                                      className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 makeStyles-addNewPaper-19 css-y7jnfg-MuiPaper-root"
                                    >
                                      <ForwardRef(Grid)
                                        alignItems="stretch"
                                        className="makeStyles-newItemContainer-20"
                                        container={true}
                                        direction="column"
                                        item={true}
                                        xs={12}
                                      >
                                        <MuiGridRoot
                                          as="div"
                                          className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-direction-xs-column MuiGrid-grid-xs-12 makeStyles-newItemContainer-20"
                                          ownerState={
                                            Object {
                                              "children": Array [
                                                <ForwardRef(Grid)
                                                  alignSelf="center"
                                                  item={true}
                                                >
                                                  <ForwardRef(Typography)
                                                    className="makeStyles-subText-21"
                                                    variant="h6"
                                                  >
                                                    Add task
                                                  </ForwardRef(Typography)>
                                                </ForwardRef(Grid)>,
                                                <ForwardRef(Grid)
                                                  alignSelf="start"
                                                  item={true}
                                                >
                                                  <ForwardRef(Typography)
                                                    className="makeStyles-descriptionText-22"
                                                    variant="h6"
                                                  >
                                                    Description
                                                  </ForwardRef(Typography)>
                                                </ForwardRef(Grid)>,
                                                <ForwardRef(Grid)
                                                  item={true}
                                                >
                                                  <ForwardRef(TextField)
                                                    fullWidth={true}
                                                    id="description"
                                                    onChange={[Function]}
                                                    value=""
                                                    variant="outlined"
                                                  />
                                                </ForwardRef(Grid)>,
                                                <ForwardRef(Grid)
                                                  alignSelf="start"
                                                  item={true}
                                                >
                                                  <ForwardRef(Typography)
                                                    className="makeStyles-descriptionText-22"
                                                    variant="h6"
                                                  >
                                                    Date
                                                  </ForwardRef(Typography)>
                                                </ForwardRef(Grid)>,
                                                <ForwardRef(Grid)
                                                  item={true}
                                                >
                                                  <LocalizationProvider
                                                    dateAdapter={[Function]}
                                                  >
                                                    <ForwardRef(DatePicker)
                                                      disablePast={true}
                                                      onChange={[Function]}
                                                      onError={[Function]}
                                                      openTo="year"
                                                      renderInput={[Function]}
                                                      value={null}
                                                      views={
                                                        Array [
                                                          "year",
                                                          "month",
                                                          "day",
                                                        ]
                                                      }
                                                    />
                                                  </LocalizationProvider>
                                                </ForwardRef(Grid)>,
                                                <ForwardRef(Grid)
                                                  alignSelf="flex-end"
                                                  className="makeStyles-button-23"
                                                  item={true}
                                                >
                                                  <ForwardRef(Button)
                                                    disabled={true}
                                                    id="save"
                                                    onClick={[Function]}
                                                    variant="contained"
                                                  >
                                                    Save
                                                  </ForwardRef(Button)>
                                                </ForwardRef(Grid)>,
                                              ],
                                              "className": "makeStyles-newItemContainer-20",
                                              "columnSpacing": 0,
                                              "columns": 12,
                                              "container": true,
                                              "direction": "column",
                                              "item": true,
                                              "lg": false,
                                              "md": false,
                                              "rowSpacing": 0,
                                              "sm": false,
                                              "sx": Object {
                                                "alignItems": "stretch",
                                              },
                                              "wrap": "wrap",
                                              "xl": false,
                                              "xs": 12,
                                              "zeroMinWidth": false,
                                            }
                                          }
                                          sx={
                                            Object {
                                              "alignItems": "stretch",
                                            }
                                          }
                                        >
                                          <Noop />
                                          <div
                                            className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-direction-xs-column MuiGrid-grid-xs-12 makeStyles-newItemContainer-20 css-e40x2h-MuiGrid-root"
                                          >
                                            <ForwardRef(Grid)
                                              alignSelf="center"
                                              item={true}
                                            >
                                              <MuiGridRoot
                                                as="div"
                                                className="MuiGrid-root MuiGrid-item"
                                                ownerState={
                                                  Object {
                                                    "children": <ForwardRef(Typography)
                                                      className="makeStyles-subText-21"
                                                      variant="h6"
                                                    >
                                                      Add task
                                                    </ForwardRef(Typography)>,
                                                    "columnSpacing": 0,
                                                    "columns": 12,
                                                    "container": false,
                                                    "direction": "row",
                                                    "item": true,
                                                    "lg": false,
                                                    "md": false,
                                                    "rowSpacing": 0,
                                                    "sm": false,
                                                    "sx": Object {
                                                      "alignSelf": "center",
                                                    },
                                                    "wrap": "wrap",
                                                    "xl": false,
                                                    "xs": false,
                                                    "zeroMinWidth": false,
                                                  }
                                                }
                                                sx={
                                                  Object {
                                                    "alignSelf": "center",
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <div
                                                  className="MuiGrid-root MuiGrid-item css-131xi47-MuiGrid-root"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="makeStyles-subText-21"
                                                    variant="h6"
                                                  >
                                                    <MuiTypographyRoot
                                                      as="h6"
                                                      className="MuiTypography-root MuiTypography-h6 makeStyles-subText-21"
                                                      ownerState={
                                                        Object {
                                                          "align": "inherit",
                                                          "children": "Add task",
                                                          "className": "makeStyles-subText-21",
                                                          "color": undefined,
                                                          "component": undefined,
                                                          "gutterBottom": false,
                                                          "noWrap": false,
                                                          "paragraph": false,
                                                          "sx": Object {
                                                            "color": undefined,
                                                          },
                                                          "variant": "h6",
                                                          "variantMapping": Object {
                                                            "body1": "p",
                                                            "body2": "p",
                                                            "h1": "h1",
                                                            "h2": "h2",
                                                            "h3": "h3",
                                                            "h4": "h4",
                                                            "h5": "h5",
                                                            "h6": "h6",
                                                            "inherit": "p",
                                                            "subtitle1": "h6",
                                                            "subtitle2": "h6",
                                                          },
                                                        }
                                                      }
                                                      sx={
                                                        Object {
                                                          "color": undefined,
                                                        }
                                                      }
                                                    >
                                                      <Noop />
                                                      <h6
                                                        className="MuiTypography-root MuiTypography-h6 makeStyles-subText-21 css-2ulfj5-MuiTypography-root"
                                                      >
                                                        Add task
                                                      </h6>
                                                    </MuiTypographyRoot>
                                                  </ForwardRef(Typography)>
                                                </div>
                                              </MuiGridRoot>
                                            </ForwardRef(Grid)>
                                            <ForwardRef(Grid)
                                              alignSelf="start"
                                              item={true}
                                            >
                                              <MuiGridRoot
                                                as="div"
                                                className="MuiGrid-root MuiGrid-item"
                                                ownerState={
                                                  Object {
                                                    "children": <ForwardRef(Typography)
                                                      className="makeStyles-descriptionText-22"
                                                      variant="h6"
                                                    >
                                                      Description
                                                    </ForwardRef(Typography)>,
                                                    "columnSpacing": 0,
                                                    "columns": 12,
                                                    "container": false,
                                                    "direction": "row",
                                                    "item": true,
                                                    "lg": false,
                                                    "md": false,
                                                    "rowSpacing": 0,
                                                    "sm": false,
                                                    "sx": Object {
                                                      "alignSelf": "start",
                                                    },
                                                    "wrap": "wrap",
                                                    "xl": false,
                                                    "xs": false,
                                                    "zeroMinWidth": false,
                                                  }
                                                }
                                                sx={
                                                  Object {
                                                    "alignSelf": "start",
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <div
                                                  className="MuiGrid-root MuiGrid-item css-f35e3u-MuiGrid-root"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="makeStyles-descriptionText-22"
                                                    variant="h6"
                                                  >
                                                    <MuiTypographyRoot
                                                      as="h6"
                                                      className="MuiTypography-root MuiTypography-h6 makeStyles-descriptionText-22"
                                                      ownerState={
                                                        Object {
                                                          "align": "inherit",
                                                          "children": "Description",
                                                          "className": "makeStyles-descriptionText-22",
                                                          "color": undefined,
                                                          "component": undefined,
                                                          "gutterBottom": false,
                                                          "noWrap": false,
                                                          "paragraph": false,
                                                          "sx": Object {
                                                            "color": undefined,
                                                          },
                                                          "variant": "h6",
                                                          "variantMapping": Object {
                                                            "body1": "p",
                                                            "body2": "p",
                                                            "h1": "h1",
                                                            "h2": "h2",
                                                            "h3": "h3",
                                                            "h4": "h4",
                                                            "h5": "h5",
                                                            "h6": "h6",
                                                            "inherit": "p",
                                                            "subtitle1": "h6",
                                                            "subtitle2": "h6",
                                                          },
                                                        }
                                                      }
                                                      sx={
                                                        Object {
                                                          "color": undefined,
                                                        }
                                                      }
                                                    >
                                                      <Noop />
                                                      <h6
                                                        className="MuiTypography-root MuiTypography-h6 makeStyles-descriptionText-22 css-2ulfj5-MuiTypography-root"
                                                      >
                                                        Description
                                                      </h6>
                                                    </MuiTypographyRoot>
                                                  </ForwardRef(Typography)>
                                                </div>
                                              </MuiGridRoot>
                                            </ForwardRef(Grid)>
                                            <ForwardRef(Grid)
                                              item={true}
                                            >
                                              <MuiGridRoot
                                                as="div"
                                                className="MuiGrid-root MuiGrid-item"
                                                ownerState={
                                                  Object {
                                                    "children": <ForwardRef(TextField)
                                                      fullWidth={true}
                                                      id="description"
                                                      onChange={[Function]}
                                                      value=""
                                                      variant="outlined"
                                                    />,
                                                    "columnSpacing": 0,
                                                    "columns": 12,
                                                    "container": false,
                                                    "direction": "row",
                                                    "item": true,
                                                    "lg": false,
                                                    "md": false,
                                                    "rowSpacing": 0,
                                                    "sm": false,
                                                    "sx": Object {},
                                                    "wrap": "wrap",
                                                    "xl": false,
                                                    "xs": false,
                                                    "zeroMinWidth": false,
                                                  }
                                                }
                                                sx={Object {}}
                                              >
                                                <Noop />
                                                <div
                                                  className="MuiGrid-root MuiGrid-item css-13i4rnv-MuiGrid-root"
                                                >
                                                  <ForwardRef(TextField)
                                                    fullWidth={true}
                                                    id="description"
                                                    onChange={[Function]}
                                                    value=""
                                                    variant="outlined"
                                                  >
                                                    <MuiTextFieldRoot
                                                      className="MuiTextField-root"
                                                      color="primary"
                                                      disabled={false}
                                                      error={false}
                                                      fullWidth={true}
                                                      ownerState={
                                                        Object {
                                                          "autoFocus": false,
                                                          "color": "primary",
                                                          "disabled": false,
                                                          "error": false,
                                                          "fullWidth": true,
                                                          "id": "description",
                                                          "multiline": false,
                                                          "onChange": [Function],
                                                          "required": false,
                                                          "select": false,
                                                          "value": "",
                                                          "variant": "outlined",
                                                        }
                                                      }
                                                      required={false}
                                                      variant="outlined"
                                                    >
                                                      <Noop />
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                                                        color="primary"
                                                        disabled={false}
                                                        error={false}
                                                        fullWidth={true}
                                                        required={false}
                                                        variant="outlined"
                                                      >
                                                        <MuiFormControlRoot
                                                          as="div"
                                                          className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                                                          ownerState={
                                                            Object {
                                                              "children": Array [
                                                                undefined,
                                                                <ForwardRef(OutlinedInput)
                                                                  autoFocus={false}
                                                                  fullWidth={true}
                                                                  id="description"
                                                                  multiline={false}
                                                                  onChange={[Function]}
                                                                  value=""
                                                                />,
                                                                undefined,
                                                              ],
                                                              "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                                              "color": "primary",
                                                              "component": "div",
                                                              "disabled": false,
                                                              "error": false,
                                                              "fullWidth": true,
                                                              "hiddenLabel": false,
                                                              "margin": "none",
                                                              "required": false,
                                                              "size": "medium",
                                                              "variant": "outlined",
                                                            }
                                                          }
                                                        >
                                                          <Noop />
                                                          <div
                                                            className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                                                          >
                                                            <ForwardRef(OutlinedInput)
                                                              autoFocus={false}
                                                              fullWidth={true}
                                                              id="description"
                                                              multiline={false}
                                                              onChange={[Function]}
                                                              value=""
                                                            >
                                                              <ForwardRef(InputBase)
                                                                autoFocus={false}
                                                                classes={
                                                                  Object {
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "notchedOutline": null,
                                                                    "root": "MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                components={
                                                                  Object {
                                                                    "Input": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "__emotion_base": "input",
                                                                      "__emotion_forwardProp": [Function],
                                                                      "__emotion_real": [Circular],
                                                                      "__emotion_styles": Array [
                                                                        "label:MuiInputBase-input;",
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        "label:MuiOutlinedInput-input;",
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "defaultProps": undefined,
                                                                      "render": [Function],
                                                                      "withComponent": [Function],
                                                                    },
                                                                    "Root": Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "__emotion_base": "div",
                                                                      "__emotion_forwardProp": [Function],
                                                                      "__emotion_real": [Circular],
                                                                      "__emotion_styles": Array [
                                                                        "label:MuiInputBase-root;",
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        "label:MuiOutlinedInput-root;",
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                        [Function],
                                                                      ],
                                                                      "defaultProps": undefined,
                                                                      "render": [Function],
                                                                      "withComponent": [Function],
                                                                    },
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                id="description"
                                                                inputComponent="input"
                                                                multiline={false}
                                                                onChange={[Function]}
                                                                renderSuffix={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <GlobalStyles
                                                                  styles={
                                                                    Object {
                                                                      "@keyframes mui-auto-fill": Object {
                                                                        "from": Object {
                                                                          "display": "block",
                                                                        },
                                                                      },
                                                                      "@keyframes mui-auto-fill-cancel": Object {
                                                                        "from": Object {
                                                                          "display": "block",
                                                                        },
                                                                      },
                                                                    }
                                                                  }
                                                                >
                                                                  <GlobalStyles
                                                                    defaultTheme={
                                                                      Object {
                                                                        "breakpoints": Object {
                                                                          "between": [Function],
                                                                          "down": [Function],
                                                                          "keys": Array [
                                                                            "xs",
                                                                            "sm",
                                                                            "md",
                                                                            "lg",
                                                                            "xl",
                                                                          ],
                                                                          "not": [Function],
                                                                          "only": [Function],
                                                                          "unit": "px",
                                                                          "up": [Function],
                                                                          "values": Object {
                                                                            "lg": 1200,
                                                                            "md": 900,
                                                                            "sm": 600,
                                                                            "xl": 1536,
                                                                            "xs": 0,
                                                                          },
                                                                        },
                                                                        "components": Object {},
                                                                        "direction": "ltr",
                                                                        "mixins": Object {
                                                                          "toolbar": Object {
                                                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                              "minHeight": 48,
                                                                            },
                                                                            "@media (min-width:600px)": Object {
                                                                              "minHeight": 64,
                                                                            },
                                                                            "minHeight": 56,
                                                                          },
                                                                        },
                                                                        "palette": Object {
                                                                          "action": Object {
                                                                            "activatedOpacity": 0.12,
                                                                            "active": "rgba(0, 0, 0, 0.54)",
                                                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                            "disabledOpacity": 0.38,
                                                                            "focus": "rgba(0, 0, 0, 0.12)",
                                                                            "focusOpacity": 0.12,
                                                                            "hover": "rgba(0, 0, 0, 0.04)",
                                                                            "hoverOpacity": 0.04,
                                                                            "selected": "rgba(0, 0, 0, 0.08)",
                                                                            "selectedOpacity": 0.08,
                                                                          },
                                                                          "augmentColor": [Function],
                                                                          "background": Object {
                                                                            "default": "#fff",
                                                                            "paper": "#fff",
                                                                          },
                                                                          "common": Object {
                                                                            "black": "#000",
                                                                            "white": "#fff",
                                                                          },
                                                                          "contrastThreshold": 3,
                                                                          "divider": "rgba(0, 0, 0, 0.12)",
                                                                          "error": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#c62828",
                                                                            "light": "#ef5350",
                                                                            "main": "#d32f2f",
                                                                          },
                                                                          "getContrastText": [Function],
                                                                          "grey": Object {
                                                                            "100": "#f5f5f5",
                                                                            "200": "#eeeeee",
                                                                            "300": "#e0e0e0",
                                                                            "400": "#bdbdbd",
                                                                            "50": "#fafafa",
                                                                            "500": "#9e9e9e",
                                                                            "600": "#757575",
                                                                            "700": "#616161",
                                                                            "800": "#424242",
                                                                            "900": "#212121",
                                                                            "A100": "#f5f5f5",
                                                                            "A200": "#eeeeee",
                                                                            "A400": "#bdbdbd",
                                                                            "A700": "#616161",
                                                                          },
                                                                          "info": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#01579b",
                                                                            "light": "#03a9f4",
                                                                            "main": "#0288d1",
                                                                          },
                                                                          "mode": "light",
                                                                          "primary": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#1565c0",
                                                                            "light": "#42a5f5",
                                                                            "main": "#1976d2",
                                                                          },
                                                                          "secondary": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#7b1fa2",
                                                                            "light": "#ba68c8",
                                                                            "main": "#9c27b0",
                                                                          },
                                                                          "success": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#1b5e20",
                                                                            "light": "#4caf50",
                                                                            "main": "#2e7d32",
                                                                          },
                                                                          "text": Object {
                                                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                                                            "primary": "rgba(0, 0, 0, 0.87)",
                                                                            "secondary": "rgba(0, 0, 0, 0.6)",
                                                                          },
                                                                          "tonalOffset": 0.2,
                                                                          "warning": Object {
                                                                            "contrastText": "#fff",
                                                                            "dark": "#e65100",
                                                                            "light": "#ff9800",
                                                                            "main": "#ed6c02",
                                                                          },
                                                                        },
                                                                        "shadows": Array [
                                                                          "none",
                                                                          "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                        ],
                                                                        "shape": Object {
                                                                          "borderRadius": 4,
                                                                        },
                                                                        "spacing": [Function],
                                                                        "transitions": Object {
                                                                          "create": [Function],
                                                                          "duration": Object {
                                                                            "complex": 375,
                                                                            "enteringScreen": 225,
                                                                            "leavingScreen": 195,
                                                                            "short": 250,
                                                                            "shorter": 200,
                                                                            "shortest": 150,
                                                                            "standard": 300,
                                                                          },
                                                                          "easing": Object {
                                                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                          },
                                                                          "getAutoHeightDuration": [Function],
                                                                        },
                                                                        "typography": Object {
                                                                          "body1": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.00938em",
                                                                            "lineHeight": 1.5,
                                                                          },
                                                                          "body2": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.875rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.01071em",
                                                                            "lineHeight": 1.43,
                                                                          },
                                                                          "button": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.875rem",
                                                                            "fontWeight": 500,
                                                                            "letterSpacing": "0.02857em",
                                                                            "lineHeight": 1.75,
                                                                            "textTransform": "uppercase",
                                                                          },
                                                                          "caption": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.75rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.03333em",
                                                                            "lineHeight": 1.66,
                                                                          },
                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                          "fontSize": 14,
                                                                          "fontWeightBold": 700,
                                                                          "fontWeightLight": 300,
                                                                          "fontWeightMedium": 500,
                                                                          "fontWeightRegular": 400,
                                                                          "h1": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "6rem",
                                                                            "fontWeight": 300,
                                                                            "letterSpacing": "-0.01562em",
                                                                            "lineHeight": 1.167,
                                                                          },
                                                                          "h2": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "3.75rem",
                                                                            "fontWeight": 300,
                                                                            "letterSpacing": "-0.00833em",
                                                                            "lineHeight": 1.2,
                                                                          },
                                                                          "h3": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "3rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0em",
                                                                            "lineHeight": 1.167,
                                                                          },
                                                                          "h4": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "2.125rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.00735em",
                                                                            "lineHeight": 1.235,
                                                                          },
                                                                          "h5": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1.5rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0em",
                                                                            "lineHeight": 1.334,
                                                                          },
                                                                          "h6": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1.25rem",
                                                                            "fontWeight": 500,
                                                                            "letterSpacing": "0.0075em",
                                                                            "lineHeight": 1.6,
                                                                          },
                                                                          "htmlFontSize": 16,
                                                                          "overline": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.75rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.08333em",
                                                                            "lineHeight": 2.66,
                                                                            "textTransform": "uppercase",
                                                                          },
                                                                          "pxToRem": [Function],
                                                                          "subtitle1": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "1rem",
                                                                            "fontWeight": 400,
                                                                            "letterSpacing": "0.00938em",
                                                                            "lineHeight": 1.75,
                                                                          },
                                                                          "subtitle2": Object {
                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                            "fontSize": "0.875rem",
                                                                            "fontWeight": 500,
                                                                            "letterSpacing": "0.00714em",
                                                                            "lineHeight": 1.57,
                                                                          },
                                                                        },
                                                                        "zIndex": Object {
                                                                          "appBar": 1100,
                                                                          "drawer": 1200,
                                                                          "mobileStepper": 1000,
                                                                          "modal": 1300,
                                                                          "snackbar": 1400,
                                                                          "speedDial": 1050,
                                                                          "tooltip": 1500,
                                                                        },
                                                                      }
                                                                    }
                                                                    styles={
                                                                      Object {
                                                                        "@keyframes mui-auto-fill": Object {
                                                                          "from": Object {
                                                                            "display": "block",
                                                                          },
                                                                        },
                                                                        "@keyframes mui-auto-fill-cancel": Object {
                                                                          "from": Object {
                                                                            "display": "block",
                                                                          },
                                                                        },
                                                                      }
                                                                    }
                                                                  >
                                                                    <EmotionGlobal
                                                                      styles={
                                                                        Object {
                                                                          "@keyframes mui-auto-fill": Object {
                                                                            "from": Object {
                                                                              "display": "block",
                                                                            },
                                                                          },
                                                                          "@keyframes mui-auto-fill-cancel": Object {
                                                                            "from": Object {
                                                                              "display": "block",
                                                                            },
                                                                          },
                                                                        }
                                                                      }
                                                                    />
                                                                  </GlobalStyles>
                                                                </GlobalStyles>
                                                                <MuiOutlinedInputRoot
                                                                  className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                  classes={
                                                                    Object {
                                                                      "input": "MuiOutlinedInput-input",
                                                                      "notchedOutline": null,
                                                                      "root": "MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  onClick={[Function]}
                                                                  ownerState={
                                                                    Object {
                                                                      "aria-describedby": undefined,
                                                                      "autoComplete": undefined,
                                                                      "autoFocus": false,
                                                                      "classes": Object {
                                                                        "input": "MuiOutlinedInput-input",
                                                                        "notchedOutline": null,
                                                                        "root": "MuiOutlinedInput-root",
                                                                      },
                                                                      "color": "primary",
                                                                      "components": Object {
                                                                        "Input": Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "__emotion_base": "input",
                                                                          "__emotion_forwardProp": [Function],
                                                                          "__emotion_real": [Circular],
                                                                          "__emotion_styles": Array [
                                                                            "label:MuiInputBase-input;",
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            "label:MuiOutlinedInput-input;",
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "defaultProps": undefined,
                                                                          "render": [Function],
                                                                          "withComponent": [Function],
                                                                        },
                                                                        "Root": Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "__emotion_base": "div",
                                                                          "__emotion_forwardProp": [Function],
                                                                          "__emotion_real": [Circular],
                                                                          "__emotion_styles": Array [
                                                                            "label:MuiInputBase-root;",
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            "label:MuiOutlinedInput-root;",
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                            [Function],
                                                                          ],
                                                                          "defaultProps": undefined,
                                                                          "render": [Function],
                                                                          "withComponent": [Function],
                                                                        },
                                                                      },
                                                                      "defaultValue": undefined,
                                                                      "disabled": false,
                                                                      "endAdornment": undefined,
                                                                      "error": false,
                                                                      "focused": false,
                                                                      "formControl": Object {
                                                                        "adornedStart": false,
                                                                        "color": "primary",
                                                                        "disabled": false,
                                                                        "error": false,
                                                                        "filled": false,
                                                                        "focused": false,
                                                                        "fullWidth": true,
                                                                        "hiddenLabel": false,
                                                                        "onBlur": [Function],
                                                                        "onEmpty": [Function],
                                                                        "onFilled": [Function],
                                                                        "onFocus": [Function],
                                                                        "registerEffect": [Function],
                                                                        "required": false,
                                                                        "setAdornedStart": [Function],
                                                                        "size": "medium",
                                                                        "variant": "outlined",
                                                                      },
                                                                      "fullWidth": true,
                                                                      "hiddenLabel": false,
                                                                      "id": "description",
                                                                      "inputComponent": "input",
                                                                      "inputProps": undefined,
                                                                      "inputRef": undefined,
                                                                      "maxRows": undefined,
                                                                      "minRows": undefined,
                                                                      "multiline": false,
                                                                      "name": undefined,
                                                                      "onBlur": undefined,
                                                                      "onChange": [Function],
                                                                      "onFocus": undefined,
                                                                      "placeholder": undefined,
                                                                      "renderSuffix": [Function],
                                                                      "rows": undefined,
                                                                      "size": "medium",
                                                                      "startAdornment": undefined,
                                                                      "type": "text",
                                                                      "value": "",
                                                                    }
                                                                  }
                                                                >
                                                                  <Noop />
                                                                  <div
                                                                    className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-md26zr-MuiInputBase-root-MuiOutlinedInput-root"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <MuiOutlinedInputInput
                                                                      aria-invalid={false}
                                                                      as="input"
                                                                      autoFocus={false}
                                                                      className="MuiOutlinedInput-input MuiInputBase-input"
                                                                      disabled={false}
                                                                      id="description"
                                                                      onAnimationStart={[Function]}
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      ownerState={
                                                                        Object {
                                                                          "aria-describedby": undefined,
                                                                          "autoComplete": undefined,
                                                                          "autoFocus": false,
                                                                          "classes": Object {
                                                                            "input": "MuiOutlinedInput-input",
                                                                            "notchedOutline": null,
                                                                            "root": "MuiOutlinedInput-root",
                                                                          },
                                                                          "color": "primary",
                                                                          "components": Object {
                                                                            "Input": Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "__emotion_base": "input",
                                                                              "__emotion_forwardProp": [Function],
                                                                              "__emotion_real": [Circular],
                                                                              "__emotion_styles": Array [
                                                                                "label:MuiInputBase-input;",
                                                                                [Function],
                                                                                [Function],
                                                                                [Function],
                                                                                "label:MuiOutlinedInput-input;",
                                                                                [Function],
                                                                                [Function],
                                                                                [Function],
                                                                              ],
                                                                              "defaultProps": undefined,
                                                                              "render": [Function],
                                                                              "withComponent": [Function],
                                                                            },
                                                                            "Root": Object {
                                                                              "$$typeof": Symbol(react.forward_ref),
                                                                              "__emotion_base": "div",
                                                                              "__emotion_forwardProp": [Function],
                                                                              "__emotion_real": [Circular],
                                                                              "__emotion_styles": Array [
                                                                                "label:MuiInputBase-root;",
                                                                                [Function],
                                                                                [Function],
                                                                                [Function],
                                                                                [Function],
                                                                                "label:MuiOutlinedInput-root;",
                                                                                [Function],
                                                                                [Function],
                                                                                [Function],
                                                                                [Function],
                                                                              ],
                                                                              "defaultProps": undefined,
                                                                              "render": [Function],
                                                                              "withComponent": [Function],
                                                                            },
                                                                          },
                                                                          "defaultValue": undefined,
                                                                          "disabled": false,
                                                                          "endAdornment": undefined,
                                                                          "error": false,
                                                                          "focused": false,
                                                                          "formControl": Object {
                                                                            "adornedStart": false,
                                                                            "color": "primary",
                                                                            "disabled": false,
                                                                            "error": false,
                                                                            "filled": false,
                                                                            "focused": false,
                                                                            "fullWidth": true,
                                                                            "hiddenLabel": false,
                                                                            "onBlur": [Function],
                                                                            "onEmpty": [Function],
                                                                            "onFilled": [Function],
                                                                            "onFocus": [Function],
                                                                            "registerEffect": [Function],
                                                                            "required": false,
                                                                            "setAdornedStart": [Function],
                                                                            "size": "medium",
                                                                            "variant": "outlined",
                                                                          },
                                                                          "fullWidth": true,
                                                                          "hiddenLabel": false,
                                                                          "id": "description",
                                                                          "inputComponent": "input",
                                                                          "inputProps": undefined,
                                                                          "inputRef": undefined,
                                                                          "maxRows": undefined,
                                                                          "minRows": undefined,
                                                                          "multiline": false,
                                                                          "name": undefined,
                                                                          "onBlur": undefined,
                                                                          "onChange": [Function],
                                                                          "onFocus": undefined,
                                                                          "placeholder": undefined,
                                                                          "renderSuffix": [Function],
                                                                          "rows": undefined,
                                                                          "size": "medium",
                                                                          "startAdornment": undefined,
                                                                          "type": "text",
                                                                          "value": "",
                                                                        }
                                                                      }
                                                                      required={false}
                                                                      type="text"
                                                                      value=""
                                                                    >
                                                                      <Noop />
                                                                      <input
                                                                        aria-invalid={false}
                                                                        autoFocus={false}
                                                                        className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                                                                        disabled={false}
                                                                        id="description"
                                                                        onAnimationStart={[Function]}
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        onFocus={[Function]}
                                                                        required={false}
                                                                        type="text"
                                                                        value=""
                                                                      />
                                                                    </MuiOutlinedInputInput>
                                                                    <MuiOutlinedInputNotchedOutline
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      notched={false}
                                                                    >
                                                                      <Noop />
                                                                      <NotchedOutline
                                                                        className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                                        notched={false}
                                                                      >
                                                                        <Styled(fieldset)
                                                                          aria-hidden={true}
                                                                          className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                                          ownerState={
                                                                            Object {
                                                                              "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                                              "label": undefined,
                                                                              "notched": false,
                                                                            }
                                                                          }
                                                                        >
                                                                          <Noop />
                                                                          <fieldset
                                                                            aria-hidden={true}
                                                                            className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                                                          >
                                                                            <Styled(legend)
                                                                              ownerState={
                                                                                Object {
                                                                                  "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                                                  "label": undefined,
                                                                                  "notched": false,
                                                                                }
                                                                              }
                                                                            >
                                                                              <Noop />
                                                                              <legend
                                                                                className="css-nnbavb"
                                                                              >
                                                                                <span
                                                                                  className="notranslate"
                                                                                  dangerouslySetInnerHTML={
                                                                                    Object {
                                                                                      "__html": "&#8203;",
                                                                                    }
                                                                                  }
                                                                                />
                                                                              </legend>
                                                                            </Styled(legend)>
                                                                          </fieldset>
                                                                        </Styled(fieldset)>
                                                                      </NotchedOutline>
                                                                    </MuiOutlinedInputNotchedOutline>
                                                                  </div>
                                                                </MuiOutlinedInputRoot>
                                                              </ForwardRef(InputBase)>
                                                            </ForwardRef(OutlinedInput)>
                                                          </div>
                                                        </MuiFormControlRoot>
                                                      </ForwardRef(FormControl)>
                                                    </MuiTextFieldRoot>
                                                  </ForwardRef(TextField)>
                                                </div>
                                              </MuiGridRoot>
                                            </ForwardRef(Grid)>
                                            <ForwardRef(Grid)
                                              alignSelf="start"
                                              item={true}
                                            >
                                              <MuiGridRoot
                                                as="div"
                                                className="MuiGrid-root MuiGrid-item"
                                                ownerState={
                                                  Object {
                                                    "children": <ForwardRef(Typography)
                                                      className="makeStyles-descriptionText-22"
                                                      variant="h6"
                                                    >
                                                      Date
                                                    </ForwardRef(Typography)>,
                                                    "columnSpacing": 0,
                                                    "columns": 12,
                                                    "container": false,
                                                    "direction": "row",
                                                    "item": true,
                                                    "lg": false,
                                                    "md": false,
                                                    "rowSpacing": 0,
                                                    "sm": false,
                                                    "sx": Object {
                                                      "alignSelf": "start",
                                                    },
                                                    "wrap": "wrap",
                                                    "xl": false,
                                                    "xs": false,
                                                    "zeroMinWidth": false,
                                                  }
                                                }
                                                sx={
                                                  Object {
                                                    "alignSelf": "start",
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <div
                                                  className="MuiGrid-root MuiGrid-item css-f35e3u-MuiGrid-root"
                                                >
                                                  <ForwardRef(Typography)
                                                    className="makeStyles-descriptionText-22"
                                                    variant="h6"
                                                  >
                                                    <MuiTypographyRoot
                                                      as="h6"
                                                      className="MuiTypography-root MuiTypography-h6 makeStyles-descriptionText-22"
                                                      ownerState={
                                                        Object {
                                                          "align": "inherit",
                                                          "children": "Date",
                                                          "className": "makeStyles-descriptionText-22",
                                                          "color": undefined,
                                                          "component": undefined,
                                                          "gutterBottom": false,
                                                          "noWrap": false,
                                                          "paragraph": false,
                                                          "sx": Object {
                                                            "color": undefined,
                                                          },
                                                          "variant": "h6",
                                                          "variantMapping": Object {
                                                            "body1": "p",
                                                            "body2": "p",
                                                            "h1": "h1",
                                                            "h2": "h2",
                                                            "h3": "h3",
                                                            "h4": "h4",
                                                            "h5": "h5",
                                                            "h6": "h6",
                                                            "inherit": "p",
                                                            "subtitle1": "h6",
                                                            "subtitle2": "h6",
                                                          },
                                                        }
                                                      }
                                                      sx={
                                                        Object {
                                                          "color": undefined,
                                                        }
                                                      }
                                                    >
                                                      <Noop />
                                                      <h6
                                                        className="MuiTypography-root MuiTypography-h6 makeStyles-descriptionText-22 css-2ulfj5-MuiTypography-root"
                                                      >
                                                        Date
                                                      </h6>
                                                    </MuiTypographyRoot>
                                                  </ForwardRef(Typography)>
                                                </div>
                                              </MuiGridRoot>
                                            </ForwardRef(Grid)>
                                            <ForwardRef(Grid)
                                              item={true}
                                            >
                                              <MuiGridRoot
                                                as="div"
                                                className="MuiGrid-root MuiGrid-item"
                                                ownerState={
                                                  Object {
                                                    "children": <LocalizationProvider
                                                      dateAdapter={[Function]}
                                                    >
                                                      <ForwardRef(DatePicker)
                                                        disablePast={true}
                                                        onChange={[Function]}
                                                        onError={[Function]}
                                                        openTo="year"
                                                        renderInput={[Function]}
                                                        value={null}
                                                        views={
                                                          Array [
                                                            "year",
                                                            "month",
                                                            "day",
                                                          ]
                                                        }
                                                      />
                                                    </LocalizationProvider>,
                                                    "columnSpacing": 0,
                                                    "columns": 12,
                                                    "container": false,
                                                    "direction": "row",
                                                    "item": true,
                                                    "lg": false,
                                                    "md": false,
                                                    "rowSpacing": 0,
                                                    "sm": false,
                                                    "sx": Object {},
                                                    "wrap": "wrap",
                                                    "xl": false,
                                                    "xs": false,
                                                    "zeroMinWidth": false,
                                                  }
                                                }
                                                sx={Object {}}
                                              >
                                                <Noop />
                                                <div
                                                  className="MuiGrid-root MuiGrid-item css-13i4rnv-MuiGrid-root"
                                                >
                                                  <LocalizationProvider
                                                    dateAdapter={[Function]}
                                                  >
                                                    <ForwardRef(DatePicker)
                                                      disablePast={true}
                                                      onChange={[Function]}
                                                      onError={[Function]}
                                                      openTo="year"
                                                      renderInput={[Function]}
                                                      value={null}
                                                      views={
                                                        Array [
                                                          "year",
                                                          "month",
                                                          "day",
                                                        ]
                                                      }
                                                    >
                                                      <ForwardRef(MobileDatePicker)
                                                        disablePast={true}
                                                        onChange={[Function]}
                                                        onError={[Function]}
                                                        openTo="year"
                                                        renderInput={[Function]}
                                                        value={null}
                                                        views={
                                                          Array [
                                                            "year",
                                                            "month",
                                                            "day",
                                                          ]
                                                        }
                                                      >
                                                        <MobileWrapper
                                                          DateInputProps={
                                                            Object {
                                                              "DialogProps": undefined,
                                                              "cancelText": undefined,
                                                              "clearText": undefined,
                                                              "clearable": undefined,
                                                              "disablePast": true,
                                                              "inputFormat": "P",
                                                              "mask": "__/__/____",
                                                              "maxDate": 2099-12-31T08:00:00.000Z,
                                                              "minDate": 1900-01-01T08:00:00.000Z,
                                                              "okText": undefined,
                                                              "onChange": [Function],
                                                              "onError": [Function],
                                                              "open": false,
                                                              "openPicker": [Function],
                                                              "openTo": "year",
                                                              "rawValue": null,
                                                              "ref": null,
                                                              "renderInput": [Function],
                                                              "showTodayButton": undefined,
                                                              "todayText": undefined,
                                                              "validationError": false,
                                                              "views": Array [
                                                                "year",
                                                                "month",
                                                                "day",
                                                              ],
                                                            }
                                                          }
                                                          PureDateInputComponent={
                                                            Object {
                                                              "$$typeof": Symbol(react.forward_ref),
                                                              "propTypes": Object {
                                                                "getOpenDialogAriaText": [Function],
                                                                "renderInput": [Function],
                                                              },
                                                              "render": [Function],
                                                            }
                                                          }
                                                          disablePast={true}
                                                          inputFormat="P"
                                                          mask="__/__/____"
                                                          maxDate={2099-12-31T08:00:00.000Z}
                                                          minDate={1900-01-01T08:00:00.000Z}
                                                          onAccept={[Function]}
                                                          onClear={[Function]}
                                                          onDismiss={[Function]}
                                                          onError={[Function]}
                                                          onSetToday={[Function]}
                                                          open={false}
                                                          openTo="year"
                                                          renderInput={[Function]}
                                                          views={
                                                            Array [
                                                              "year",
                                                              "month",
                                                              "day",
                                                            ]
                                                          }
                                                        >
                                                          <ForwardRef(PureDateInput)
                                                            disablePast={true}
                                                            inputFormat="P"
                                                            mask="__/__/____"
                                                            maxDate={2099-12-31T08:00:00.000Z}
                                                            minDate={1900-01-01T08:00:00.000Z}
                                                            onChange={[Function]}
                                                            onError={[Function]}
                                                            open={false}
                                                            openPicker={[Function]}
                                                            openTo="year"
                                                            rawValue={null}
                                                            renderInput={[Function]}
                                                            validationError={false}
                                                            views={
                                                              Array [
                                                                "year",
                                                                "month",
                                                                "day",
                                                              ]
                                                            }
                                                          >
                                                            <ForwardRef(TextField)
                                                              InputProps={
                                                                Object {
                                                                  "readOnly": true,
                                                                }
                                                              }
                                                              error={false}
                                                              fullWidth={true}
                                                              id="date_field"
                                                              inputProps={
                                                                Object {
                                                                  "aria-label": "Choose date",
                                                                  "aria-readonly": true,
                                                                  "disabled": undefined,
                                                                  "onClick": [Function],
                                                                  "onKeyDown": [Function],
                                                                  "readOnly": true,
                                                                  "value": "",
                                                                }
                                                              }
                                                              variant="outlined"
                                                            >
                                                              <MuiTextFieldRoot
                                                                className="MuiTextField-root"
                                                                color="primary"
                                                                disabled={false}
                                                                error={false}
                                                                fullWidth={true}
                                                                ownerState={
                                                                  Object {
                                                                    "InputProps": Object {
                                                                      "readOnly": true,
                                                                    },
                                                                    "autoFocus": false,
                                                                    "color": "primary",
                                                                    "disabled": false,
                                                                    "error": false,
                                                                    "fullWidth": true,
                                                                    "id": "date_field",
                                                                    "inputProps": Object {
                                                                      "aria-label": "Choose date",
                                                                      "aria-readonly": true,
                                                                      "disabled": undefined,
                                                                      "onClick": [Function],
                                                                      "onKeyDown": [Function],
                                                                      "readOnly": true,
                                                                      "value": "",
                                                                    },
                                                                    "inputRef": undefined,
                                                                    "label": undefined,
                                                                    "multiline": false,
                                                                    "required": false,
                                                                    "select": false,
                                                                    "variant": "outlined",
                                                                  }
                                                                }
                                                                required={false}
                                                                variant="outlined"
                                                              >
                                                                <Noop />
                                                                <ForwardRef(FormControl)
                                                                  className="MuiTextField-root css-1xj1k15-MuiTextField-root"
                                                                  color="primary"
                                                                  disabled={false}
                                                                  error={false}
                                                                  fullWidth={true}
                                                                  required={false}
                                                                  variant="outlined"
                                                                >
                                                                  <MuiFormControlRoot
                                                                    as="div"
                                                                    className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-1xj1k15-MuiTextField-root"
                                                                    ownerState={
                                                                      Object {
                                                                        "children": Array [
                                                                          undefined,
                                                                          <ForwardRef(OutlinedInput)
                                                                            autoFocus={false}
                                                                            fullWidth={true}
                                                                            id="date_field"
                                                                            inputProps={
                                                                              Object {
                                                                                "aria-label": "Choose date",
                                                                                "aria-readonly": true,
                                                                                "disabled": undefined,
                                                                                "onClick": [Function],
                                                                                "onKeyDown": [Function],
                                                                                "readOnly": true,
                                                                                "value": "",
                                                                              }
                                                                            }
                                                                            multiline={false}
                                                                            readOnly={true}
                                                                          />,
                                                                          undefined,
                                                                        ],
                                                                        "className": "MuiTextField-root css-1xj1k15-MuiTextField-root",
                                                                        "color": "primary",
                                                                        "component": "div",
                                                                        "disabled": false,
                                                                        "error": false,
                                                                        "fullWidth": true,
                                                                        "hiddenLabel": false,
                                                                        "margin": "none",
                                                                        "required": false,
                                                                        "size": "medium",
                                                                        "variant": "outlined",
                                                                      }
                                                                    }
                                                                  >
                                                                    <Noop />
                                                                    <div
                                                                      className="MuiFormControl-root MuiFormControl-fullWidth MuiTextField-root css-wb57ya-MuiFormControl-root-MuiTextField-root"
                                                                    >
                                                                      <ForwardRef(OutlinedInput)
                                                                        autoFocus={false}
                                                                        fullWidth={true}
                                                                        id="date_field"
                                                                        inputProps={
                                                                          Object {
                                                                            "aria-label": "Choose date",
                                                                            "aria-readonly": true,
                                                                            "disabled": undefined,
                                                                            "onClick": [Function],
                                                                            "onKeyDown": [Function],
                                                                            "readOnly": true,
                                                                            "value": "",
                                                                          }
                                                                        }
                                                                        multiline={false}
                                                                        readOnly={true}
                                                                      >
                                                                        <ForwardRef(InputBase)
                                                                          autoFocus={false}
                                                                          classes={
                                                                            Object {
                                                                              "input": "MuiOutlinedInput-input",
                                                                              "notchedOutline": null,
                                                                              "root": "MuiOutlinedInput-root",
                                                                            }
                                                                          }
                                                                          components={
                                                                            Object {
                                                                              "Input": Object {
                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                "__emotion_base": "input",
                                                                                "__emotion_forwardProp": [Function],
                                                                                "__emotion_real": [Circular],
                                                                                "__emotion_styles": Array [
                                                                                  "label:MuiInputBase-input;",
                                                                                  [Function],
                                                                                  [Function],
                                                                                  [Function],
                                                                                  "label:MuiOutlinedInput-input;",
                                                                                  [Function],
                                                                                  [Function],
                                                                                  [Function],
                                                                                ],
                                                                                "defaultProps": undefined,
                                                                                "render": [Function],
                                                                                "withComponent": [Function],
                                                                              },
                                                                              "Root": Object {
                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                "__emotion_base": "div",
                                                                                "__emotion_forwardProp": [Function],
                                                                                "__emotion_real": [Circular],
                                                                                "__emotion_styles": Array [
                                                                                  "label:MuiInputBase-root;",
                                                                                  [Function],
                                                                                  [Function],
                                                                                  [Function],
                                                                                  [Function],
                                                                                  "label:MuiOutlinedInput-root;",
                                                                                  [Function],
                                                                                  [Function],
                                                                                  [Function],
                                                                                  [Function],
                                                                                ],
                                                                                "defaultProps": undefined,
                                                                                "render": [Function],
                                                                                "withComponent": [Function],
                                                                              },
                                                                            }
                                                                          }
                                                                          fullWidth={true}
                                                                          id="date_field"
                                                                          inputComponent="input"
                                                                          inputProps={
                                                                            Object {
                                                                              "aria-label": "Choose date",
                                                                              "aria-readonly": true,
                                                                              "disabled": undefined,
                                                                              "onClick": [Function],
                                                                              "onKeyDown": [Function],
                                                                              "readOnly": true,
                                                                              "value": "",
                                                                            }
                                                                          }
                                                                          multiline={false}
                                                                          readOnly={true}
                                                                          renderSuffix={[Function]}
                                                                          type="text"
                                                                        >
                                                                          <GlobalStyles
                                                                            styles={
                                                                              Object {
                                                                                "@keyframes mui-auto-fill": Object {
                                                                                  "from": Object {
                                                                                    "display": "block",
                                                                                  },
                                                                                },
                                                                                "@keyframes mui-auto-fill-cancel": Object {
                                                                                  "from": Object {
                                                                                    "display": "block",
                                                                                  },
                                                                                },
                                                                              }
                                                                            }
                                                                          >
                                                                            <GlobalStyles
                                                                              defaultTheme={
                                                                                Object {
                                                                                  "breakpoints": Object {
                                                                                    "between": [Function],
                                                                                    "down": [Function],
                                                                                    "keys": Array [
                                                                                      "xs",
                                                                                      "sm",
                                                                                      "md",
                                                                                      "lg",
                                                                                      "xl",
                                                                                    ],
                                                                                    "not": [Function],
                                                                                    "only": [Function],
                                                                                    "unit": "px",
                                                                                    "up": [Function],
                                                                                    "values": Object {
                                                                                      "lg": 1200,
                                                                                      "md": 900,
                                                                                      "sm": 600,
                                                                                      "xl": 1536,
                                                                                      "xs": 0,
                                                                                    },
                                                                                  },
                                                                                  "components": Object {},
                                                                                  "direction": "ltr",
                                                                                  "mixins": Object {
                                                                                    "toolbar": Object {
                                                                                      "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                                        "minHeight": 48,
                                                                                      },
                                                                                      "@media (min-width:600px)": Object {
                                                                                        "minHeight": 64,
                                                                                      },
                                                                                      "minHeight": 56,
                                                                                    },
                                                                                  },
                                                                                  "palette": Object {
                                                                                    "action": Object {
                                                                                      "activatedOpacity": 0.12,
                                                                                      "active": "rgba(0, 0, 0, 0.54)",
                                                                                      "disabled": "rgba(0, 0, 0, 0.26)",
                                                                                      "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                                      "disabledOpacity": 0.38,
                                                                                      "focus": "rgba(0, 0, 0, 0.12)",
                                                                                      "focusOpacity": 0.12,
                                                                                      "hover": "rgba(0, 0, 0, 0.04)",
                                                                                      "hoverOpacity": 0.04,
                                                                                      "selected": "rgba(0, 0, 0, 0.08)",
                                                                                      "selectedOpacity": 0.08,
                                                                                    },
                                                                                    "augmentColor": [Function],
                                                                                    "background": Object {
                                                                                      "default": "#fff",
                                                                                      "paper": "#fff",
                                                                                    },
                                                                                    "common": Object {
                                                                                      "black": "#000",
                                                                                      "white": "#fff",
                                                                                    },
                                                                                    "contrastThreshold": 3,
                                                                                    "divider": "rgba(0, 0, 0, 0.12)",
                                                                                    "error": Object {
                                                                                      "contrastText": "#fff",
                                                                                      "dark": "#c62828",
                                                                                      "light": "#ef5350",
                                                                                      "main": "#d32f2f",
                                                                                    },
                                                                                    "getContrastText": [Function],
                                                                                    "grey": Object {
                                                                                      "100": "#f5f5f5",
                                                                                      "200": "#eeeeee",
                                                                                      "300": "#e0e0e0",
                                                                                      "400": "#bdbdbd",
                                                                                      "50": "#fafafa",
                                                                                      "500": "#9e9e9e",
                                                                                      "600": "#757575",
                                                                                      "700": "#616161",
                                                                                      "800": "#424242",
                                                                                      "900": "#212121",
                                                                                      "A100": "#f5f5f5",
                                                                                      "A200": "#eeeeee",
                                                                                      "A400": "#bdbdbd",
                                                                                      "A700": "#616161",
                                                                                    },
                                                                                    "info": Object {
                                                                                      "contrastText": "#fff",
                                                                                      "dark": "#01579b",
                                                                                      "light": "#03a9f4",
                                                                                      "main": "#0288d1",
                                                                                    },
                                                                                    "mode": "light",
                                                                                    "primary": Object {
                                                                                      "contrastText": "#fff",
                                                                                      "dark": "#1565c0",
                                                                                      "light": "#42a5f5",
                                                                                      "main": "#1976d2",
                                                                                    },
                                                                                    "secondary": Object {
                                                                                      "contrastText": "#fff",
                                                                                      "dark": "#7b1fa2",
                                                                                      "light": "#ba68c8",
                                                                                      "main": "#9c27b0",
                                                                                    },
                                                                                    "success": Object {
                                                                                      "contrastText": "#fff",
                                                                                      "dark": "#1b5e20",
                                                                                      "light": "#4caf50",
                                                                                      "main": "#2e7d32",
                                                                                    },
                                                                                    "text": Object {
                                                                                      "disabled": "rgba(0, 0, 0, 0.38)",
                                                                                      "primary": "rgba(0, 0, 0, 0.87)",
                                                                                      "secondary": "rgba(0, 0, 0, 0.6)",
                                                                                    },
                                                                                    "tonalOffset": 0.2,
                                                                                    "warning": Object {
                                                                                      "contrastText": "#fff",
                                                                                      "dark": "#e65100",
                                                                                      "light": "#ff9800",
                                                                                      "main": "#ed6c02",
                                                                                    },
                                                                                  },
                                                                                  "shadows": Array [
                                                                                    "none",
                                                                                    "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
                                                                                    "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
                                                                                    "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
                                                                                    "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                                    "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                                    "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                                    "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                                    "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                                    "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                                    "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                                    "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                                    "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                                    "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                                    "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                                    "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                                    "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                                    "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                                    "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                                    "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                                    "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                                    "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                                  ],
                                                                                  "shape": Object {
                                                                                    "borderRadius": 4,
                                                                                  },
                                                                                  "spacing": [Function],
                                                                                  "transitions": Object {
                                                                                    "create": [Function],
                                                                                    "duration": Object {
                                                                                      "complex": 375,
                                                                                      "enteringScreen": 225,
                                                                                      "leavingScreen": 195,
                                                                                      "short": 250,
                                                                                      "shorter": 200,
                                                                                      "shortest": 150,
                                                                                      "standard": 300,
                                                                                    },
                                                                                    "easing": Object {
                                                                                      "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                                      "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                                      "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                                      "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                                    },
                                                                                    "getAutoHeightDuration": [Function],
                                                                                  },
                                                                                  "typography": Object {
                                                                                    "body1": Object {
                                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                      "fontSize": "1rem",
                                                                                      "fontWeight": 400,
                                                                                      "letterSpacing": "0.00938em",
                                                                                      "lineHeight": 1.5,
                                                                                    },
                                                                                    "body2": Object {
                                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                      "fontSize": "0.875rem",
                                                                                      "fontWeight": 400,
                                                                                      "letterSpacing": "0.01071em",
                                                                                      "lineHeight": 1.43,
                                                                                    },
                                                                                    "button": Object {
                                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                      "fontSize": "0.875rem",
                                                                                      "fontWeight": 500,
                                                                                      "letterSpacing": "0.02857em",
                                                                                      "lineHeight": 1.75,
                                                                                      "textTransform": "uppercase",
                                                                                    },
                                                                                    "caption": Object {
                                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                      "fontSize": "0.75rem",
                                                                                      "fontWeight": 400,
                                                                                      "letterSpacing": "0.03333em",
                                                                                      "lineHeight": 1.66,
                                                                                    },
                                                                                    "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                    "fontSize": 14,
                                                                                    "fontWeightBold": 700,
                                                                                    "fontWeightLight": 300,
                                                                                    "fontWeightMedium": 500,
                                                                                    "fontWeightRegular": 400,
                                                                                    "h1": Object {
                                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                      "fontSize": "6rem",
                                                                                      "fontWeight": 300,
                                                                                      "letterSpacing": "-0.01562em",
                                                                                      "lineHeight": 1.167,
                                                                                    },
                                                                                    "h2": Object {
                                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                      "fontSize": "3.75rem",
                                                                                      "fontWeight": 300,
                                                                                      "letterSpacing": "-0.00833em",
                                                                                      "lineHeight": 1.2,
                                                                                    },
                                                                                    "h3": Object {
                                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                      "fontSize": "3rem",
                                                                                      "fontWeight": 400,
                                                                                      "letterSpacing": "0em",
                                                                                      "lineHeight": 1.167,
                                                                                    },
                                                                                    "h4": Object {
                                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                      "fontSize": "2.125rem",
                                                                                      "fontWeight": 400,
                                                                                      "letterSpacing": "0.00735em",
                                                                                      "lineHeight": 1.235,
                                                                                    },
                                                                                    "h5": Object {
                                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                      "fontSize": "1.5rem",
                                                                                      "fontWeight": 400,
                                                                                      "letterSpacing": "0em",
                                                                                      "lineHeight": 1.334,
                                                                                    },
                                                                                    "h6": Object {
                                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                      "fontSize": "1.25rem",
                                                                                      "fontWeight": 500,
                                                                                      "letterSpacing": "0.0075em",
                                                                                      "lineHeight": 1.6,
                                                                                    },
                                                                                    "htmlFontSize": 16,
                                                                                    "overline": Object {
                                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                      "fontSize": "0.75rem",
                                                                                      "fontWeight": 400,
                                                                                      "letterSpacing": "0.08333em",
                                                                                      "lineHeight": 2.66,
                                                                                      "textTransform": "uppercase",
                                                                                    },
                                                                                    "pxToRem": [Function],
                                                                                    "subtitle1": Object {
                                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                      "fontSize": "1rem",
                                                                                      "fontWeight": 400,
                                                                                      "letterSpacing": "0.00938em",
                                                                                      "lineHeight": 1.75,
                                                                                    },
                                                                                    "subtitle2": Object {
                                                                                      "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                      "fontSize": "0.875rem",
                                                                                      "fontWeight": 500,
                                                                                      "letterSpacing": "0.00714em",
                                                                                      "lineHeight": 1.57,
                                                                                    },
                                                                                  },
                                                                                  "zIndex": Object {
                                                                                    "appBar": 1100,
                                                                                    "drawer": 1200,
                                                                                    "mobileStepper": 1000,
                                                                                    "modal": 1300,
                                                                                    "snackbar": 1400,
                                                                                    "speedDial": 1050,
                                                                                    "tooltip": 1500,
                                                                                  },
                                                                                }
                                                                              }
                                                                              styles={
                                                                                Object {
                                                                                  "@keyframes mui-auto-fill": Object {
                                                                                    "from": Object {
                                                                                      "display": "block",
                                                                                    },
                                                                                  },
                                                                                  "@keyframes mui-auto-fill-cancel": Object {
                                                                                    "from": Object {
                                                                                      "display": "block",
                                                                                    },
                                                                                  },
                                                                                }
                                                                              }
                                                                            >
                                                                              <EmotionGlobal
                                                                                styles={
                                                                                  Object {
                                                                                    "@keyframes mui-auto-fill": Object {
                                                                                      "from": Object {
                                                                                        "display": "block",
                                                                                      },
                                                                                    },
                                                                                    "@keyframes mui-auto-fill-cancel": Object {
                                                                                      "from": Object {
                                                                                        "display": "block",
                                                                                      },
                                                                                    },
                                                                                  }
                                                                                }
                                                                              />
                                                                            </GlobalStyles>
                                                                          </GlobalStyles>
                                                                          <MuiOutlinedInputRoot
                                                                            className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                            classes={
                                                                              Object {
                                                                                "input": "MuiOutlinedInput-input",
                                                                                "notchedOutline": null,
                                                                                "root": "MuiOutlinedInput-root",
                                                                              }
                                                                            }
                                                                            onClick={[Function]}
                                                                            ownerState={
                                                                              Object {
                                                                                "aria-describedby": undefined,
                                                                                "autoComplete": undefined,
                                                                                "autoFocus": false,
                                                                                "classes": Object {
                                                                                  "input": "MuiOutlinedInput-input",
                                                                                  "notchedOutline": null,
                                                                                  "root": "MuiOutlinedInput-root",
                                                                                },
                                                                                "color": "primary",
                                                                                "components": Object {
                                                                                  "Input": Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "__emotion_base": "input",
                                                                                    "__emotion_forwardProp": [Function],
                                                                                    "__emotion_real": [Circular],
                                                                                    "__emotion_styles": Array [
                                                                                      "label:MuiInputBase-input;",
                                                                                      [Function],
                                                                                      [Function],
                                                                                      [Function],
                                                                                      "label:MuiOutlinedInput-input;",
                                                                                      [Function],
                                                                                      [Function],
                                                                                      [Function],
                                                                                    ],
                                                                                    "defaultProps": undefined,
                                                                                    "render": [Function],
                                                                                    "withComponent": [Function],
                                                                                  },
                                                                                  "Root": Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "__emotion_base": "div",
                                                                                    "__emotion_forwardProp": [Function],
                                                                                    "__emotion_real": [Circular],
                                                                                    "__emotion_styles": Array [
                                                                                      "label:MuiInputBase-root;",
                                                                                      [Function],
                                                                                      [Function],
                                                                                      [Function],
                                                                                      [Function],
                                                                                      "label:MuiOutlinedInput-root;",
                                                                                      [Function],
                                                                                      [Function],
                                                                                      [Function],
                                                                                      [Function],
                                                                                    ],
                                                                                    "defaultProps": undefined,
                                                                                    "render": [Function],
                                                                                    "withComponent": [Function],
                                                                                  },
                                                                                },
                                                                                "defaultValue": undefined,
                                                                                "disabled": false,
                                                                                "endAdornment": undefined,
                                                                                "error": false,
                                                                                "focused": false,
                                                                                "formControl": Object {
                                                                                  "adornedStart": false,
                                                                                  "color": "primary",
                                                                                  "disabled": false,
                                                                                  "error": false,
                                                                                  "filled": false,
                                                                                  "focused": false,
                                                                                  "fullWidth": true,
                                                                                  "hiddenLabel": false,
                                                                                  "onBlur": [Function],
                                                                                  "onEmpty": [Function],
                                                                                  "onFilled": [Function],
                                                                                  "onFocus": [Function],
                                                                                  "registerEffect": [Function],
                                                                                  "required": false,
                                                                                  "setAdornedStart": [Function],
                                                                                  "size": "medium",
                                                                                  "variant": "outlined",
                                                                                },
                                                                                "fullWidth": true,
                                                                                "hiddenLabel": false,
                                                                                "id": "date_field",
                                                                                "inputComponent": "input",
                                                                                "inputProps": Object {
                                                                                  "aria-label": "Choose date",
                                                                                  "aria-readonly": true,
                                                                                  "disabled": undefined,
                                                                                  "onClick": [Function],
                                                                                  "onKeyDown": [Function],
                                                                                  "readOnly": true,
                                                                                  "value": "",
                                                                                },
                                                                                "inputRef": undefined,
                                                                                "maxRows": undefined,
                                                                                "minRows": undefined,
                                                                                "multiline": false,
                                                                                "name": undefined,
                                                                                "onBlur": undefined,
                                                                                "onChange": undefined,
                                                                                "onFocus": undefined,
                                                                                "placeholder": undefined,
                                                                                "readOnly": true,
                                                                                "renderSuffix": [Function],
                                                                                "rows": undefined,
                                                                                "size": "medium",
                                                                                "startAdornment": undefined,
                                                                                "type": "text",
                                                                                "value": undefined,
                                                                              }
                                                                            }
                                                                          >
                                                                            <Noop />
                                                                            <div
                                                                              className="MuiOutlinedInput-root MuiInputBase-root MuiInputBase-colorPrimary MuiInputBase-fullWidth MuiInputBase-formControl css-md26zr-MuiInputBase-root-MuiOutlinedInput-root"
                                                                              onClick={[Function]}
                                                                            >
                                                                              <MuiOutlinedInputInput
                                                                                aria-invalid={false}
                                                                                aria-label="Choose date"
                                                                                aria-readonly={true}
                                                                                as="input"
                                                                                autoFocus={false}
                                                                                className="MuiOutlinedInput-input MuiInputBase-input"
                                                                                id="date_field"
                                                                                onAnimationStart={[Function]}
                                                                                onBlur={[Function]}
                                                                                onChange={[Function]}
                                                                                onClick={[Function]}
                                                                                onFocus={[Function]}
                                                                                onKeyDown={[Function]}
                                                                                ownerState={
                                                                                  Object {
                                                                                    "aria-describedby": undefined,
                                                                                    "autoComplete": undefined,
                                                                                    "autoFocus": false,
                                                                                    "classes": Object {
                                                                                      "input": "MuiOutlinedInput-input",
                                                                                      "notchedOutline": null,
                                                                                      "root": "MuiOutlinedInput-root",
                                                                                    },
                                                                                    "color": "primary",
                                                                                    "components": Object {
                                                                                      "Input": Object {
                                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                                        "__emotion_base": "input",
                                                                                        "__emotion_forwardProp": [Function],
                                                                                        "__emotion_real": [Circular],
                                                                                        "__emotion_styles": Array [
                                                                                          "label:MuiInputBase-input;",
                                                                                          [Function],
                                                                                          [Function],
                                                                                          [Function],
                                                                                          "label:MuiOutlinedInput-input;",
                                                                                          [Function],
                                                                                          [Function],
                                                                                          [Function],
                                                                                        ],
                                                                                        "defaultProps": undefined,
                                                                                        "render": [Function],
                                                                                        "withComponent": [Function],
                                                                                      },
                                                                                      "Root": Object {
                                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                                        "__emotion_base": "div",
                                                                                        "__emotion_forwardProp": [Function],
                                                                                        "__emotion_real": [Circular],
                                                                                        "__emotion_styles": Array [
                                                                                          "label:MuiInputBase-root;",
                                                                                          [Function],
                                                                                          [Function],
                                                                                          [Function],
                                                                                          [Function],
                                                                                          "label:MuiOutlinedInput-root;",
                                                                                          [Function],
                                                                                          [Function],
                                                                                          [Function],
                                                                                          [Function],
                                                                                        ],
                                                                                        "defaultProps": undefined,
                                                                                        "render": [Function],
                                                                                        "withComponent": [Function],
                                                                                      },
                                                                                    },
                                                                                    "defaultValue": undefined,
                                                                                    "disabled": false,
                                                                                    "endAdornment": undefined,
                                                                                    "error": false,
                                                                                    "focused": false,
                                                                                    "formControl": Object {
                                                                                      "adornedStart": false,
                                                                                      "color": "primary",
                                                                                      "disabled": false,
                                                                                      "error": false,
                                                                                      "filled": false,
                                                                                      "focused": false,
                                                                                      "fullWidth": true,
                                                                                      "hiddenLabel": false,
                                                                                      "onBlur": [Function],
                                                                                      "onEmpty": [Function],
                                                                                      "onFilled": [Function],
                                                                                      "onFocus": [Function],
                                                                                      "registerEffect": [Function],
                                                                                      "required": false,
                                                                                      "setAdornedStart": [Function],
                                                                                      "size": "medium",
                                                                                      "variant": "outlined",
                                                                                    },
                                                                                    "fullWidth": true,
                                                                                    "hiddenLabel": false,
                                                                                    "id": "date_field",
                                                                                    "inputComponent": "input",
                                                                                    "inputProps": Object {
                                                                                      "aria-label": "Choose date",
                                                                                      "aria-readonly": true,
                                                                                      "disabled": undefined,
                                                                                      "onClick": [Function],
                                                                                      "onKeyDown": [Function],
                                                                                      "readOnly": true,
                                                                                      "value": "",
                                                                                    },
                                                                                    "inputRef": undefined,
                                                                                    "maxRows": undefined,
                                                                                    "minRows": undefined,
                                                                                    "multiline": false,
                                                                                    "name": undefined,
                                                                                    "onBlur": undefined,
                                                                                    "onChange": undefined,
                                                                                    "onFocus": undefined,
                                                                                    "placeholder": undefined,
                                                                                    "readOnly": true,
                                                                                    "renderSuffix": [Function],
                                                                                    "rows": undefined,
                                                                                    "size": "medium",
                                                                                    "startAdornment": undefined,
                                                                                    "type": "text",
                                                                                    "value": undefined,
                                                                                  }
                                                                                }
                                                                                readOnly={true}
                                                                                required={false}
                                                                                type="text"
                                                                                value=""
                                                                              >
                                                                                <Noop />
                                                                                <input
                                                                                  aria-invalid={false}
                                                                                  aria-label="Choose date"
                                                                                  aria-readonly={true}
                                                                                  autoFocus={false}
                                                                                  className="MuiOutlinedInput-input MuiInputBase-input css-1t8l2tu-MuiInputBase-input-MuiOutlinedInput-input"
                                                                                  id="date_field"
                                                                                  onAnimationStart={[Function]}
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  onClick={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  onKeyDown={[Function]}
                                                                                  readOnly={true}
                                                                                  required={false}
                                                                                  type="text"
                                                                                  value=""
                                                                                />
                                                                              </MuiOutlinedInputInput>
                                                                              <MuiOutlinedInputNotchedOutline
                                                                                className="MuiOutlinedInput-notchedOutline"
                                                                                notched={false}
                                                                              >
                                                                                <Noop />
                                                                                <NotchedOutline
                                                                                  className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                                                  notched={false}
                                                                                >
                                                                                  <Styled(fieldset)
                                                                                    aria-hidden={true}
                                                                                    className="MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline"
                                                                                    ownerState={
                                                                                      Object {
                                                                                        "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                                                        "label": undefined,
                                                                                        "notched": false,
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <Noop />
                                                                                    <fieldset
                                                                                      aria-hidden={true}
                                                                                      className="MuiOutlinedInput-notchedOutline css-1d3z3hw-MuiOutlinedInput-notchedOutline"
                                                                                    >
                                                                                      <Styled(legend)
                                                                                        ownerState={
                                                                                          Object {
                                                                                            "className": "MuiOutlinedInput-notchedOutline css-rki20w-MuiOutlinedInput-notchedOutline",
                                                                                            "label": undefined,
                                                                                            "notched": false,
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <Noop />
                                                                                        <legend
                                                                                          className="css-nnbavb"
                                                                                        >
                                                                                          <span
                                                                                            className="notranslate"
                                                                                            dangerouslySetInnerHTML={
                                                                                              Object {
                                                                                                "__html": "&#8203;",
                                                                                              }
                                                                                            }
                                                                                          />
                                                                                        </legend>
                                                                                      </Styled(legend)>
                                                                                    </fieldset>
                                                                                  </Styled(fieldset)>
                                                                                </NotchedOutline>
                                                                              </MuiOutlinedInputNotchedOutline>
                                                                            </div>
                                                                          </MuiOutlinedInputRoot>
                                                                        </ForwardRef(InputBase)>
                                                                      </ForwardRef(OutlinedInput)>
                                                                    </div>
                                                                  </MuiFormControlRoot>
                                                                </ForwardRef(FormControl)>
                                                              </MuiTextFieldRoot>
                                                            </ForwardRef(TextField)>
                                                          </ForwardRef(PureDateInput)>
                                                          <PickersModalDialog
                                                            onAccept={[Function]}
                                                            onClear={[Function]}
                                                            onDismiss={[Function]}
                                                            onSetToday={[Function]}
                                                            open={false}
                                                          >
                                                            <Styled(ForwardRef(Dialog))
                                                              onClose={[Function]}
                                                              open={false}
                                                            >
                                                              <Noop />
                                                              <ForwardRef(Dialog)
                                                                className="css-1rqc0ef"
                                                                onClose={[Function]}
                                                                open={false}
                                                              >
                                                                <MuiDialogRoot
                                                                  BackdropComponent={
                                                                    Object {
                                                                      "$$typeof": Symbol(react.forward_ref),
                                                                      "__emotion_base": Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "propTypes": Object {
                                                                          "children": [Function],
                                                                          "className": [Function],
                                                                          "classes": [Function],
                                                                          "components": [Function],
                                                                          "componentsProps": [Function],
                                                                          "invisible": [Function],
                                                                          "open": [Function],
                                                                          "sx": [Function],
                                                                          "transitionDuration": [Function],
                                                                        },
                                                                        "render": [Function],
                                                                      },
                                                                      "__emotion_forwardProp": [Function],
                                                                      "__emotion_real": [Circular],
                                                                      "__emotion_styles": Array [
                                                                        "label:MuiDialog-backdrop;",
                                                                        Object {
                                                                          "zIndex": -1,
                                                                        },
                                                                        [Function],
                                                                      ],
                                                                      "defaultProps": undefined,
                                                                      "render": [Function],
                                                                      "withComponent": [Function],
                                                                    }
                                                                  }
                                                                  BackdropProps={
                                                                    Object {
                                                                      "as": undefined,
                                                                      "transitionDuration": Object {
                                                                        "enter": 225,
                                                                        "exit": 195,
                                                                      },
                                                                    }
                                                                  }
                                                                  className="MuiDialog-root css-1rqc0ef"
                                                                  closeAfterTransition={true}
                                                                  disableEscapeKeyDown={false}
                                                                  onClick={[Function]}
                                                                  onClose={[Function]}
                                                                  open={false}
                                                                  ownerState={
                                                                    Object {
                                                                      "children": Array [
                                                                        <Styled(ForwardRef(DialogContent))>
                                                                          <Picker
                                                                            DateInputProps={
                                                                              Object {
                                                                                "DialogProps": undefined,
                                                                                "cancelText": undefined,
                                                                                "clearText": undefined,
                                                                                "clearable": undefined,
                                                                                "disablePast": true,
                                                                                "inputFormat": "P",
                                                                                "mask": "__/__/____",
                                                                                "maxDate": 2099-12-31T08:00:00.000Z,
                                                                                "minDate": 1900-01-01T08:00:00.000Z,
                                                                                "okText": undefined,
                                                                                "onChange": [Function],
                                                                                "onError": [Function],
                                                                                "open": false,
                                                                                "openPicker": [Function],
                                                                                "openTo": "year",
                                                                                "rawValue": null,
                                                                                "ref": null,
                                                                                "renderInput": [Function],
                                                                                "showTodayButton": undefined,
                                                                                "todayText": undefined,
                                                                                "validationError": false,
                                                                                "views": Array [
                                                                                  "year",
                                                                                  "month",
                                                                                  "day",
                                                                                ],
                                                                              }
                                                                            }
                                                                            ToolbarComponent={
                                                                              Object {
                                                                                "$$typeof": Symbol(react.forward_ref),
                                                                                "render": [Function],
                                                                              }
                                                                            }
                                                                            autoFocus={true}
                                                                            date={null}
                                                                            disablePast={true}
                                                                            inputFormat="P"
                                                                            isMobileKeyboardViewOpen={false}
                                                                            mask="__/__/____"
                                                                            maxDate={2099-12-31T08:00:00.000Z}
                                                                            minDate={1900-01-01T08:00:00.000Z}
                                                                            onDateChange={[Function]}
                                                                            onError={[Function]}
                                                                            openTo="year"
                                                                            renderInput={[Function]}
                                                                            toggleMobileKeyboardView={[Function]}
                                                                            views={
                                                                              Array [
                                                                                "year",
                                                                                "month",
                                                                                "day",
                                                                              ]
                                                                            }
                                                                          />
                                                                        </Styled(ForwardRef(DialogContent))>,
                                                                        <Styled(ForwardRef(DialogActions))
                                                                          ownerState={
                                                                            Object {
                                                                              "DialogProps": undefined,
                                                                              "cancelText": undefined,
                                                                              "children": <Picker
                                                                                DateInputProps={
                                                                                  Object {
                                                                                    "DialogProps": undefined,
                                                                                    "cancelText": undefined,
                                                                                    "clearText": undefined,
                                                                                    "clearable": undefined,
                                                                                    "disablePast": true,
                                                                                    "inputFormat": "P",
                                                                                    "mask": "__/__/____",
                                                                                    "maxDate": 2099-12-31T08:00:00.000Z,
                                                                                    "minDate": 1900-01-01T08:00:00.000Z,
                                                                                    "okText": undefined,
                                                                                    "onChange": [Function],
                                                                                    "onError": [Function],
                                                                                    "open": false,
                                                                                    "openPicker": [Function],
                                                                                    "openTo": "year",
                                                                                    "rawValue": null,
                                                                                    "ref": null,
                                                                                    "renderInput": [Function],
                                                                                    "showTodayButton": undefined,
                                                                                    "todayText": undefined,
                                                                                    "validationError": false,
                                                                                    "views": Array [
                                                                                      "year",
                                                                                      "month",
                                                                                      "day",
                                                                                    ],
                                                                                  }
                                                                                }
                                                                                ToolbarComponent={
                                                                                  Object {
                                                                                    "$$typeof": Symbol(react.forward_ref),
                                                                                    "render": [Function],
                                                                                  }
                                                                                }
                                                                                autoFocus={true}
                                                                                date={null}
                                                                                disablePast={true}
                                                                                inputFormat="P"
                                                                                isMobileKeyboardViewOpen={false}
                                                                                mask="__/__/____"
                                                                                maxDate={2099-12-31T08:00:00.000Z}
                                                                                minDate={1900-01-01T08:00:00.000Z}
                                                                                onDateChange={[Function]}
                                                                                onError={[Function]}
                                                                                openTo="year"
                                                                                renderInput={[Function]}
                                                                                toggleMobileKeyboardView={[Function]}
                                                                                views={
                                                                                  Array [
                                                                                    "year",
                                                                                    "month",
                                                                                    "day",
                                                                                  ]
                                                                                }
                                                                              />,
                                                                              "clearText": undefined,
                                                                              "clearable": undefined,
                                                                              "okText": undefined,
                                                                              "onAccept": [Function],
                                                                              "onClear": [Function],
                                                                              "onDismiss": [Function],
                                                                              "onSetToday": [Function],
                                                                              "open": false,
                                                                              "showTodayButton": undefined,
                                                                              "todayText": undefined,
                                                                            }
                                                                          }
                                                                        >
                                                                          <ForwardRef(Button)
                                                                            onClick={[Function]}
                                                                          >
                                                                            Cancel
                                                                          </ForwardRef(Button)>
                                                                          <ForwardRef(Button)
                                                                            onClick={[Function]}
                                                                          >
                                                                            OK
                                                                          </ForwardRef(Button)>
                                                                        </Styled(ForwardRef(DialogActions))>,
                                                                      ],
                                                                      "className": "css-1rqc0ef",
                                                                      "disableEscapeKeyDown": false,
                                                                      "fullScreen": false,
                                                                      "fullWidth": false,
                                                                      "maxWidth": "sm",
                                                                      "onClose": [Function],
                                                                      "open": false,
                                                                      "scroll": "paper",
                                                                    }
                                                                  }
                                                                >
                                                                  <Noop />
                                                                  <ForwardRef(Modal)
                                                                    BackdropComponent={
                                                                      Object {
                                                                        "$$typeof": Symbol(react.forward_ref),
                                                                        "__emotion_base": Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "propTypes": Object {
                                                                            "children": [Function],
                                                                            "className": [Function],
                                                                            "classes": [Function],
                                                                            "components": [Function],
                                                                            "componentsProps": [Function],
                                                                            "invisible": [Function],
                                                                            "open": [Function],
                                                                            "sx": [Function],
                                                                            "transitionDuration": [Function],
                                                                          },
                                                                          "render": [Function],
                                                                        },
                                                                        "__emotion_forwardProp": [Function],
                                                                        "__emotion_real": [Circular],
                                                                        "__emotion_styles": Array [
                                                                          "label:MuiDialog-backdrop;",
                                                                          Object {
                                                                            "zIndex": -1,
                                                                          },
                                                                          [Function],
                                                                        ],
                                                                        "defaultProps": undefined,
                                                                        "render": [Function],
                                                                        "withComponent": [Function],
                                                                      }
                                                                    }
                                                                    BackdropProps={
                                                                      Object {
                                                                        "as": undefined,
                                                                        "transitionDuration": Object {
                                                                          "enter": 225,
                                                                          "exit": 195,
                                                                        },
                                                                      }
                                                                    }
                                                                    className="MuiDialog-root css-7ou0vq-MuiDialog-root"
                                                                    closeAfterTransition={true}
                                                                    disableEscapeKeyDown={false}
                                                                    onClick={[Function]}
                                                                    onClose={[Function]}
                                                                    open={false}
                                                                  >
                                                                    <ForwardRef(ModalUnstyled)
                                                                      BackdropComponent={
                                                                        Object {
                                                                          "$$typeof": Symbol(react.forward_ref),
                                                                          "__emotion_base": Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "propTypes": Object {
                                                                              "children": [Function],
                                                                              "className": [Function],
                                                                              "classes": [Function],
                                                                              "components": [Function],
                                                                              "componentsProps": [Function],
                                                                              "invisible": [Function],
                                                                              "open": [Function],
                                                                              "sx": [Function],
                                                                              "transitionDuration": [Function],
                                                                            },
                                                                            "render": [Function],
                                                                          },
                                                                          "__emotion_forwardProp": [Function],
                                                                          "__emotion_real": [Circular],
                                                                          "__emotion_styles": Array [
                                                                            "label:MuiDialog-backdrop;",
                                                                            Object {
                                                                              "zIndex": -1,
                                                                            },
                                                                            [Function],
                                                                          ],
                                                                          "defaultProps": undefined,
                                                                          "render": [Function],
                                                                          "withComponent": [Function],
                                                                        }
                                                                      }
                                                                      BackdropProps={
                                                                        Object {
                                                                          "as": undefined,
                                                                          "transitionDuration": Object {
                                                                            "enter": 225,
                                                                            "exit": 195,
                                                                          },
                                                                        }
                                                                      }
                                                                      className="MuiDialog-root css-7ou0vq-MuiDialog-root"
                                                                      closeAfterTransition={true}
                                                                      components={
                                                                        Object {
                                                                          "Root": Object {
                                                                            "$$typeof": Symbol(react.forward_ref),
                                                                            "__emotion_base": "div",
                                                                            "__emotion_forwardProp": [Function],
                                                                            "__emotion_real": [Circular],
                                                                            "__emotion_styles": Array [
                                                                              "label:MuiModal-root;",
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                              [Function],
                                                                            ],
                                                                            "defaultProps": undefined,
                                                                            "render": [Function],
                                                                            "withComponent": [Function],
                                                                          },
                                                                        }
                                                                      }
                                                                      componentsProps={
                                                                        Object {
                                                                          "root": Object {
                                                                            "ownerState": Object {},
                                                                          },
                                                                        }
                                                                      }
                                                                      disableAutoFocus={false}
                                                                      disableEnforceFocus={false}
                                                                      disableEscapeKeyDown={false}
                                                                      disablePortal={false}
                                                                      disableRestoreFocus={false}
                                                                      disableScrollLock={false}
                                                                      hideBackdrop={false}
                                                                      keepMounted={false}
                                                                      onClick={[Function]}
                                                                      onClose={[Function]}
                                                                      onTransitionEnter={[Function]}
                                                                      onTransitionExited={[Function]}
                                                                      open={false}
                                                                    />
                                                                  </ForwardRef(Modal)>
                                                                </MuiDialogRoot>
                                                              </ForwardRef(Dialog)>
                                                            </Styled(ForwardRef(Dialog))>
                                                          </PickersModalDialog>
                                                        </MobileWrapper>
                                                      </ForwardRef(MobileDatePicker)>
                                                    </ForwardRef(DatePicker)>
                                                  </LocalizationProvider>
                                                </div>
                                              </MuiGridRoot>
                                            </ForwardRef(Grid)>
                                            <ForwardRef(Grid)
                                              alignSelf="flex-end"
                                              className="makeStyles-button-23"
                                              item={true}
                                            >
                                              <MuiGridRoot
                                                as="div"
                                                className="MuiGrid-root MuiGrid-item makeStyles-button-23"
                                                ownerState={
                                                  Object {
                                                    "children": <ForwardRef(Button)
                                                      disabled={true}
                                                      id="save"
                                                      onClick={[Function]}
                                                      variant="contained"
                                                    >
                                                      Save
                                                    </ForwardRef(Button)>,
                                                    "className": "makeStyles-button-23",
                                                    "columnSpacing": 0,
                                                    "columns": 12,
                                                    "container": false,
                                                    "direction": "row",
                                                    "item": true,
                                                    "lg": false,
                                                    "md": false,
                                                    "rowSpacing": 0,
                                                    "sm": false,
                                                    "sx": Object {
                                                      "alignSelf": "flex-end",
                                                    },
                                                    "wrap": "wrap",
                                                    "xl": false,
                                                    "xs": false,
                                                    "zeroMinWidth": false,
                                                  }
                                                }
                                                sx={
                                                  Object {
                                                    "alignSelf": "flex-end",
                                                  }
                                                }
                                              >
                                                <Noop />
                                                <div
                                                  className="MuiGrid-root MuiGrid-item makeStyles-button-23 css-1d2j7l7-MuiGrid-root"
                                                >
                                                  <ForwardRef(Button)
                                                    disabled={true}
                                                    id="save"
                                                    onClick={[Function]}
                                                    variant="contained"
                                                  >
                                                    <MuiButtonRoot
                                                      className=""
                                                      classes={
                                                        Object {
                                                          "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                          "label": "MuiButton-label",
                                                          "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                                          "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                        }
                                                      }
                                                      component="button"
                                                      disabled={true}
                                                      focusRipple={true}
                                                      focusVisibleClassName=""
                                                      id="save"
                                                      onClick={[Function]}
                                                      ownerState={
                                                        Object {
                                                          "children": "Save",
                                                          "color": "primary",
                                                          "component": "button",
                                                          "disableElevation": false,
                                                          "disableFocusRipple": false,
                                                          "disabled": true,
                                                          "fullWidth": false,
                                                          "id": "save",
                                                          "onClick": [Function],
                                                          "size": "medium",
                                                          "type": undefined,
                                                          "variant": "contained",
                                                        }
                                                      }
                                                    >
                                                      <Noop />
                                                      <ForwardRef(ButtonBase)
                                                        className=" css-1yu95zv-MuiButton-root"
                                                        classes={
                                                          Object {
                                                            "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                            "label": "MuiButton-label",
                                                            "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                                            "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                          }
                                                        }
                                                        component="button"
                                                        disabled={true}
                                                        focusRipple={true}
                                                        focusVisibleClassName=""
                                                        id="save"
                                                        onClick={[Function]}
                                                      >
                                                        <MuiButtonBaseRoot
                                                          as="button"
                                                          className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root Mui-disabled  css-1yu95zv-MuiButton-root"
                                                          classes={
                                                            Object {
                                                              "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                              "label": "MuiButton-label",
                                                              "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                                              "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                            }
                                                          }
                                                          disabled={true}
                                                          id="save"
                                                          onBlur={[Function]}
                                                          onClick={[Function]}
                                                          onContextMenu={[Function]}
                                                          onDragLeave={[Function]}
                                                          onFocus={[Function]}
                                                          onKeyDown={[Function]}
                                                          onKeyUp={[Function]}
                                                          onMouseDown={[Function]}
                                                          onMouseLeave={[Function]}
                                                          onMouseUp={[Function]}
                                                          onTouchEnd={[Function]}
                                                          onTouchMove={[Function]}
                                                          onTouchStart={[Function]}
                                                          ownerState={
                                                            Object {
                                                              "centerRipple": false,
                                                              "children": Array [
                                                                undefined,
                                                                "Save",
                                                                undefined,
                                                              ],
                                                              "className": " css-1yu95zv-MuiButton-root",
                                                              "classes": Object {
                                                                "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                                "label": "MuiButton-label",
                                                                "root": "MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium",
                                                                "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                              },
                                                              "component": "button",
                                                              "disableRipple": false,
                                                              "disableTouchRipple": false,
                                                              "disabled": true,
                                                              "focusRipple": true,
                                                              "focusVisible": false,
                                                              "focusVisibleClassName": "",
                                                              "id": "save",
                                                              "onClick": [Function],
                                                              "tabIndex": 0,
                                                              "type": undefined,
                                                            }
                                                          }
                                                          tabIndex={-1}
                                                          type="button"
                                                        >
                                                          <Noop />
                                                          <button
                                                            className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-sizeMedium MuiButton-containedSizeMedium MuiButtonBase-root Mui-disabled  css-sghohy-MuiButtonBase-root-MuiButton-root"
                                                            disabled={true}
                                                            id="save"
                                                            onBlur={[Function]}
                                                            onClick={[Function]}
                                                            onContextMenu={[Function]}
                                                            onDragLeave={[Function]}
                                                            onFocus={[Function]}
                                                            onKeyDown={[Function]}
                                                            onKeyUp={[Function]}
                                                            onMouseDown={[Function]}
                                                            onMouseLeave={[Function]}
                                                            onMouseUp={[Function]}
                                                            onTouchEnd={[Function]}
                                                            onTouchMove={[Function]}
                                                            onTouchStart={[Function]}
                                                            tabIndex={-1}
                                                            type="button"
                                                          >
                                                            Save
                                                          </button>
                                                        </MuiButtonBaseRoot>
                                                      </ForwardRef(ButtonBase)>
                                                    </MuiButtonRoot>
                                                  </ForwardRef(Button)>
                                                </div>
                                              </MuiGridRoot>
                                            </ForwardRef(Grid)>
                                          </div>
                                        </MuiGridRoot>
                                      </ForwardRef(Grid)>
                                    </div>
                                  </MuiPaperRoot>
                                </ForwardRef(Paper)>
                              </AddToDo>
                              <ForwardRef(Paper)
                                elevation={1}
                                sx={
                                  Object {
                                    "flexGrow": 1,
                                    "padding": "20px",
                                  }
                                }
                              >
                                <MuiPaperRoot
                                  as="div"
                                  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                                  ownerState={
                                    Object {
                                      "children": <ForwardRef(Typography)
                                        className="makeStyles-subText-14"
                                        variant="h6"
                                      >
                                        Task list is empty
                                      </ForwardRef(Typography)>,
                                      "component": "div",
                                      "elevation": 1,
                                      "square": false,
                                      "sx": Object {
                                        "flexGrow": 1,
                                        "padding": "20px",
                                      },
                                      "variant": "elevation",
                                    }
                                  }
                                  sx={
                                    Object {
                                      "flexGrow": 1,
                                      "padding": "20px",
                                    }
                                  }
                                >
                                  <Noop />
                                  <div
                                    className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ljic8r-MuiPaper-root"
                                  >
                                    <ForwardRef(Typography)
                                      className="makeStyles-subText-14"
                                      variant="h6"
                                    >
                                      <MuiTypographyRoot
                                        as="h6"
                                        className="MuiTypography-root MuiTypography-h6 makeStyles-subText-14"
                                        ownerState={
                                          Object {
                                            "align": "inherit",
                                            "children": "Task list is empty",
                                            "className": "makeStyles-subText-14",
                                            "color": undefined,
                                            "component": undefined,
                                            "gutterBottom": false,
                                            "noWrap": false,
                                            "paragraph": false,
                                            "sx": Object {
                                              "color": undefined,
                                            },
                                            "variant": "h6",
                                            "variantMapping": Object {
                                              "body1": "p",
                                              "body2": "p",
                                              "h1": "h1",
                                              "h2": "h2",
                                              "h3": "h3",
                                              "h4": "h4",
                                              "h5": "h5",
                                              "h6": "h6",
                                              "inherit": "p",
                                              "subtitle1": "h6",
                                              "subtitle2": "h6",
                                            },
                                          }
                                        }
                                        sx={
                                          Object {
                                            "color": undefined,
                                          }
                                        }
                                      >
                                        <Noop />
                                        <h6
                                          className="MuiTypography-root MuiTypography-h6 makeStyles-subText-14 css-2ulfj5-MuiTypography-root"
                                        >
                                          Task list is empty
                                        </h6>
                                      </MuiTypographyRoot>
                                    </ForwardRef(Typography)>
                                  </div>
                                </MuiPaperRoot>
                              </ForwardRef(Paper)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                </div>
              </MuiGridRoot>
            </ForwardRef(Grid)>
          </div>
        </MuiContainerRoot>
      </ForwardRef(Container)>
    </Root>
  </Provider>
</ThemeProvider>
`;

exports[`Test add todo Render main page with an item 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "not": [Function],
        "only": [Function],
        "unit": "px",
        "up": [Function],
        "values": Object {
          "lg": 1200,
          "md": 900,
          "sm": 600,
          "xl": 1536,
          "xs": 0,
        },
      },
      "components": Object {},
      "direction": "ltr",
      "mixins": Object {
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fff",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#c62828",
          "light": "#ef5350",
          "main": "#d32f2f",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#f5f5f5",
          "A200": "#eeeeee",
          "A400": "#bdbdbd",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#01579b",
          "light": "#03a9f4",
          "main": "#0288d1",
        },
        "mode": "light",
        "primary": Object {
          "contrastText": "#fff",
          "dark": "#1565c0",
          "light": "#42a5f5",
          "main": "#1976d2",
        },
        "secondary": Object {
          "contrastText": "#fff",
          "dark": "#7b1fa2",
          "light": "#ba68c8",
          "main": "#9c27b0",
        },
        "success": Object {
          "contrastText": "#fff",
          "dark": "#1b5e20",
          "light": "#4caf50",
          "main": "#2e7d32",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.6)",
        },
        "tonalOffset": 0.2,
        "warning": Object {
          "contrastText": "#fff",
          "dark": "#e65100",
          "light": "#ff9800",
          "main": "#ed6c02",
        },
      },
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "6rem",
          "fontWeight": 300,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.167,
        },
        "h2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.2,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.167,
        },
        "h4": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.235,
        },
        "h5": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.5rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.334,
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <Provider
    store={
      Object {
        "@@observable": [Function],
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Root>
      <ForwardRef(Container)
        className="makeStyles-mainContainer-1"
        maxWidth="md"
      >
        <MuiContainerRoot
          as="div"
          className="MuiContainer-root MuiContainer-maxWidthMd makeStyles-mainContainer-1"
          ownerState={
            Object {
              "children": <ForwardRef(Grid)
                container={true}
                direction="row"
              >
                <ForwardRef(Grid)
                  alignItems="center"
                  className="makeStyles-mainContainer-1"
                  container={true}
                  direction="row"
                  item={true}
                  xs={12}
                >
                  <ForwardRef(Grid)
                    item={true}
                    xs={1}
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-topText-4"
                      variant="h5"
                    >
                      Tasker
                    </ForwardRef(Typography)>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                    xs={9}
                  />
                  <ForwardRef(Grid)
                    container={true}
                    item={true}
                    justifyContent="flex-end"
                    xs={2}
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-subText-5"
                      variant="h6"
                    >
                      Techformist
                    </ForwardRef(Typography)>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    alignItems="center"
                    container={true}
                    direction="row"
                    item={true}
                    xs={12}
                  >
                    <ForwardRef(Grid)
                      className="makeStyles-boxPadding-9"
                      item={true}
                      xs={11}
                    />
                    <ForwardRef(Grid)
                      container={true}
                      item={true}
                      justifyContent="flex-end"
                      xs={1}
                    >
                      <ForwardRef(Button)
                        id="add-new"
                        onClick={[Function]}
                        variant="outlined"
                      >
                        New
                      </ForwardRef(Button)>
                    </ForwardRef(Grid)>
                  </ForwardRef(Grid)>
                </ForwardRef(Grid)>
                <ForwardRef(Grid)
                  alignItems="flex-start"
                  className="makeStyles-mainContainer-1"
                  container={true}
                  direction="row"
                  item={true}
                  xs={12}
                >
                  <ForwardRef(Grid)
                    alignItems="flex-center"
                    container={true}
                    direction="column"
                    item={true}
                    xs={12}
                  >
                    <ForwardRef(Paper)
                      elevation={1}
                      sx={
                        Object {
                          "flexGrow": 1,
                          "padding": "20px",
                        }
                      }
                    >
                      <ToDoItem
                        completed={false}
                        description="Test task"
                        dueDate={1917846000000}
                        id={1}
                      />
                    </ForwardRef(Paper)>
                  </ForwardRef(Grid)>
                </ForwardRef(Grid)>
              </ForwardRef(Grid)>,
              "className": "makeStyles-mainContainer-1",
              "component": "div",
              "disableGutters": false,
              "fixed": false,
              "maxWidth": "md",
            }
          }
        >
          <Noop />
          <div
            className="MuiContainer-root MuiContainer-maxWidthMd makeStyles-mainContainer-1 css-xdmu94-MuiContainer-root"
          >
            <ForwardRef(Grid)
              container={true}
              direction="row"
            >
              <MuiGridRoot
                as="div"
                className="MuiGrid-root MuiGrid-container"
                ownerState={
                  Object {
                    "children": Array [
                      <ForwardRef(Grid)
                        alignItems="center"
                        className="makeStyles-mainContainer-1"
                        container={true}
                        direction="row"
                        item={true}
                        xs={12}
                      >
                        <ForwardRef(Grid)
                          item={true}
                          xs={1}
                        >
                          <ForwardRef(Typography)
                            className="makeStyles-topText-4"
                            variant="h5"
                          >
                            Tasker
                          </ForwardRef(Typography)>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                          xs={9}
                        />
                        <ForwardRef(Grid)
                          container={true}
                          item={true}
                          justifyContent="flex-end"
                          xs={2}
                        >
                          <ForwardRef(Typography)
                            className="makeStyles-subText-5"
                            variant="h6"
                          >
                            Techformist
                          </ForwardRef(Typography)>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          alignItems="center"
                          container={true}
                          direction="row"
                          item={true}
                          xs={12}
                        >
                          <ForwardRef(Grid)
                            className="makeStyles-boxPadding-9"
                            item={true}
                            xs={11}
                          />
                          <ForwardRef(Grid)
                            container={true}
                            item={true}
                            justifyContent="flex-end"
                            xs={1}
                          >
                            <ForwardRef(Button)
                              id="add-new"
                              onClick={[Function]}
                              variant="outlined"
                            >
                              New
                            </ForwardRef(Button)>
                          </ForwardRef(Grid)>
                        </ForwardRef(Grid)>
                      </ForwardRef(Grid)>,
                      <ForwardRef(Grid)
                        alignItems="flex-start"
                        className="makeStyles-mainContainer-1"
                        container={true}
                        direction="row"
                        item={true}
                        xs={12}
                      >
                        <ForwardRef(Grid)
                          alignItems="flex-center"
                          container={true}
                          direction="column"
                          item={true}
                          xs={12}
                        >
                          <ForwardRef(Paper)
                            elevation={1}
                            sx={
                              Object {
                                "flexGrow": 1,
                                "padding": "20px",
                              }
                            }
                          >
                            <ToDoItem
                              completed={false}
                              description="Test task"
                              dueDate={1917846000000}
                              id={1}
                            />
                          </ForwardRef(Paper)>
                        </ForwardRef(Grid)>
                      </ForwardRef(Grid)>,
                    ],
                    "columnSpacing": 0,
                    "columns": 12,
                    "container": true,
                    "direction": "row",
                    "item": false,
                    "lg": false,
                    "md": false,
                    "rowSpacing": 0,
                    "sm": false,
                    "sx": Object {},
                    "wrap": "wrap",
                    "xl": false,
                    "xs": false,
                    "zeroMinWidth": false,
                  }
                }
                sx={Object {}}
              >
                <Noop />
                <div
                  className="MuiGrid-root MuiGrid-container css-11lq3yg-MuiGrid-root"
                >
                  <ForwardRef(Grid)
                    alignItems="center"
                    className="makeStyles-mainContainer-1"
                    container={true}
                    direction="row"
                    item={true}
                    xs={12}
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12 makeStyles-mainContainer-1"
                      ownerState={
                        Object {
                          "children": Array [
                            <ForwardRef(Grid)
                              item={true}
                              xs={1}
                            >
                              <ForwardRef(Typography)
                                className="makeStyles-topText-4"
                                variant="h5"
                              >
                                Tasker
                              </ForwardRef(Typography)>
                            </ForwardRef(Grid)>,
                            <ForwardRef(Grid)
                              item={true}
                              xs={9}
                            />,
                            <ForwardRef(Grid)
                              container={true}
                              item={true}
                              justifyContent="flex-end"
                              xs={2}
                            >
                              <ForwardRef(Typography)
                                className="makeStyles-subText-5"
                                variant="h6"
                              >
                                Techformist
                              </ForwardRef(Typography)>
                            </ForwardRef(Grid)>,
                            <ForwardRef(Grid)
                              alignItems="center"
                              container={true}
                              direction="row"
                              item={true}
                              xs={12}
                            >
                              <ForwardRef(Grid)
                                className="makeStyles-boxPadding-9"
                                item={true}
                                xs={11}
                              />
                              <ForwardRef(Grid)
                                container={true}
                                item={true}
                                justifyContent="flex-end"
                                xs={1}
                              >
                                <ForwardRef(Button)
                                  id="add-new"
                                  onClick={[Function]}
                                  variant="outlined"
                                >
                                  New
                                </ForwardRef(Button)>
                              </ForwardRef(Grid)>
                            </ForwardRef(Grid)>,
                          ],
                          "className": "makeStyles-mainContainer-1",
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": true,
                          "direction": "row",
                          "item": true,
                          "lg": false,
                          "md": false,
                          "rowSpacing": 0,
                          "sm": false,
                          "sx": Object {
                            "alignItems": "center",
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": 12,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "alignItems": "center",
                        }
                      }
                    >
                      <Noop />
                      <div
                        className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12 makeStyles-mainContainer-1 css-1x4vn2y-MuiGrid-root"
                      >
                        <ForwardRef(Grid)
                          item={true}
                          xs={1}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-1"
                            ownerState={
                              Object {
                                "children": <ForwardRef(Typography)
                                  className="makeStyles-topText-4"
                                  variant="h5"
                                >
                                  Tasker
                                </ForwardRef(Typography)>,
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 1,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <Noop />
                            <div
                              className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-1 css-u78q51-MuiGrid-root"
                            >
                              <ForwardRef(Typography)
                                className="makeStyles-topText-4"
                                variant="h5"
                              >
                                <MuiTypographyRoot
                                  as="h5"
                                  className="MuiTypography-root MuiTypography-h5 makeStyles-topText-4"
                                  ownerState={
                                    Object {
                                      "align": "inherit",
                                      "children": "Tasker",
                                      "className": "makeStyles-topText-4",
                                      "color": undefined,
                                      "component": undefined,
                                      "gutterBottom": false,
                                      "noWrap": false,
                                      "paragraph": false,
                                      "sx": Object {
                                        "color": undefined,
                                      },
                                      "variant": "h5",
                                      "variantMapping": Object {
                                        "body1": "p",
                                        "body2": "p",
                                        "h1": "h1",
                                        "h2": "h2",
                                        "h3": "h3",
                                        "h4": "h4",
                                        "h5": "h5",
                                        "h6": "h6",
                                        "inherit": "p",
                                        "subtitle1": "h6",
                                        "subtitle2": "h6",
                                      },
                                    }
                                  }
                                  sx={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                >
                                  <Noop />
                                  <h5
                                    className="MuiTypography-root MuiTypography-h5 makeStyles-topText-4 css-ag7rrr-MuiTypography-root"
                                  >
                                    Tasker
                                  </h5>
                                </MuiTypographyRoot>
                              </ForwardRef(Typography)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                          xs={9}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-9"
                            ownerState={
                              Object {
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 9,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <Noop />
                            <div
                              className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-9 css-1qpzhgb-MuiGrid-root"
                            />
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          container={true}
                          item={true}
                          justifyContent="flex-end"
                          xs={2}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-2"
                            ownerState={
                              Object {
                                "children": <ForwardRef(Typography)
                                  className="makeStyles-subText-5"
                                  variant="h6"
                                >
                                  Techformist
                                </ForwardRef(Typography)>,
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": true,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {
                                  "justifyContent": "flex-end",
                                },
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 2,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={
                              Object {
                                "justifyContent": "flex-end",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-2 css-7ml0tv-MuiGrid-root"
                            >
                              <ForwardRef(Typography)
                                className="makeStyles-subText-5"
                                variant="h6"
                              >
                                <MuiTypographyRoot
                                  as="h6"
                                  className="MuiTypography-root MuiTypography-h6 makeStyles-subText-5"
                                  ownerState={
                                    Object {
                                      "align": "inherit",
                                      "children": "Techformist",
                                      "className": "makeStyles-subText-5",
                                      "color": undefined,
                                      "component": undefined,
                                      "gutterBottom": false,
                                      "noWrap": false,
                                      "paragraph": false,
                                      "sx": Object {
                                        "color": undefined,
                                      },
                                      "variant": "h6",
                                      "variantMapping": Object {
                                        "body1": "p",
                                        "body2": "p",
                                        "h1": "h1",
                                        "h2": "h2",
                                        "h3": "h3",
                                        "h4": "h4",
                                        "h5": "h5",
                                        "h6": "h6",
                                        "inherit": "p",
                                        "subtitle1": "h6",
                                        "subtitle2": "h6",
                                      },
                                    }
                                  }
                                  sx={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                >
                                  <Noop />
                                  <h6
                                    className="MuiTypography-root MuiTypography-h6 makeStyles-subText-5 css-2ulfj5-MuiTypography-root"
                                  >
                                    Techformist
                                  </h6>
                                </MuiTypographyRoot>
                              </ForwardRef(Typography)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          alignItems="center"
                          container={true}
                          direction="row"
                          item={true}
                          xs={12}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(Grid)
                                    className="makeStyles-boxPadding-9"
                                    item={true}
                                    xs={11}
                                  />,
                                  <ForwardRef(Grid)
                                    container={true}
                                    item={true}
                                    justifyContent="flex-end"
                                    xs={1}
                                  >
                                    <ForwardRef(Button)
                                      id="add-new"
                                      onClick={[Function]}
                                      variant="outlined"
                                    >
                                      New
                                    </ForwardRef(Button)>
                                  </ForwardRef(Grid)>,
                                ],
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": true,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {
                                  "alignItems": "center",
                                },
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 12,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={
                              Object {
                                "alignItems": "center",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12 css-1x4vn2y-MuiGrid-root"
                            >
                              <ForwardRef(Grid)
                                className="makeStyles-boxPadding-9"
                                item={true}
                                xs={11}
                              >
                                <MuiGridRoot
                                  as="div"
                                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-11 makeStyles-boxPadding-9"
                                  ownerState={
                                    Object {
                                      "className": "makeStyles-boxPadding-9",
                                      "columnSpacing": 0,
                                      "columns": 12,
                                      "container": false,
                                      "direction": "row",
                                      "item": true,
                                      "lg": false,
                                      "md": false,
                                      "rowSpacing": 0,
                                      "sm": false,
                                      "sx": Object {},
                                      "wrap": "wrap",
                                      "xl": false,
                                      "xs": 11,
                                      "zeroMinWidth": false,
                                    }
                                  }
                                  sx={Object {}}
                                >
                                  <Noop />
                                  <div
                                    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-11 makeStyles-boxPadding-9 css-ykovpn-MuiGrid-root"
                                  />
                                </MuiGridRoot>
                              </ForwardRef(Grid)>
                              <ForwardRef(Grid)
                                container={true}
                                item={true}
                                justifyContent="flex-end"
                                xs={1}
                              >
                                <MuiGridRoot
                                  as="div"
                                  className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-1"
                                  ownerState={
                                    Object {
                                      "children": <ForwardRef(Button)
                                        id="add-new"
                                        onClick={[Function]}
                                        variant="outlined"
                                      >
                                        New
                                      </ForwardRef(Button)>,
                                      "columnSpacing": 0,
                                      "columns": 12,
                                      "container": true,
                                      "direction": "row",
                                      "item": true,
                                      "lg": false,
                                      "md": false,
                                      "rowSpacing": 0,
                                      "sm": false,
                                      "sx": Object {
                                        "justifyContent": "flex-end",
                                      },
                                      "wrap": "wrap",
                                      "xl": false,
                                      "xs": 1,
                                      "zeroMinWidth": false,
                                    }
                                  }
                                  sx={
                                    Object {
                                      "justifyContent": "flex-end",
                                    }
                                  }
                                >
                                  <Noop />
                                  <div
                                    className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-1 css-1nomy00-MuiGrid-root"
                                  >
                                    <ForwardRef(Button)
                                      id="add-new"
                                      onClick={[Function]}
                                      variant="outlined"
                                    >
                                      <MuiButtonRoot
                                        className=""
                                        classes={
                                          Object {
                                            "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                            "label": "MuiButton-label",
                                            "root": "MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium",
                                            "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                          }
                                        }
                                        component="button"
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName=""
                                        id="add-new"
                                        onClick={[Function]}
                                        ownerState={
                                          Object {
                                            "children": "New",
                                            "color": "primary",
                                            "component": "button",
                                            "disableElevation": false,
                                            "disableFocusRipple": false,
                                            "disabled": false,
                                            "fullWidth": false,
                                            "id": "add-new",
                                            "onClick": [Function],
                                            "size": "medium",
                                            "type": undefined,
                                            "variant": "outlined",
                                          }
                                        }
                                      >
                                        <Noop />
                                        <ForwardRef(ButtonBase)
                                          className=" css-10tjo1u-MuiButton-root"
                                          classes={
                                            Object {
                                              "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                              "label": "MuiButton-label",
                                              "root": "MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium",
                                              "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                            }
                                          }
                                          component="button"
                                          disabled={false}
                                          focusRipple={true}
                                          focusVisibleClassName=""
                                          id="add-new"
                                          onClick={[Function]}
                                        >
                                          <MuiButtonBaseRoot
                                            as="button"
                                            className="MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButtonBase-root  css-10tjo1u-MuiButton-root"
                                            classes={
                                              Object {
                                                "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                "label": "MuiButton-label",
                                                "root": "MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium",
                                                "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                              }
                                            }
                                            disabled={false}
                                            id="add-new"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onContextMenu={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            ownerState={
                                              Object {
                                                "centerRipple": false,
                                                "children": Array [
                                                  undefined,
                                                  "New",
                                                  undefined,
                                                ],
                                                "className": " css-10tjo1u-MuiButton-root",
                                                "classes": Object {
                                                  "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                  "label": "MuiButton-label",
                                                  "root": "MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium",
                                                  "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                },
                                                "component": "button",
                                                "disableRipple": false,
                                                "disableTouchRipple": false,
                                                "disabled": false,
                                                "focusRipple": true,
                                                "focusVisible": false,
                                                "focusVisibleClassName": "",
                                                "id": "add-new",
                                                "onClick": [Function],
                                                "tabIndex": 0,
                                                "type": undefined,
                                              }
                                            }
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <Noop />
                                            <button
                                              className="MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButtonBase-root  css-1rwt2y5-MuiButtonBase-root-MuiButton-root"
                                              disabled={false}
                                              id="add-new"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onContextMenu={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={0}
                                              type="button"
                                            >
                                              New
                                              <ForwardRef(TouchRipple)
                                                center={false}
                                              >
                                                <MuiTouchRippleRoot
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <Noop />
                                                  <span
                                                    className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </MuiTouchRippleRoot>
                                              </ForwardRef(TouchRipple)>
                                            </button>
                                          </MuiButtonBaseRoot>
                                        </ForwardRef(ButtonBase)>
                                      </MuiButtonRoot>
                                    </ForwardRef(Button)>
                                  </div>
                                </MuiGridRoot>
                              </ForwardRef(Grid)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    alignItems="flex-start"
                    className="makeStyles-mainContainer-1"
                    container={true}
                    direction="row"
                    item={true}
                    xs={12}
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12 makeStyles-mainContainer-1"
                      ownerState={
                        Object {
                          "children": <ForwardRef(Grid)
                            alignItems="flex-center"
                            container={true}
                            direction="column"
                            item={true}
                            xs={12}
                          >
                            <ForwardRef(Paper)
                              elevation={1}
                              sx={
                                Object {
                                  "flexGrow": 1,
                                  "padding": "20px",
                                }
                              }
                            >
                              <ToDoItem
                                completed={false}
                                description="Test task"
                                dueDate={1917846000000}
                                id={1}
                              />
                            </ForwardRef(Paper)>
                          </ForwardRef(Grid)>,
                          "className": "makeStyles-mainContainer-1",
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": true,
                          "direction": "row",
                          "item": true,
                          "lg": false,
                          "md": false,
                          "rowSpacing": 0,
                          "sm": false,
                          "sx": Object {
                            "alignItems": "flex-start",
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": 12,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "alignItems": "flex-start",
                        }
                      }
                    >
                      <Noop />
                      <div
                        className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12 makeStyles-mainContainer-1 css-ksia33-MuiGrid-root"
                      >
                        <ForwardRef(Grid)
                          alignItems="flex-center"
                          container={true}
                          direction="column"
                          item={true}
                          xs={12}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-direction-xs-column MuiGrid-grid-xs-12"
                            ownerState={
                              Object {
                                "children": Array [
                                  false,
                                  <ForwardRef(Paper)
                                    elevation={1}
                                    sx={
                                      Object {
                                        "flexGrow": 1,
                                        "padding": "20px",
                                      }
                                    }
                                  >
                                    <ToDoItem
                                      completed={false}
                                      description="Test task"
                                      dueDate={1917846000000}
                                      id={1}
                                    />
                                  </ForwardRef(Paper)>,
                                ],
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": true,
                                "direction": "column",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {
                                  "alignItems": "flex-center",
                                },
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 12,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={
                              Object {
                                "alignItems": "flex-center",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-direction-xs-column MuiGrid-grid-xs-12 css-qcclf8-MuiGrid-root"
                            >
                              <ForwardRef(Paper)
                                elevation={1}
                                sx={
                                  Object {
                                    "flexGrow": 1,
                                    "padding": "20px",
                                  }
                                }
                              >
                                <MuiPaperRoot
                                  as="div"
                                  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                                  ownerState={
                                    Object {
                                      "children": Array [
                                        <ToDoItem
                                          completed={false}
                                          description="Test task"
                                          dueDate={1917846000000}
                                          id={1}
                                        />,
                                      ],
                                      "component": "div",
                                      "elevation": 1,
                                      "square": false,
                                      "sx": Object {
                                        "flexGrow": 1,
                                        "padding": "20px",
                                      },
                                      "variant": "elevation",
                                    }
                                  }
                                  sx={
                                    Object {
                                      "flexGrow": 1,
                                      "padding": "20px",
                                    }
                                  }
                                >
                                  <Noop />
                                  <div
                                    className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ljic8r-MuiPaper-root"
                                  >
                                    <ToDoItem
                                      completed={false}
                                      description="Test task"
                                      dueDate={1917846000000}
                                      id={1}
                                      key="1"
                                    >
                                      <ForwardRef(Paper)
                                        elevation={2}
                                        sx={
                                          Object {
                                            "flexGrow": 1,
                                            "margin": "20px",
                                            "padding": "20px",
                                          }
                                        }
                                      >
                                        <MuiPaperRoot
                                          as="div"
                                          className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation2"
                                          ownerState={
                                            Object {
                                              "children": <ForwardRef(Grid)
                                                container={true}
                                              >
                                                <ForwardRef(Grid)
                                                  item={true}
                                                  xs={6}
                                                >
                                                  <ForwardRef(Grid)
                                                    container={true}
                                                  >
                                                    <ForwardRef(Grid)
                                                      item={true}
                                                      xs={12}
                                                    >
                                                      <ForwardRef(Typography)
                                                        variant="h5"
                                                      >
                                                        Test task
                                                      </ForwardRef(Typography)>
                                                    </ForwardRef(Grid)>
                                                    <ForwardRef(Grid)
                                                      item={true}
                                                      xs={12}
                                                    >
                                                      <ForwardRef(Grid)
                                                        alignItems="center"
                                                        className="makeStyles-timeBlock-10"
                                                        container={true}
                                                        justifyContent="flex-start"
                                                      >
                                                        <ForwardRef(Grid)
                                                          item={true}
                                                        >
                                                          <Memo
                                                            className="makeStyles-icon-11"
                                                          />
                                                        </ForwardRef(Grid)>
                                                        <ForwardRef(Grid)
                                                          item={true}
                                                        >
                                                          <ForwardRef(Typography)
                                                            variant="h5"
                                                          >
                                                            2030-10-10
                                                          </ForwardRef(Typography)>
                                                        </ForwardRef(Grid)>
                                                      </ForwardRef(Grid)>
                                                    </ForwardRef(Grid)>
                                                  </ForwardRef(Grid)>
                                                </ForwardRef(Grid)>
                                                <ForwardRef(Grid)
                                                  item={true}
                                                  xs={5}
                                                />
                                                <ForwardRef(Grid)
                                                  alignSelf="center"
                                                  item={true}
                                                  xs={1}
                                                >
                                                  <ForwardRef(Checkbox)
                                                    checked={false}
                                                    color="success"
                                                    id="completed-checkbox"
                                                    onChange={[Function]}
                                                  />
                                                </ForwardRef(Grid)>
                                              </ForwardRef(Grid)>,
                                              "component": "div",
                                              "elevation": 2,
                                              "square": false,
                                              "sx": Object {
                                                "flexGrow": 1,
                                                "margin": "20px",
                                                "padding": "20px",
                                              },
                                              "variant": "elevation",
                                            }
                                          }
                                          sx={
                                            Object {
                                              "flexGrow": 1,
                                              "margin": "20px",
                                              "padding": "20px",
                                            }
                                          }
                                        >
                                          <Noop />
                                          <div
                                            className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation2 css-16v86sg-MuiPaper-root"
                                          >
                                            <ForwardRef(Grid)
                                              container={true}
                                            >
                                              <MuiGridRoot
                                                as="div"
                                                className="MuiGrid-root MuiGrid-container"
                                                ownerState={
                                                  Object {
                                                    "children": Array [
                                                      <ForwardRef(Grid)
                                                        item={true}
                                                        xs={6}
                                                      >
                                                        <ForwardRef(Grid)
                                                          container={true}
                                                        >
                                                          <ForwardRef(Grid)
                                                            item={true}
                                                            xs={12}
                                                          >
                                                            <ForwardRef(Typography)
                                                              variant="h5"
                                                            >
                                                              Test task
                                                            </ForwardRef(Typography)>
                                                          </ForwardRef(Grid)>
                                                          <ForwardRef(Grid)
                                                            item={true}
                                                            xs={12}
                                                          >
                                                            <ForwardRef(Grid)
                                                              alignItems="center"
                                                              className="makeStyles-timeBlock-10"
                                                              container={true}
                                                              justifyContent="flex-start"
                                                            >
                                                              <ForwardRef(Grid)
                                                                item={true}
                                                              >
                                                                <Memo
                                                                  className="makeStyles-icon-11"
                                                                />
                                                              </ForwardRef(Grid)>
                                                              <ForwardRef(Grid)
                                                                item={true}
                                                              >
                                                                <ForwardRef(Typography)
                                                                  variant="h5"
                                                                >
                                                                  2030-10-10
                                                                </ForwardRef(Typography)>
                                                              </ForwardRef(Grid)>
                                                            </ForwardRef(Grid)>
                                                          </ForwardRef(Grid)>
                                                        </ForwardRef(Grid)>
                                                      </ForwardRef(Grid)>,
                                                      <ForwardRef(Grid)
                                                        item={true}
                                                        xs={5}
                                                      />,
                                                      <ForwardRef(Grid)
                                                        alignSelf="center"
                                                        item={true}
                                                        xs={1}
                                                      >
                                                        <ForwardRef(Checkbox)
                                                          checked={false}
                                                          color="success"
                                                          id="completed-checkbox"
                                                          onChange={[Function]}
                                                        />
                                                      </ForwardRef(Grid)>,
                                                    ],
                                                    "columnSpacing": 0,
                                                    "columns": 12,
                                                    "container": true,
                                                    "direction": "row",
                                                    "item": false,
                                                    "lg": false,
                                                    "md": false,
                                                    "rowSpacing": 0,
                                                    "sm": false,
                                                    "sx": Object {},
                                                    "wrap": "wrap",
                                                    "xl": false,
                                                    "xs": false,
                                                    "zeroMinWidth": false,
                                                  }
                                                }
                                                sx={Object {}}
                                              >
                                                <Noop />
                                                <div
                                                  className="MuiGrid-root MuiGrid-container css-11lq3yg-MuiGrid-root"
                                                >
                                                  <ForwardRef(Grid)
                                                    item={true}
                                                    xs={6}
                                                  >
                                                    <MuiGridRoot
                                                      as="div"
                                                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-6"
                                                      ownerState={
                                                        Object {
                                                          "children": <ForwardRef(Grid)
                                                            container={true}
                                                          >
                                                            <ForwardRef(Grid)
                                                              item={true}
                                                              xs={12}
                                                            >
                                                              <ForwardRef(Typography)
                                                                variant="h5"
                                                              >
                                                                Test task
                                                              </ForwardRef(Typography)>
                                                            </ForwardRef(Grid)>
                                                            <ForwardRef(Grid)
                                                              item={true}
                                                              xs={12}
                                                            >
                                                              <ForwardRef(Grid)
                                                                alignItems="center"
                                                                className="makeStyles-timeBlock-10"
                                                                container={true}
                                                                justifyContent="flex-start"
                                                              >
                                                                <ForwardRef(Grid)
                                                                  item={true}
                                                                >
                                                                  <Memo
                                                                    className="makeStyles-icon-11"
                                                                  />
                                                                </ForwardRef(Grid)>
                                                                <ForwardRef(Grid)
                                                                  item={true}
                                                                >
                                                                  <ForwardRef(Typography)
                                                                    variant="h5"
                                                                  >
                                                                    2030-10-10
                                                                  </ForwardRef(Typography)>
                                                                </ForwardRef(Grid)>
                                                              </ForwardRef(Grid)>
                                                            </ForwardRef(Grid)>
                                                          </ForwardRef(Grid)>,
                                                          "columnSpacing": 0,
                                                          "columns": 12,
                                                          "container": false,
                                                          "direction": "row",
                                                          "item": true,
                                                          "lg": false,
                                                          "md": false,
                                                          "rowSpacing": 0,
                                                          "sm": false,
                                                          "sx": Object {},
                                                          "wrap": "wrap",
                                                          "xl": false,
                                                          "xs": 6,
                                                          "zeroMinWidth": false,
                                                        }
                                                      }
                                                      sx={Object {}}
                                                    >
                                                      <Noop />
                                                      <div
                                                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-6 css-1osj8n2-MuiGrid-root"
                                                      >
                                                        <ForwardRef(Grid)
                                                          container={true}
                                                        >
                                                          <MuiGridRoot
                                                            as="div"
                                                            className="MuiGrid-root MuiGrid-container"
                                                            ownerState={
                                                              Object {
                                                                "children": Array [
                                                                  <ForwardRef(Grid)
                                                                    item={true}
                                                                    xs={12}
                                                                  >
                                                                    <ForwardRef(Typography)
                                                                      variant="h5"
                                                                    >
                                                                      Test task
                                                                    </ForwardRef(Typography)>
                                                                  </ForwardRef(Grid)>,
                                                                  <ForwardRef(Grid)
                                                                    item={true}
                                                                    xs={12}
                                                                  >
                                                                    <ForwardRef(Grid)
                                                                      alignItems="center"
                                                                      className="makeStyles-timeBlock-10"
                                                                      container={true}
                                                                      justifyContent="flex-start"
                                                                    >
                                                                      <ForwardRef(Grid)
                                                                        item={true}
                                                                      >
                                                                        <Memo
                                                                          className="makeStyles-icon-11"
                                                                        />
                                                                      </ForwardRef(Grid)>
                                                                      <ForwardRef(Grid)
                                                                        item={true}
                                                                      >
                                                                        <ForwardRef(Typography)
                                                                          variant="h5"
                                                                        >
                                                                          2030-10-10
                                                                        </ForwardRef(Typography)>
                                                                      </ForwardRef(Grid)>
                                                                    </ForwardRef(Grid)>
                                                                  </ForwardRef(Grid)>,
                                                                ],
                                                                "columnSpacing": 0,
                                                                "columns": 12,
                                                                "container": true,
                                                                "direction": "row",
                                                                "item": false,
                                                                "lg": false,
                                                                "md": false,
                                                                "rowSpacing": 0,
                                                                "sm": false,
                                                                "sx": Object {},
                                                                "wrap": "wrap",
                                                                "xl": false,
                                                                "xs": false,
                                                                "zeroMinWidth": false,
                                                              }
                                                            }
                                                            sx={Object {}}
                                                          >
                                                            <Noop />
                                                            <div
                                                              className="MuiGrid-root MuiGrid-container css-11lq3yg-MuiGrid-root"
                                                            >
                                                              <ForwardRef(Grid)
                                                                item={true}
                                                                xs={12}
                                                              >
                                                                <MuiGridRoot
                                                                  as="div"
                                                                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                                                                  ownerState={
                                                                    Object {
                                                                      "children": <ForwardRef(Typography)
                                                                        variant="h5"
                                                                      >
                                                                        Test task
                                                                      </ForwardRef(Typography)>,
                                                                      "columnSpacing": 0,
                                                                      "columns": 12,
                                                                      "container": false,
                                                                      "direction": "row",
                                                                      "item": true,
                                                                      "lg": false,
                                                                      "md": false,
                                                                      "rowSpacing": 0,
                                                                      "sm": false,
                                                                      "sx": Object {},
                                                                      "wrap": "wrap",
                                                                      "xl": false,
                                                                      "xs": 12,
                                                                      "zeroMinWidth": false,
                                                                    }
                                                                  }
                                                                  sx={Object {}}
                                                                >
                                                                  <Noop />
                                                                  <div
                                                                    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 css-1idn90j-MuiGrid-root"
                                                                  >
                                                                    <ForwardRef(Typography)
                                                                      variant="h5"
                                                                    >
                                                                      <MuiTypographyRoot
                                                                        as="h5"
                                                                        className="MuiTypography-root MuiTypography-h5"
                                                                        ownerState={
                                                                          Object {
                                                                            "align": "inherit",
                                                                            "children": "Test task",
                                                                            "className": undefined,
                                                                            "color": undefined,
                                                                            "component": undefined,
                                                                            "gutterBottom": false,
                                                                            "noWrap": false,
                                                                            "paragraph": false,
                                                                            "sx": Object {
                                                                              "color": undefined,
                                                                            },
                                                                            "variant": "h5",
                                                                            "variantMapping": Object {
                                                                              "body1": "p",
                                                                              "body2": "p",
                                                                              "h1": "h1",
                                                                              "h2": "h2",
                                                                              "h3": "h3",
                                                                              "h4": "h4",
                                                                              "h5": "h5",
                                                                              "h6": "h6",
                                                                              "inherit": "p",
                                                                              "subtitle1": "h6",
                                                                              "subtitle2": "h6",
                                                                            },
                                                                          }
                                                                        }
                                                                        sx={
                                                                          Object {
                                                                            "color": undefined,
                                                                          }
                                                                        }
                                                                      >
                                                                        <Noop />
                                                                        <h5
                                                                          className="MuiTypography-root MuiTypography-h5 css-ag7rrr-MuiTypography-root"
                                                                        >
                                                                          Test task
                                                                        </h5>
                                                                      </MuiTypographyRoot>
                                                                    </ForwardRef(Typography)>
                                                                  </div>
                                                                </MuiGridRoot>
                                                              </ForwardRef(Grid)>
                                                              <ForwardRef(Grid)
                                                                item={true}
                                                                xs={12}
                                                              >
                                                                <MuiGridRoot
                                                                  as="div"
                                                                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12"
                                                                  ownerState={
                                                                    Object {
                                                                      "children": <ForwardRef(Grid)
                                                                        alignItems="center"
                                                                        className="makeStyles-timeBlock-10"
                                                                        container={true}
                                                                        justifyContent="flex-start"
                                                                      >
                                                                        <ForwardRef(Grid)
                                                                          item={true}
                                                                        >
                                                                          <Memo
                                                                            className="makeStyles-icon-11"
                                                                          />
                                                                        </ForwardRef(Grid)>
                                                                        <ForwardRef(Grid)
                                                                          item={true}
                                                                        >
                                                                          <ForwardRef(Typography)
                                                                            variant="h5"
                                                                          >
                                                                            2030-10-10
                                                                          </ForwardRef(Typography)>
                                                                        </ForwardRef(Grid)>
                                                                      </ForwardRef(Grid)>,
                                                                      "columnSpacing": 0,
                                                                      "columns": 12,
                                                                      "container": false,
                                                                      "direction": "row",
                                                                      "item": true,
                                                                      "lg": false,
                                                                      "md": false,
                                                                      "rowSpacing": 0,
                                                                      "sm": false,
                                                                      "sx": Object {},
                                                                      "wrap": "wrap",
                                                                      "xl": false,
                                                                      "xs": 12,
                                                                      "zeroMinWidth": false,
                                                                    }
                                                                  }
                                                                  sx={Object {}}
                                                                >
                                                                  <Noop />
                                                                  <div
                                                                    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-12 css-1idn90j-MuiGrid-root"
                                                                  >
                                                                    <ForwardRef(Grid)
                                                                      alignItems="center"
                                                                      className="makeStyles-timeBlock-10"
                                                                      container={true}
                                                                      justifyContent="flex-start"
                                                                    >
                                                                      <MuiGridRoot
                                                                        as="div"
                                                                        className="MuiGrid-root MuiGrid-container makeStyles-timeBlock-10"
                                                                        ownerState={
                                                                          Object {
                                                                            "children": Array [
                                                                              <ForwardRef(Grid)
                                                                                item={true}
                                                                              >
                                                                                <Memo
                                                                                  className="makeStyles-icon-11"
                                                                                />
                                                                              </ForwardRef(Grid)>,
                                                                              <ForwardRef(Grid)
                                                                                item={true}
                                                                              >
                                                                                <ForwardRef(Typography)
                                                                                  variant="h5"
                                                                                >
                                                                                  2030-10-10
                                                                                </ForwardRef(Typography)>
                                                                              </ForwardRef(Grid)>,
                                                                            ],
                                                                            "className": "makeStyles-timeBlock-10",
                                                                            "columnSpacing": 0,
                                                                            "columns": 12,
                                                                            "container": true,
                                                                            "direction": "row",
                                                                            "item": false,
                                                                            "lg": false,
                                                                            "md": false,
                                                                            "rowSpacing": 0,
                                                                            "sm": false,
                                                                            "sx": Object {
                                                                              "alignItems": "center",
                                                                              "justifyContent": "flex-start",
                                                                            },
                                                                            "wrap": "wrap",
                                                                            "xl": false,
                                                                            "xs": false,
                                                                            "zeroMinWidth": false,
                                                                          }
                                                                        }
                                                                        sx={
                                                                          Object {
                                                                            "alignItems": "center",
                                                                            "justifyContent": "flex-start",
                                                                          }
                                                                        }
                                                                      >
                                                                        <Noop />
                                                                        <div
                                                                          className="MuiGrid-root MuiGrid-container makeStyles-timeBlock-10 css-1e2bu2o-MuiGrid-root"
                                                                        >
                                                                          <ForwardRef(Grid)
                                                                            item={true}
                                                                          >
                                                                            <MuiGridRoot
                                                                              as="div"
                                                                              className="MuiGrid-root MuiGrid-item"
                                                                              ownerState={
                                                                                Object {
                                                                                  "children": <Memo
                                                                                    className="makeStyles-icon-11"
                                                                                  />,
                                                                                  "columnSpacing": 0,
                                                                                  "columns": 12,
                                                                                  "container": false,
                                                                                  "direction": "row",
                                                                                  "item": true,
                                                                                  "lg": false,
                                                                                  "md": false,
                                                                                  "rowSpacing": 0,
                                                                                  "sm": false,
                                                                                  "sx": Object {},
                                                                                  "wrap": "wrap",
                                                                                  "xl": false,
                                                                                  "xs": false,
                                                                                  "zeroMinWidth": false,
                                                                                }
                                                                              }
                                                                              sx={Object {}}
                                                                            >
                                                                              <Noop />
                                                                              <div
                                                                                className="MuiGrid-root MuiGrid-item css-13i4rnv-MuiGrid-root"
                                                                              >
                                                                                <ForwardRef(DateRangeOutlinedIcon)
                                                                                  className="makeStyles-icon-11"
                                                                                >
                                                                                  <ForwardRef(SvgIcon)
                                                                                    className="makeStyles-icon-11"
                                                                                    data-testid="DateRangeOutlinedIcon"
                                                                                  >
                                                                                    <MuiSvgIconRoot
                                                                                      aria-hidden={true}
                                                                                      as="svg"
                                                                                      className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium makeStyles-icon-11"
                                                                                      data-testid="DateRangeOutlinedIcon"
                                                                                      focusable="false"
                                                                                      ownerState={
                                                                                        Object {
                                                                                          "children": <path
                                                                                            d="M7 11h2v2H7v-2zm14-5v14c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2l.01-14c0-1.1.88-2 1.99-2h1V2h2v2h8V2h2v2h1c1.1 0 2 .9 2 2zM5 8h14V6H5v2zm14 12V10H5v10h14zm-4-7h2v-2h-2v2zm-4 0h2v-2h-2v2z"
                                                                                          />,
                                                                                          "className": "makeStyles-icon-11",
                                                                                          "color": "inherit",
                                                                                          "component": "svg",
                                                                                          "data-testid": "DateRangeOutlinedIcon",
                                                                                          "fontSize": "medium",
                                                                                          "inheritViewBox": false,
                                                                                          "viewBox": "0 0 24 24",
                                                                                        }
                                                                                      }
                                                                                      viewBox="0 0 24 24"
                                                                                    >
                                                                                      <Noop />
                                                                                      <svg
                                                                                        aria-hidden={true}
                                                                                        className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium makeStyles-icon-11 css-i4bv87-MuiSvgIcon-root"
                                                                                        data-testid="DateRangeOutlinedIcon"
                                                                                        focusable="false"
                                                                                        viewBox="0 0 24 24"
                                                                                      >
                                                                                        <path
                                                                                          d="M7 11h2v2H7v-2zm14-5v14c0 1.1-.9 2-2 2H5c-1.11 0-2-.9-2-2l.01-14c0-1.1.88-2 1.99-2h1V2h2v2h8V2h2v2h1c1.1 0 2 .9 2 2zM5 8h14V6H5v2zm14 12V10H5v10h14zm-4-7h2v-2h-2v2zm-4 0h2v-2h-2v2z"
                                                                                        />
                                                                                      </svg>
                                                                                    </MuiSvgIconRoot>
                                                                                  </ForwardRef(SvgIcon)>
                                                                                </ForwardRef(DateRangeOutlinedIcon)>
                                                                              </div>
                                                                            </MuiGridRoot>
                                                                          </ForwardRef(Grid)>
                                                                          <ForwardRef(Grid)
                                                                            item={true}
                                                                          >
                                                                            <MuiGridRoot
                                                                              as="div"
                                                                              className="MuiGrid-root MuiGrid-item"
                                                                              ownerState={
                                                                                Object {
                                                                                  "children": <ForwardRef(Typography)
                                                                                    variant="h5"
                                                                                  >
                                                                                    2030-10-10
                                                                                  </ForwardRef(Typography)>,
                                                                                  "columnSpacing": 0,
                                                                                  "columns": 12,
                                                                                  "container": false,
                                                                                  "direction": "row",
                                                                                  "item": true,
                                                                                  "lg": false,
                                                                                  "md": false,
                                                                                  "rowSpacing": 0,
                                                                                  "sm": false,
                                                                                  "sx": Object {},
                                                                                  "wrap": "wrap",
                                                                                  "xl": false,
                                                                                  "xs": false,
                                                                                  "zeroMinWidth": false,
                                                                                }
                                                                              }
                                                                              sx={Object {}}
                                                                            >
                                                                              <Noop />
                                                                              <div
                                                                                className="MuiGrid-root MuiGrid-item css-13i4rnv-MuiGrid-root"
                                                                              >
                                                                                <ForwardRef(Typography)
                                                                                  variant="h5"
                                                                                >
                                                                                  <MuiTypographyRoot
                                                                                    as="h5"
                                                                                    className="MuiTypography-root MuiTypography-h5"
                                                                                    ownerState={
                                                                                      Object {
                                                                                        "align": "inherit",
                                                                                        "children": "2030-10-10",
                                                                                        "className": undefined,
                                                                                        "color": undefined,
                                                                                        "component": undefined,
                                                                                        "gutterBottom": false,
                                                                                        "noWrap": false,
                                                                                        "paragraph": false,
                                                                                        "sx": Object {
                                                                                          "color": undefined,
                                                                                        },
                                                                                        "variant": "h5",
                                                                                        "variantMapping": Object {
                                                                                          "body1": "p",
                                                                                          "body2": "p",
                                                                                          "h1": "h1",
                                                                                          "h2": "h2",
                                                                                          "h3": "h3",
                                                                                          "h4": "h4",
                                                                                          "h5": "h5",
                                                                                          "h6": "h6",
                                                                                          "inherit": "p",
                                                                                          "subtitle1": "h6",
                                                                                          "subtitle2": "h6",
                                                                                        },
                                                                                      }
                                                                                    }
                                                                                    sx={
                                                                                      Object {
                                                                                        "color": undefined,
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <Noop />
                                                                                    <h5
                                                                                      className="MuiTypography-root MuiTypography-h5 css-ag7rrr-MuiTypography-root"
                                                                                    >
                                                                                      2030-10-10
                                                                                    </h5>
                                                                                  </MuiTypographyRoot>
                                                                                </ForwardRef(Typography)>
                                                                              </div>
                                                                            </MuiGridRoot>
                                                                          </ForwardRef(Grid)>
                                                                        </div>
                                                                      </MuiGridRoot>
                                                                    </ForwardRef(Grid)>
                                                                  </div>
                                                                </MuiGridRoot>
                                                              </ForwardRef(Grid)>
                                                            </div>
                                                          </MuiGridRoot>
                                                        </ForwardRef(Grid)>
                                                      </div>
                                                    </MuiGridRoot>
                                                  </ForwardRef(Grid)>
                                                  <ForwardRef(Grid)
                                                    item={true}
                                                    xs={5}
                                                  >
                                                    <MuiGridRoot
                                                      as="div"
                                                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-5"
                                                      ownerState={
                                                        Object {
                                                          "columnSpacing": 0,
                                                          "columns": 12,
                                                          "container": false,
                                                          "direction": "row",
                                                          "item": true,
                                                          "lg": false,
                                                          "md": false,
                                                          "rowSpacing": 0,
                                                          "sm": false,
                                                          "sx": Object {},
                                                          "wrap": "wrap",
                                                          "xl": false,
                                                          "xs": 5,
                                                          "zeroMinWidth": false,
                                                        }
                                                      }
                                                      sx={Object {}}
                                                    >
                                                      <Noop />
                                                      <div
                                                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-5 css-k3f0g4-MuiGrid-root"
                                                      />
                                                    </MuiGridRoot>
                                                  </ForwardRef(Grid)>
                                                  <ForwardRef(Grid)
                                                    alignSelf="center"
                                                    item={true}
                                                    xs={1}
                                                  >
                                                    <MuiGridRoot
                                                      as="div"
                                                      className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-1"
                                                      ownerState={
                                                        Object {
                                                          "children": <ForwardRef(Checkbox)
                                                            checked={false}
                                                            color="success"
                                                            id="completed-checkbox"
                                                            onChange={[Function]}
                                                          />,
                                                          "columnSpacing": 0,
                                                          "columns": 12,
                                                          "container": false,
                                                          "direction": "row",
                                                          "item": true,
                                                          "lg": false,
                                                          "md": false,
                                                          "rowSpacing": 0,
                                                          "sm": false,
                                                          "sx": Object {
                                                            "alignSelf": "center",
                                                          },
                                                          "wrap": "wrap",
                                                          "xl": false,
                                                          "xs": 1,
                                                          "zeroMinWidth": false,
                                                        }
                                                      }
                                                      sx={
                                                        Object {
                                                          "alignSelf": "center",
                                                        }
                                                      }
                                                    >
                                                      <Noop />
                                                      <div
                                                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-1 css-9qwrkn-MuiGrid-root"
                                                      >
                                                        <ForwardRef(Checkbox)
                                                          checked={false}
                                                          color="success"
                                                          id="completed-checkbox"
                                                          onChange={[Function]}
                                                        >
                                                          <MuiCheckboxRoot
                                                            checked={false}
                                                            checkedIcon={
                                                              <Memo
                                                                fontSize="medium"
                                                              />
                                                            }
                                                            classes={
                                                              Object {
                                                                "root": "MuiCheckbox-root MuiCheckbox-colorSuccess",
                                                              }
                                                            }
                                                            icon={
                                                              <Memo
                                                                fontSize="medium"
                                                              />
                                                            }
                                                            id="completed-checkbox"
                                                            inputProps={
                                                              Object {
                                                                "data-indeterminate": false,
                                                              }
                                                            }
                                                            onChange={[Function]}
                                                            ownerState={
                                                              Object {
                                                                "checked": false,
                                                                "color": "success",
                                                                "id": "completed-checkbox",
                                                                "indeterminate": false,
                                                                "onChange": [Function],
                                                                "size": "medium",
                                                              }
                                                            }
                                                            type="checkbox"
                                                          >
                                                            <Noop />
                                                            <ForwardRef(SwitchBase)
                                                              checked={false}
                                                              checkedIcon={
                                                                <Memo
                                                                  fontSize="medium"
                                                                />
                                                              }
                                                              className="css-1chunva-MuiCheckbox-root"
                                                              classes={
                                                                Object {
                                                                  "root": "MuiCheckbox-root MuiCheckbox-colorSuccess",
                                                                }
                                                              }
                                                              icon={
                                                                <Memo
                                                                  fontSize="medium"
                                                                />
                                                              }
                                                              id="completed-checkbox"
                                                              inputProps={
                                                                Object {
                                                                  "data-indeterminate": false,
                                                                }
                                                              }
                                                              onChange={[Function]}
                                                              type="checkbox"
                                                            >
                                                              <Styled(ForwardRef(ButtonBase))
                                                                centerRipple={true}
                                                                className="MuiCheckbox-root MuiCheckbox-colorSuccess PrivateSwitchBase-root css-1chunva-MuiCheckbox-root"
                                                                classes={
                                                                  Object {
                                                                    "root": "MuiCheckbox-root MuiCheckbox-colorSuccess",
                                                                  }
                                                                }
                                                                component="span"
                                                                focusRipple={true}
                                                                onBlur={[Function]}
                                                                onFocus={[Function]}
                                                                ownerState={
                                                                  Object {
                                                                    "checked": false,
                                                                    "checkedIcon": <Memo
                                                                      fontSize="medium"
                                                                    />,
                                                                    "className": "css-1chunva-MuiCheckbox-root",
                                                                    "classes": Object {
                                                                      "root": "MuiCheckbox-root MuiCheckbox-colorSuccess",
                                                                    },
                                                                    "disableFocusRipple": false,
                                                                    "disabled": undefined,
                                                                    "edge": false,
                                                                    "icon": <Memo
                                                                      fontSize="medium"
                                                                    />,
                                                                    "id": "completed-checkbox",
                                                                    "inputProps": Object {
                                                                      "data-indeterminate": false,
                                                                    },
                                                                    "onChange": [Function],
                                                                    "type": "checkbox",
                                                                  }
                                                                }
                                                                tabIndex={null}
                                                              >
                                                                <Noop />
                                                                <ForwardRef(ButtonBase)
                                                                  centerRipple={true}
                                                                  className="MuiCheckbox-root MuiCheckbox-colorSuccess PrivateSwitchBase-root css-ty7y3h-MuiCheckbox-root"
                                                                  classes={
                                                                    Object {
                                                                      "root": "MuiCheckbox-root MuiCheckbox-colorSuccess",
                                                                    }
                                                                  }
                                                                  component="span"
                                                                  focusRipple={true}
                                                                  onBlur={[Function]}
                                                                  onFocus={[Function]}
                                                                  tabIndex={null}
                                                                >
                                                                  <MuiButtonBaseRoot
                                                                    as="span"
                                                                    className="MuiCheckbox-root MuiCheckbox-colorSuccess MuiButtonBase-root MuiCheckbox-root MuiCheckbox-colorSuccess PrivateSwitchBase-root css-ty7y3h-MuiCheckbox-root"
                                                                    classes={
                                                                      Object {
                                                                        "root": "MuiCheckbox-root MuiCheckbox-colorSuccess",
                                                                      }
                                                                    }
                                                                    onBlur={[Function]}
                                                                    onContextMenu={[Function]}
                                                                    onDragLeave={[Function]}
                                                                    onFocus={[Function]}
                                                                    onKeyDown={[Function]}
                                                                    onKeyUp={[Function]}
                                                                    onMouseDown={[Function]}
                                                                    onMouseLeave={[Function]}
                                                                    onMouseUp={[Function]}
                                                                    onTouchEnd={[Function]}
                                                                    onTouchMove={[Function]}
                                                                    onTouchStart={[Function]}
                                                                    ownerState={
                                                                      Object {
                                                                        "centerRipple": true,
                                                                        "children": Array [
                                                                          <Styled(input)
                                                                            checked={false}
                                                                            className="PrivateSwitchBase-input"
                                                                            data-indeterminate={false}
                                                                            id="completed-checkbox"
                                                                            onChange={[Function]}
                                                                            ownerState={
                                                                              Object {
                                                                                "checked": false,
                                                                                "checkedIcon": <Memo
                                                                                  fontSize="medium"
                                                                                />,
                                                                                "className": "css-1chunva-MuiCheckbox-root",
                                                                                "classes": Object {
                                                                                  "root": "MuiCheckbox-root MuiCheckbox-colorSuccess",
                                                                                },
                                                                                "disableFocusRipple": false,
                                                                                "disabled": undefined,
                                                                                "edge": false,
                                                                                "icon": <Memo
                                                                                  fontSize="medium"
                                                                                />,
                                                                                "id": "completed-checkbox",
                                                                                "inputProps": Object {
                                                                                  "data-indeterminate": false,
                                                                                },
                                                                                "onChange": [Function],
                                                                                "type": "checkbox",
                                                                              }
                                                                            }
                                                                            type="checkbox"
                                                                          />,
                                                                          <Memo
                                                                            fontSize="medium"
                                                                          />,
                                                                        ],
                                                                        "className": "MuiCheckbox-root MuiCheckbox-colorSuccess PrivateSwitchBase-root css-ty7y3h-MuiCheckbox-root",
                                                                        "classes": Object {
                                                                          "root": "MuiCheckbox-root MuiCheckbox-colorSuccess",
                                                                        },
                                                                        "component": "span",
                                                                        "disableRipple": false,
                                                                        "disableTouchRipple": false,
                                                                        "disabled": false,
                                                                        "focusRipple": true,
                                                                        "focusVisible": false,
                                                                        "onBlur": [Function],
                                                                        "onFocus": [Function],
                                                                        "role": undefined,
                                                                        "tabIndex": null,
                                                                      }
                                                                    }
                                                                    tabIndex={null}
                                                                  >
                                                                    <Noop />
                                                                    <span
                                                                      className="MuiCheckbox-root MuiCheckbox-colorSuccess MuiButtonBase-root MuiCheckbox-root MuiCheckbox-colorSuccess PrivateSwitchBase-root css-10drtbx-MuiButtonBase-root-MuiCheckbox-root"
                                                                      onBlur={[Function]}
                                                                      onContextMenu={[Function]}
                                                                      onDragLeave={[Function]}
                                                                      onFocus={[Function]}
                                                                      onKeyDown={[Function]}
                                                                      onKeyUp={[Function]}
                                                                      onMouseDown={[Function]}
                                                                      onMouseLeave={[Function]}
                                                                      onMouseUp={[Function]}
                                                                      onTouchEnd={[Function]}
                                                                      onTouchMove={[Function]}
                                                                      onTouchStart={[Function]}
                                                                      tabIndex={null}
                                                                    >
                                                                      <Styled(input)
                                                                        checked={false}
                                                                        className="PrivateSwitchBase-input"
                                                                        data-indeterminate={false}
                                                                        id="completed-checkbox"
                                                                        onChange={[Function]}
                                                                        ownerState={
                                                                          Object {
                                                                            "checked": false,
                                                                            "checkedIcon": <Memo
                                                                              fontSize="medium"
                                                                            />,
                                                                            "className": "css-1chunva-MuiCheckbox-root",
                                                                            "classes": Object {
                                                                              "root": "MuiCheckbox-root MuiCheckbox-colorSuccess",
                                                                            },
                                                                            "disableFocusRipple": false,
                                                                            "disabled": undefined,
                                                                            "edge": false,
                                                                            "icon": <Memo
                                                                              fontSize="medium"
                                                                            />,
                                                                            "id": "completed-checkbox",
                                                                            "inputProps": Object {
                                                                              "data-indeterminate": false,
                                                                            },
                                                                            "onChange": [Function],
                                                                            "type": "checkbox",
                                                                          }
                                                                        }
                                                                        type="checkbox"
                                                                      >
                                                                        <Noop />
                                                                        <input
                                                                          checked={false}
                                                                          className="PrivateSwitchBase-input css-1m9pwf3"
                                                                          data-indeterminate={false}
                                                                          id="completed-checkbox"
                                                                          onChange={[Function]}
                                                                          type="checkbox"
                                                                        />
                                                                      </Styled(input)>
                                                                      <ForwardRef(CheckBoxOutlineBlankIcon)
                                                                        fontSize="medium"
                                                                      >
                                                                        <ForwardRef(SvgIcon)
                                                                          data-testid="CheckBoxOutlineBlankIcon"
                                                                          fontSize="medium"
                                                                        >
                                                                          <MuiSvgIconRoot
                                                                            aria-hidden={true}
                                                                            as="svg"
                                                                            className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium"
                                                                            data-testid="CheckBoxOutlineBlankIcon"
                                                                            focusable="false"
                                                                            ownerState={
                                                                              Object {
                                                                                "children": <path
                                                                                  d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                                />,
                                                                                "color": "inherit",
                                                                                "component": "svg",
                                                                                "data-testid": "CheckBoxOutlineBlankIcon",
                                                                                "fontSize": "medium",
                                                                                "inheritViewBox": false,
                                                                                "viewBox": "0 0 24 24",
                                                                              }
                                                                            }
                                                                            viewBox="0 0 24 24"
                                                                          >
                                                                            <Noop />
                                                                            <svg
                                                                              aria-hidden={true}
                                                                              className="MuiSvgIcon-root MuiSvgIcon-fontSizeMedium css-i4bv87-MuiSvgIcon-root"
                                                                              data-testid="CheckBoxOutlineBlankIcon"
                                                                              focusable="false"
                                                                              viewBox="0 0 24 24"
                                                                            >
                                                                              <path
                                                                                d="M19 5v14H5V5h14m0-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2z"
                                                                              />
                                                                            </svg>
                                                                          </MuiSvgIconRoot>
                                                                        </ForwardRef(SvgIcon)>
                                                                      </ForwardRef(CheckBoxOutlineBlankIcon)>
                                                                      <ForwardRef(TouchRipple)
                                                                        center={true}
                                                                      >
                                                                        <MuiTouchRippleRoot
                                                                          className="MuiTouchRipple-root"
                                                                        >
                                                                          <Noop />
                                                                          <span
                                                                            className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                                                          >
                                                                            <TransitionGroup
                                                                              childFactory={[Function]}
                                                                              component={null}
                                                                              exit={true}
                                                                            />
                                                                          </span>
                                                                        </MuiTouchRippleRoot>
                                                                      </ForwardRef(TouchRipple)>
                                                                    </span>
                                                                  </MuiButtonBaseRoot>
                                                                </ForwardRef(ButtonBase)>
                                                              </Styled(ForwardRef(ButtonBase))>
                                                            </ForwardRef(SwitchBase)>
                                                          </MuiCheckboxRoot>
                                                        </ForwardRef(Checkbox)>
                                                      </div>
                                                    </MuiGridRoot>
                                                  </ForwardRef(Grid)>
                                                </div>
                                              </MuiGridRoot>
                                            </ForwardRef(Grid)>
                                          </div>
                                        </MuiPaperRoot>
                                      </ForwardRef(Paper)>
                                    </ToDoItem>
                                  </div>
                                </MuiPaperRoot>
                              </ForwardRef(Paper)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                </div>
              </MuiGridRoot>
            </ForwardRef(Grid)>
          </div>
        </MuiContainerRoot>
      </ForwardRef(Container)>
    </Root>
  </Provider>
</ThemeProvider>
`;

exports[`Test add todo Render main page without any item 1`] = `
<ThemeProvider
  theme={
    Object {
      "breakpoints": Object {
        "between": [Function],
        "down": [Function],
        "keys": Array [
          "xs",
          "sm",
          "md",
          "lg",
          "xl",
        ],
        "not": [Function],
        "only": [Function],
        "unit": "px",
        "up": [Function],
        "values": Object {
          "lg": 1200,
          "md": 900,
          "sm": 600,
          "xl": 1536,
          "xs": 0,
        },
      },
      "components": Object {},
      "direction": "ltr",
      "mixins": Object {
        "toolbar": Object {
          "@media (min-width:0px) and (orientation: landscape)": Object {
            "minHeight": 48,
          },
          "@media (min-width:600px)": Object {
            "minHeight": 64,
          },
          "minHeight": 56,
        },
      },
      "palette": Object {
        "action": Object {
          "activatedOpacity": 0.12,
          "active": "rgba(0, 0, 0, 0.54)",
          "disabled": "rgba(0, 0, 0, 0.26)",
          "disabledBackground": "rgba(0, 0, 0, 0.12)",
          "disabledOpacity": 0.38,
          "focus": "rgba(0, 0, 0, 0.12)",
          "focusOpacity": 0.12,
          "hover": "rgba(0, 0, 0, 0.04)",
          "hoverOpacity": 0.04,
          "selected": "rgba(0, 0, 0, 0.08)",
          "selectedOpacity": 0.08,
        },
        "augmentColor": [Function],
        "background": Object {
          "default": "#fff",
          "paper": "#fff",
        },
        "common": Object {
          "black": "#000",
          "white": "#fff",
        },
        "contrastThreshold": 3,
        "divider": "rgba(0, 0, 0, 0.12)",
        "error": Object {
          "contrastText": "#fff",
          "dark": "#c62828",
          "light": "#ef5350",
          "main": "#d32f2f",
        },
        "getContrastText": [Function],
        "grey": Object {
          "100": "#f5f5f5",
          "200": "#eeeeee",
          "300": "#e0e0e0",
          "400": "#bdbdbd",
          "50": "#fafafa",
          "500": "#9e9e9e",
          "600": "#757575",
          "700": "#616161",
          "800": "#424242",
          "900": "#212121",
          "A100": "#f5f5f5",
          "A200": "#eeeeee",
          "A400": "#bdbdbd",
          "A700": "#616161",
        },
        "info": Object {
          "contrastText": "#fff",
          "dark": "#01579b",
          "light": "#03a9f4",
          "main": "#0288d1",
        },
        "mode": "light",
        "primary": Object {
          "contrastText": "#fff",
          "dark": "#1565c0",
          "light": "#42a5f5",
          "main": "#1976d2",
        },
        "secondary": Object {
          "contrastText": "#fff",
          "dark": "#7b1fa2",
          "light": "#ba68c8",
          "main": "#9c27b0",
        },
        "success": Object {
          "contrastText": "#fff",
          "dark": "#1b5e20",
          "light": "#4caf50",
          "main": "#2e7d32",
        },
        "text": Object {
          "disabled": "rgba(0, 0, 0, 0.38)",
          "primary": "rgba(0, 0, 0, 0.87)",
          "secondary": "rgba(0, 0, 0, 0.6)",
        },
        "tonalOffset": 0.2,
        "warning": Object {
          "contrastText": "#fff",
          "dark": "#e65100",
          "light": "#ff9800",
          "main": "#ed6c02",
        },
      },
      "shadows": Array [
        "none",
        "0px 2px 1px -1px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 1px 3px 0px rgba(0,0,0,0.12)",
        "0px 3px 1px -2px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 1px 5px 0px rgba(0,0,0,0.12)",
        "0px 3px 3px -2px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 1px 8px 0px rgba(0,0,0,0.12)",
        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
      ],
      "shape": Object {
        "borderRadius": 4,
      },
      "spacing": [Function],
      "transitions": Object {
        "create": [Function],
        "duration": Object {
          "complex": 375,
          "enteringScreen": 225,
          "leavingScreen": 195,
          "short": 250,
          "shorter": 200,
          "shortest": 150,
          "standard": 300,
        },
        "easing": Object {
          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
        },
        "getAutoHeightDuration": [Function],
      },
      "typography": Object {
        "body1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.5,
        },
        "body2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 400,
          "letterSpacing": "0.01071em",
          "lineHeight": 1.43,
        },
        "button": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.02857em",
          "lineHeight": 1.75,
          "textTransform": "uppercase",
        },
        "caption": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.03333em",
          "lineHeight": 1.66,
        },
        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
        "fontSize": 14,
        "fontWeightBold": 700,
        "fontWeightLight": 300,
        "fontWeightMedium": 500,
        "fontWeightRegular": 400,
        "h1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "6rem",
          "fontWeight": 300,
          "letterSpacing": "-0.01562em",
          "lineHeight": 1.167,
        },
        "h2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3.75rem",
          "fontWeight": 300,
          "letterSpacing": "-0.00833em",
          "lineHeight": 1.2,
        },
        "h3": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "3rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.167,
        },
        "h4": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "2.125rem",
          "fontWeight": 400,
          "letterSpacing": "0.00735em",
          "lineHeight": 1.235,
        },
        "h5": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.5rem",
          "fontWeight": 400,
          "letterSpacing": "0em",
          "lineHeight": 1.334,
        },
        "h6": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1.25rem",
          "fontWeight": 500,
          "letterSpacing": "0.0075em",
          "lineHeight": 1.6,
        },
        "htmlFontSize": 16,
        "overline": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.75rem",
          "fontWeight": 400,
          "letterSpacing": "0.08333em",
          "lineHeight": 2.66,
          "textTransform": "uppercase",
        },
        "pxToRem": [Function],
        "subtitle1": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "1rem",
          "fontWeight": 400,
          "letterSpacing": "0.00938em",
          "lineHeight": 1.75,
        },
        "subtitle2": Object {
          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
          "fontSize": "0.875rem",
          "fontWeight": 500,
          "letterSpacing": "0.00714em",
          "lineHeight": 1.57,
        },
      },
      "zIndex": Object {
        "appBar": 1100,
        "drawer": 1200,
        "mobileStepper": 1000,
        "modal": 1300,
        "snackbar": 1400,
        "speedDial": 1050,
        "tooltip": 1500,
      },
      Symbol(mui.nested): false,
    }
  }
>
  <Provider
    store={
      Object {
        "@@observable": [Function],
        "dispatch": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  >
    <Root>
      <ForwardRef(Container)
        className="makeStyles-mainContainer-1"
        maxWidth="md"
      >
        <MuiContainerRoot
          as="div"
          className="MuiContainer-root MuiContainer-maxWidthMd makeStyles-mainContainer-1"
          ownerState={
            Object {
              "children": <ForwardRef(Grid)
                container={true}
                direction="row"
              >
                <ForwardRef(Grid)
                  alignItems="center"
                  className="makeStyles-mainContainer-1"
                  container={true}
                  direction="row"
                  item={true}
                  xs={12}
                >
                  <ForwardRef(Grid)
                    item={true}
                    xs={1}
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-topText-4"
                      variant="h5"
                    >
                      Tasker
                    </ForwardRef(Typography)>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    item={true}
                    xs={9}
                  />
                  <ForwardRef(Grid)
                    container={true}
                    item={true}
                    justifyContent="flex-end"
                    xs={2}
                  >
                    <ForwardRef(Typography)
                      className="makeStyles-subText-5"
                      variant="h6"
                    >
                      Techformist
                    </ForwardRef(Typography)>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    alignItems="center"
                    container={true}
                    direction="row"
                    item={true}
                    xs={12}
                  >
                    <ForwardRef(Grid)
                      className="makeStyles-boxPadding-9"
                      item={true}
                      xs={11}
                    />
                    <ForwardRef(Grid)
                      container={true}
                      item={true}
                      justifyContent="flex-end"
                      xs={1}
                    >
                      <ForwardRef(Button)
                        id="add-new"
                        onClick={[Function]}
                        variant="outlined"
                      >
                        New
                      </ForwardRef(Button)>
                    </ForwardRef(Grid)>
                  </ForwardRef(Grid)>
                </ForwardRef(Grid)>
                <ForwardRef(Grid)
                  alignItems="flex-start"
                  className="makeStyles-mainContainer-1"
                  container={true}
                  direction="row"
                  item={true}
                  xs={12}
                >
                  <ForwardRef(Grid)
                    alignItems="flex-center"
                    container={true}
                    direction="column"
                    item={true}
                    xs={12}
                  >
                    <ForwardRef(Paper)
                      elevation={1}
                      sx={
                        Object {
                          "flexGrow": 1,
                          "padding": "20px",
                        }
                      }
                    >
                      <ForwardRef(Typography)
                        className="makeStyles-subText-5"
                        variant="h6"
                      >
                        Task list is empty
                      </ForwardRef(Typography)>
                    </ForwardRef(Paper)>
                  </ForwardRef(Grid)>
                </ForwardRef(Grid)>
              </ForwardRef(Grid)>,
              "className": "makeStyles-mainContainer-1",
              "component": "div",
              "disableGutters": false,
              "fixed": false,
              "maxWidth": "md",
            }
          }
        >
          <Noop />
          <div
            className="MuiContainer-root MuiContainer-maxWidthMd makeStyles-mainContainer-1 css-xdmu94-MuiContainer-root"
          >
            <ForwardRef(Grid)
              container={true}
              direction="row"
            >
              <MuiGridRoot
                as="div"
                className="MuiGrid-root MuiGrid-container"
                ownerState={
                  Object {
                    "children": Array [
                      <ForwardRef(Grid)
                        alignItems="center"
                        className="makeStyles-mainContainer-1"
                        container={true}
                        direction="row"
                        item={true}
                        xs={12}
                      >
                        <ForwardRef(Grid)
                          item={true}
                          xs={1}
                        >
                          <ForwardRef(Typography)
                            className="makeStyles-topText-4"
                            variant="h5"
                          >
                            Tasker
                          </ForwardRef(Typography)>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                          xs={9}
                        />
                        <ForwardRef(Grid)
                          container={true}
                          item={true}
                          justifyContent="flex-end"
                          xs={2}
                        >
                          <ForwardRef(Typography)
                            className="makeStyles-subText-5"
                            variant="h6"
                          >
                            Techformist
                          </ForwardRef(Typography)>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          alignItems="center"
                          container={true}
                          direction="row"
                          item={true}
                          xs={12}
                        >
                          <ForwardRef(Grid)
                            className="makeStyles-boxPadding-9"
                            item={true}
                            xs={11}
                          />
                          <ForwardRef(Grid)
                            container={true}
                            item={true}
                            justifyContent="flex-end"
                            xs={1}
                          >
                            <ForwardRef(Button)
                              id="add-new"
                              onClick={[Function]}
                              variant="outlined"
                            >
                              New
                            </ForwardRef(Button)>
                          </ForwardRef(Grid)>
                        </ForwardRef(Grid)>
                      </ForwardRef(Grid)>,
                      <ForwardRef(Grid)
                        alignItems="flex-start"
                        className="makeStyles-mainContainer-1"
                        container={true}
                        direction="row"
                        item={true}
                        xs={12}
                      >
                        <ForwardRef(Grid)
                          alignItems="flex-center"
                          container={true}
                          direction="column"
                          item={true}
                          xs={12}
                        >
                          <ForwardRef(Paper)
                            elevation={1}
                            sx={
                              Object {
                                "flexGrow": 1,
                                "padding": "20px",
                              }
                            }
                          >
                            <ForwardRef(Typography)
                              className="makeStyles-subText-5"
                              variant="h6"
                            >
                              Task list is empty
                            </ForwardRef(Typography)>
                          </ForwardRef(Paper)>
                        </ForwardRef(Grid)>
                      </ForwardRef(Grid)>,
                    ],
                    "columnSpacing": 0,
                    "columns": 12,
                    "container": true,
                    "direction": "row",
                    "item": false,
                    "lg": false,
                    "md": false,
                    "rowSpacing": 0,
                    "sm": false,
                    "sx": Object {},
                    "wrap": "wrap",
                    "xl": false,
                    "xs": false,
                    "zeroMinWidth": false,
                  }
                }
                sx={Object {}}
              >
                <Noop />
                <div
                  className="MuiGrid-root MuiGrid-container css-11lq3yg-MuiGrid-root"
                >
                  <ForwardRef(Grid)
                    alignItems="center"
                    className="makeStyles-mainContainer-1"
                    container={true}
                    direction="row"
                    item={true}
                    xs={12}
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12 makeStyles-mainContainer-1"
                      ownerState={
                        Object {
                          "children": Array [
                            <ForwardRef(Grid)
                              item={true}
                              xs={1}
                            >
                              <ForwardRef(Typography)
                                className="makeStyles-topText-4"
                                variant="h5"
                              >
                                Tasker
                              </ForwardRef(Typography)>
                            </ForwardRef(Grid)>,
                            <ForwardRef(Grid)
                              item={true}
                              xs={9}
                            />,
                            <ForwardRef(Grid)
                              container={true}
                              item={true}
                              justifyContent="flex-end"
                              xs={2}
                            >
                              <ForwardRef(Typography)
                                className="makeStyles-subText-5"
                                variant="h6"
                              >
                                Techformist
                              </ForwardRef(Typography)>
                            </ForwardRef(Grid)>,
                            <ForwardRef(Grid)
                              alignItems="center"
                              container={true}
                              direction="row"
                              item={true}
                              xs={12}
                            >
                              <ForwardRef(Grid)
                                className="makeStyles-boxPadding-9"
                                item={true}
                                xs={11}
                              />
                              <ForwardRef(Grid)
                                container={true}
                                item={true}
                                justifyContent="flex-end"
                                xs={1}
                              >
                                <ForwardRef(Button)
                                  id="add-new"
                                  onClick={[Function]}
                                  variant="outlined"
                                >
                                  New
                                </ForwardRef(Button)>
                              </ForwardRef(Grid)>
                            </ForwardRef(Grid)>,
                          ],
                          "className": "makeStyles-mainContainer-1",
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": true,
                          "direction": "row",
                          "item": true,
                          "lg": false,
                          "md": false,
                          "rowSpacing": 0,
                          "sm": false,
                          "sx": Object {
                            "alignItems": "center",
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": 12,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "alignItems": "center",
                        }
                      }
                    >
                      <Noop />
                      <div
                        className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12 makeStyles-mainContainer-1 css-1x4vn2y-MuiGrid-root"
                      >
                        <ForwardRef(Grid)
                          item={true}
                          xs={1}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-1"
                            ownerState={
                              Object {
                                "children": <ForwardRef(Typography)
                                  className="makeStyles-topText-4"
                                  variant="h5"
                                >
                                  Tasker
                                </ForwardRef(Typography)>,
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 1,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <Noop />
                            <div
                              className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-1 css-u78q51-MuiGrid-root"
                            >
                              <ForwardRef(Typography)
                                className="makeStyles-topText-4"
                                variant="h5"
                              >
                                <MuiTypographyRoot
                                  as="h5"
                                  className="MuiTypography-root MuiTypography-h5 makeStyles-topText-4"
                                  ownerState={
                                    Object {
                                      "align": "inherit",
                                      "children": "Tasker",
                                      "className": "makeStyles-topText-4",
                                      "color": undefined,
                                      "component": undefined,
                                      "gutterBottom": false,
                                      "noWrap": false,
                                      "paragraph": false,
                                      "sx": Object {
                                        "color": undefined,
                                      },
                                      "variant": "h5",
                                      "variantMapping": Object {
                                        "body1": "p",
                                        "body2": "p",
                                        "h1": "h1",
                                        "h2": "h2",
                                        "h3": "h3",
                                        "h4": "h4",
                                        "h5": "h5",
                                        "h6": "h6",
                                        "inherit": "p",
                                        "subtitle1": "h6",
                                        "subtitle2": "h6",
                                      },
                                    }
                                  }
                                  sx={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                >
                                  <Noop />
                                  <h5
                                    className="MuiTypography-root MuiTypography-h5 makeStyles-topText-4 css-ag7rrr-MuiTypography-root"
                                  >
                                    Tasker
                                  </h5>
                                </MuiTypographyRoot>
                              </ForwardRef(Typography)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          item={true}
                          xs={9}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-9"
                            ownerState={
                              Object {
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": false,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {},
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 9,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={Object {}}
                          >
                            <Noop />
                            <div
                              className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-9 css-1qpzhgb-MuiGrid-root"
                            />
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          container={true}
                          item={true}
                          justifyContent="flex-end"
                          xs={2}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-2"
                            ownerState={
                              Object {
                                "children": <ForwardRef(Typography)
                                  className="makeStyles-subText-5"
                                  variant="h6"
                                >
                                  Techformist
                                </ForwardRef(Typography)>,
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": true,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {
                                  "justifyContent": "flex-end",
                                },
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 2,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={
                              Object {
                                "justifyContent": "flex-end",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-2 css-7ml0tv-MuiGrid-root"
                            >
                              <ForwardRef(Typography)
                                className="makeStyles-subText-5"
                                variant="h6"
                              >
                                <MuiTypographyRoot
                                  as="h6"
                                  className="MuiTypography-root MuiTypography-h6 makeStyles-subText-5"
                                  ownerState={
                                    Object {
                                      "align": "inherit",
                                      "children": "Techformist",
                                      "className": "makeStyles-subText-5",
                                      "color": undefined,
                                      "component": undefined,
                                      "gutterBottom": false,
                                      "noWrap": false,
                                      "paragraph": false,
                                      "sx": Object {
                                        "color": undefined,
                                      },
                                      "variant": "h6",
                                      "variantMapping": Object {
                                        "body1": "p",
                                        "body2": "p",
                                        "h1": "h1",
                                        "h2": "h2",
                                        "h3": "h3",
                                        "h4": "h4",
                                        "h5": "h5",
                                        "h6": "h6",
                                        "inherit": "p",
                                        "subtitle1": "h6",
                                        "subtitle2": "h6",
                                      },
                                    }
                                  }
                                  sx={
                                    Object {
                                      "color": undefined,
                                    }
                                  }
                                >
                                  <Noop />
                                  <h6
                                    className="MuiTypography-root MuiTypography-h6 makeStyles-subText-5 css-2ulfj5-MuiTypography-root"
                                  >
                                    Techformist
                                  </h6>
                                </MuiTypographyRoot>
                              </ForwardRef(Typography)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                        <ForwardRef(Grid)
                          alignItems="center"
                          container={true}
                          direction="row"
                          item={true}
                          xs={12}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12"
                            ownerState={
                              Object {
                                "children": Array [
                                  <ForwardRef(Grid)
                                    className="makeStyles-boxPadding-9"
                                    item={true}
                                    xs={11}
                                  />,
                                  <ForwardRef(Grid)
                                    container={true}
                                    item={true}
                                    justifyContent="flex-end"
                                    xs={1}
                                  >
                                    <ForwardRef(Button)
                                      id="add-new"
                                      onClick={[Function]}
                                      variant="outlined"
                                    >
                                      New
                                    </ForwardRef(Button)>
                                  </ForwardRef(Grid)>,
                                ],
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": true,
                                "direction": "row",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {
                                  "alignItems": "center",
                                },
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 12,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={
                              Object {
                                "alignItems": "center",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12 css-1x4vn2y-MuiGrid-root"
                            >
                              <ForwardRef(Grid)
                                className="makeStyles-boxPadding-9"
                                item={true}
                                xs={11}
                              >
                                <MuiGridRoot
                                  as="div"
                                  className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-11 makeStyles-boxPadding-9"
                                  ownerState={
                                    Object {
                                      "className": "makeStyles-boxPadding-9",
                                      "columnSpacing": 0,
                                      "columns": 12,
                                      "container": false,
                                      "direction": "row",
                                      "item": true,
                                      "lg": false,
                                      "md": false,
                                      "rowSpacing": 0,
                                      "sm": false,
                                      "sx": Object {},
                                      "wrap": "wrap",
                                      "xl": false,
                                      "xs": 11,
                                      "zeroMinWidth": false,
                                    }
                                  }
                                  sx={Object {}}
                                >
                                  <Noop />
                                  <div
                                    className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-11 makeStyles-boxPadding-9 css-ykovpn-MuiGrid-root"
                                  />
                                </MuiGridRoot>
                              </ForwardRef(Grid)>
                              <ForwardRef(Grid)
                                container={true}
                                item={true}
                                justifyContent="flex-end"
                                xs={1}
                              >
                                <MuiGridRoot
                                  as="div"
                                  className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-1"
                                  ownerState={
                                    Object {
                                      "children": <ForwardRef(Button)
                                        id="add-new"
                                        onClick={[Function]}
                                        variant="outlined"
                                      >
                                        New
                                      </ForwardRef(Button)>,
                                      "columnSpacing": 0,
                                      "columns": 12,
                                      "container": true,
                                      "direction": "row",
                                      "item": true,
                                      "lg": false,
                                      "md": false,
                                      "rowSpacing": 0,
                                      "sm": false,
                                      "sx": Object {
                                        "justifyContent": "flex-end",
                                      },
                                      "wrap": "wrap",
                                      "xl": false,
                                      "xs": 1,
                                      "zeroMinWidth": false,
                                    }
                                  }
                                  sx={
                                    Object {
                                      "justifyContent": "flex-end",
                                    }
                                  }
                                >
                                  <Noop />
                                  <div
                                    className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-1 css-1nomy00-MuiGrid-root"
                                  >
                                    <ForwardRef(Button)
                                      id="add-new"
                                      onClick={[Function]}
                                      variant="outlined"
                                    >
                                      <MuiButtonRoot
                                        className=""
                                        classes={
                                          Object {
                                            "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                            "label": "MuiButton-label",
                                            "root": "MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium",
                                            "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                          }
                                        }
                                        component="button"
                                        disabled={false}
                                        focusRipple={true}
                                        focusVisibleClassName=""
                                        id="add-new"
                                        onClick={[Function]}
                                        ownerState={
                                          Object {
                                            "children": "New",
                                            "color": "primary",
                                            "component": "button",
                                            "disableElevation": false,
                                            "disableFocusRipple": false,
                                            "disabled": false,
                                            "fullWidth": false,
                                            "id": "add-new",
                                            "onClick": [Function],
                                            "size": "medium",
                                            "type": undefined,
                                            "variant": "outlined",
                                          }
                                        }
                                      >
                                        <Noop />
                                        <ForwardRef(ButtonBase)
                                          className=" css-10tjo1u-MuiButton-root"
                                          classes={
                                            Object {
                                              "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                              "label": "MuiButton-label",
                                              "root": "MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium",
                                              "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                            }
                                          }
                                          component="button"
                                          disabled={false}
                                          focusRipple={true}
                                          focusVisibleClassName=""
                                          id="add-new"
                                          onClick={[Function]}
                                        >
                                          <MuiButtonBaseRoot
                                            as="button"
                                            className="MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButtonBase-root  css-10tjo1u-MuiButton-root"
                                            classes={
                                              Object {
                                                "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                "label": "MuiButton-label",
                                                "root": "MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium",
                                                "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                              }
                                            }
                                            disabled={false}
                                            id="add-new"
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onContextMenu={[Function]}
                                            onDragLeave={[Function]}
                                            onFocus={[Function]}
                                            onKeyDown={[Function]}
                                            onKeyUp={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            onTouchEnd={[Function]}
                                            onTouchMove={[Function]}
                                            onTouchStart={[Function]}
                                            ownerState={
                                              Object {
                                                "centerRipple": false,
                                                "children": Array [
                                                  undefined,
                                                  "New",
                                                  undefined,
                                                ],
                                                "className": " css-10tjo1u-MuiButton-root",
                                                "classes": Object {
                                                  "endIcon": "MuiButton-endIcon MuiButton-iconSizeMedium",
                                                  "label": "MuiButton-label",
                                                  "root": "MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium",
                                                  "startIcon": "MuiButton-startIcon MuiButton-iconSizeMedium",
                                                },
                                                "component": "button",
                                                "disableRipple": false,
                                                "disableTouchRipple": false,
                                                "disabled": false,
                                                "focusRipple": true,
                                                "focusVisible": false,
                                                "focusVisibleClassName": "",
                                                "id": "add-new",
                                                "onClick": [Function],
                                                "tabIndex": 0,
                                                "type": undefined,
                                              }
                                            }
                                            tabIndex={0}
                                            type="button"
                                          >
                                            <Noop />
                                            <button
                                              className="MuiButton-root MuiButton-outlined MuiButton-outlinedPrimary MuiButton-sizeMedium MuiButton-outlinedSizeMedium MuiButtonBase-root  css-1rwt2y5-MuiButtonBase-root-MuiButton-root"
                                              disabled={false}
                                              id="add-new"
                                              onBlur={[Function]}
                                              onClick={[Function]}
                                              onContextMenu={[Function]}
                                              onDragLeave={[Function]}
                                              onFocus={[Function]}
                                              onKeyDown={[Function]}
                                              onKeyUp={[Function]}
                                              onMouseDown={[Function]}
                                              onMouseLeave={[Function]}
                                              onMouseUp={[Function]}
                                              onTouchEnd={[Function]}
                                              onTouchMove={[Function]}
                                              onTouchStart={[Function]}
                                              tabIndex={0}
                                              type="button"
                                            >
                                              New
                                              <ForwardRef(TouchRipple)
                                                center={false}
                                              >
                                                <MuiTouchRippleRoot
                                                  className="MuiTouchRipple-root"
                                                >
                                                  <Noop />
                                                  <span
                                                    className="MuiTouchRipple-root css-8je8zh-MuiTouchRipple-root"
                                                  >
                                                    <TransitionGroup
                                                      childFactory={[Function]}
                                                      component={null}
                                                      exit={true}
                                                    />
                                                  </span>
                                                </MuiTouchRippleRoot>
                                              </ForwardRef(TouchRipple)>
                                            </button>
                                          </MuiButtonBaseRoot>
                                        </ForwardRef(ButtonBase)>
                                      </MuiButtonRoot>
                                    </ForwardRef(Button)>
                                  </div>
                                </MuiGridRoot>
                              </ForwardRef(Grid)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                  <ForwardRef(Grid)
                    alignItems="flex-start"
                    className="makeStyles-mainContainer-1"
                    container={true}
                    direction="row"
                    item={true}
                    xs={12}
                  >
                    <MuiGridRoot
                      as="div"
                      className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12 makeStyles-mainContainer-1"
                      ownerState={
                        Object {
                          "children": <ForwardRef(Grid)
                            alignItems="flex-center"
                            container={true}
                            direction="column"
                            item={true}
                            xs={12}
                          >
                            <ForwardRef(Paper)
                              elevation={1}
                              sx={
                                Object {
                                  "flexGrow": 1,
                                  "padding": "20px",
                                }
                              }
                            >
                              <ForwardRef(Typography)
                                className="makeStyles-subText-5"
                                variant="h6"
                              >
                                Task list is empty
                              </ForwardRef(Typography)>
                            </ForwardRef(Paper)>
                          </ForwardRef(Grid)>,
                          "className": "makeStyles-mainContainer-1",
                          "columnSpacing": 0,
                          "columns": 12,
                          "container": true,
                          "direction": "row",
                          "item": true,
                          "lg": false,
                          "md": false,
                          "rowSpacing": 0,
                          "sm": false,
                          "sx": Object {
                            "alignItems": "flex-start",
                          },
                          "wrap": "wrap",
                          "xl": false,
                          "xs": 12,
                          "zeroMinWidth": false,
                        }
                      }
                      sx={
                        Object {
                          "alignItems": "flex-start",
                        }
                      }
                    >
                      <Noop />
                      <div
                        className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-grid-xs-12 makeStyles-mainContainer-1 css-ksia33-MuiGrid-root"
                      >
                        <ForwardRef(Grid)
                          alignItems="flex-center"
                          container={true}
                          direction="column"
                          item={true}
                          xs={12}
                        >
                          <MuiGridRoot
                            as="div"
                            className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-direction-xs-column MuiGrid-grid-xs-12"
                            ownerState={
                              Object {
                                "children": Array [
                                  false,
                                  <ForwardRef(Paper)
                                    elevation={1}
                                    sx={
                                      Object {
                                        "flexGrow": 1,
                                        "padding": "20px",
                                      }
                                    }
                                  >
                                    <ForwardRef(Typography)
                                      className="makeStyles-subText-5"
                                      variant="h6"
                                    >
                                      Task list is empty
                                    </ForwardRef(Typography)>
                                  </ForwardRef(Paper)>,
                                ],
                                "columnSpacing": 0,
                                "columns": 12,
                                "container": true,
                                "direction": "column",
                                "item": true,
                                "lg": false,
                                "md": false,
                                "rowSpacing": 0,
                                "sm": false,
                                "sx": Object {
                                  "alignItems": "flex-center",
                                },
                                "wrap": "wrap",
                                "xl": false,
                                "xs": 12,
                                "zeroMinWidth": false,
                              }
                            }
                            sx={
                              Object {
                                "alignItems": "flex-center",
                              }
                            }
                          >
                            <Noop />
                            <div
                              className="MuiGrid-root MuiGrid-container MuiGrid-item MuiGrid-direction-xs-column MuiGrid-grid-xs-12 css-qcclf8-MuiGrid-root"
                            >
                              <ForwardRef(Paper)
                                elevation={1}
                                sx={
                                  Object {
                                    "flexGrow": 1,
                                    "padding": "20px",
                                  }
                                }
                              >
                                <MuiPaperRoot
                                  as="div"
                                  className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1"
                                  ownerState={
                                    Object {
                                      "children": <ForwardRef(Typography)
                                        className="makeStyles-subText-5"
                                        variant="h6"
                                      >
                                        Task list is empty
                                      </ForwardRef(Typography)>,
                                      "component": "div",
                                      "elevation": 1,
                                      "square": false,
                                      "sx": Object {
                                        "flexGrow": 1,
                                        "padding": "20px",
                                      },
                                      "variant": "elevation",
                                    }
                                  }
                                  sx={
                                    Object {
                                      "flexGrow": 1,
                                      "padding": "20px",
                                    }
                                  }
                                >
                                  <Noop />
                                  <div
                                    className="MuiPaper-root MuiPaper-elevation MuiPaper-rounded MuiPaper-elevation1 css-1ljic8r-MuiPaper-root"
                                  >
                                    <ForwardRef(Typography)
                                      className="makeStyles-subText-5"
                                      variant="h6"
                                    >
                                      <MuiTypographyRoot
                                        as="h6"
                                        className="MuiTypography-root MuiTypography-h6 makeStyles-subText-5"
                                        ownerState={
                                          Object {
                                            "align": "inherit",
                                            "children": "Task list is empty",
                                            "className": "makeStyles-subText-5",
                                            "color": undefined,
                                            "component": undefined,
                                            "gutterBottom": false,
                                            "noWrap": false,
                                            "paragraph": false,
                                            "sx": Object {
                                              "color": undefined,
                                            },
                                            "variant": "h6",
                                            "variantMapping": Object {
                                              "body1": "p",
                                              "body2": "p",
                                              "h1": "h1",
                                              "h2": "h2",
                                              "h3": "h3",
                                              "h4": "h4",
                                              "h5": "h5",
                                              "h6": "h6",
                                              "inherit": "p",
                                              "subtitle1": "h6",
                                              "subtitle2": "h6",
                                            },
                                          }
                                        }
                                        sx={
                                          Object {
                                            "color": undefined,
                                          }
                                        }
                                      >
                                        <Noop />
                                        <h6
                                          className="MuiTypography-root MuiTypography-h6 makeStyles-subText-5 css-2ulfj5-MuiTypography-root"
                                        >
                                          Task list is empty
                                        </h6>
                                      </MuiTypographyRoot>
                                    </ForwardRef(Typography)>
                                  </div>
                                </MuiPaperRoot>
                              </ForwardRef(Paper)>
                            </div>
                          </MuiGridRoot>
                        </ForwardRef(Grid)>
                      </div>
                    </MuiGridRoot>
                  </ForwardRef(Grid)>
                </div>
              </MuiGridRoot>
            </ForwardRef(Grid)>
          </div>
        </MuiContainerRoot>
      </ForwardRef(Container)>
    </Root>
  </Provider>
</ThemeProvider>
`;
